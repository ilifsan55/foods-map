[{"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/index.js":"1","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/reportWebVitals.js":"2","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/store.js":"3","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/appSlice.js":"4","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/mapSlice.js":"5","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/wheelSlice.js":"6","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/searchSlice.js":"7","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleicon.jsx":"8","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotpeppericon.jsx":"9","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleIcon.jsx":"10","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotPepperIcon.jsx":"11","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/appBar.jsx":"12","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx":"13","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js":"14","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gmap.jsx":"15","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/pages/mapPage.jsx":"16","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gMap.jsx":"17","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/searchBox.jsx":"18","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/views/mapView.jsx":"19","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js":"20","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultdrawer.jsx":"21","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultDrawer.jsx":"22","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultCard.jsx":"23"},{"size":973,"mtime":1668922237337,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1664590383636,"results":"26","hashOfConfig":"25"},{"size":471,"mtime":1668248787737,"results":"27","hashOfConfig":"25"},{"size":972,"mtime":1668934541907,"results":"28","hashOfConfig":"25"},{"size":798,"mtime":1668920835339,"results":"29","hashOfConfig":"25"},{"size":760,"mtime":1668003841380,"results":"30","hashOfConfig":"25"},{"size":1116,"mtime":1668516965019,"results":"31","hashOfConfig":"25"},{"size":458,"mtime":1668772808446,"results":"32","hashOfConfig":"25"},{"size":490,"mtime":1668777119907,"results":"33","hashOfConfig":"25"},{"size":546,"mtime":1669170066993,"results":"34","hashOfConfig":"25"},{"size":568,"mtime":1669170063541,"results":"35","hashOfConfig":"25"},{"size":4530,"mtime":1669170635568,"results":"36","hashOfConfig":"25"},{"size":4805,"mtime":1669170135646,"results":"37","hashOfConfig":"25"},{"size":2415,"mtime":1669198830822,"results":"38","hashOfConfig":"25"},{"size":487,"mtime":1668933288962,"results":"39","hashOfConfig":"25"},{"size":1103,"mtime":1669170002591,"results":"40","hashOfConfig":"25"},{"size":246,"mtime":1669170033774,"results":"41","hashOfConfig":"25"},{"size":2620,"mtime":1669170116344,"results":"42","hashOfConfig":"25"},{"size":1497,"mtime":1668921324109,"results":"43","hashOfConfig":"25"},{"size":5340,"mtime":1669170453000,"results":"44","hashOfConfig":"25"},{"size":3664,"mtime":1669031887476,"results":"45","hashOfConfig":"25"},{"size":3724,"mtime":1669040295832,"results":"46","hashOfConfig":"25"},{"size":3824,"mtime":1669040723654,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"ua7u1o",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"51"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"51"},"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/index.js",[],[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/reportWebVitals.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/store.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/appSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/mapSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/wheelSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/searchSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleicon.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotpeppericon.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleIcon.jsx",["125","126"],[],"import React from \"react\";\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Googleicon from '../../images/googlemap.png';\nimport GoogleiconGray from '../../images/googlemap_grayscale.png';\n\nexport function GoogleIcon (props) {\n  return (\n    <SvgIcon\n      component=\"span\"\n      sx={{transform: `scale(${props.size})`}}>\n\n      {props.checked ? \n        <img src={GoogleiconGray} alt=\"photo\" width=\"24\" height=\"24\"></img> \n        :\n        <img src={Googleicon} alt=\"photo\" width=\"24\" height=\"24\"></img>\n      }\n      \n    </SvgIcon>\n  );\n};","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotPepperIcon.jsx",["127","128"],[],"import React from \"react\";\nimport SvgIcon from '@mui/material/SvgIcon';\nimport HotPeppericon from '../../images/hotpepper.png';\nimport HotPeppericonGray from '../../images/hotpepper_grayscale.png';\n\n\nexport function HotPepperIcon(props) {\n  return (\n    <SvgIcon\n      component=\"span\"\n      sx={{transform: `scale(${props.size})`}}>\n      \n      {props.checked ? \n\n        <img src={HotPeppericonGray} alt=\"photo\" width=\"24\" height=\"24\"></img> \n        :\n        <img src={HotPeppericon} alt=\"photo\" width=\"24\" height=\"24\"></img>\n      }\n      \n    </SvgIcon>\n  );\n};","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/appBar.jsx",["129","130","131","132","133","134","135","136"],[],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport AppSlice, { appSlice } from '../../redux/appSlice';\nimport mapSlice from '../../redux/mapSlice';\nimport { searchSlice } from '../../redux/searchSlice';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Checkbox from '@mui/material/Checkbox';\nimport SearchBox from '../parts/searchBox';\n\nimport Grid from '@mui/material/Grid';\nimport ResultDrawer from './resultDrawer'\nimport Wheel from '../parts/wheel'\nimport { GoogleIcon } from '../parts/googleIcon'\nimport { trySearch } from '../logics/search';\nimport { HotPepperIcon } from '../parts/hotPepperIcon'\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\nimport { useTheme } from '@mui/material/styles';\nimport { auto } from '@popperjs/core';\n\n\n\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\n\nlet searchResults;\n\n\n\n\nconst PartyButton = styled(Button)(({ theme }) => ({\n\n  fontSize: '1.8rem',\n\n  padding: theme.spacing(0, 0, 0, 0),\n  textAlign: 'right',\n\n}))\n\nconst SearchResultsElementMemo = React.memo(props => {\n  return <ResultDrawer results={props.results}></ResultDrawer>;\n});\n\nconst WheelElementMemo = React.memo(props => {\n  return <Wheel trySearchFunc={props.trySearchFunc}></Wheel>;\n});\n\nexport default function AppBarTemplate() {\n\n  const inputValue = useSelector(state => state.app.inputValue);\n  const searchResults = useSelector(state => state.mapSlice.searchResults);\n  const useGoogle = useSelector(state => state.searchSlice.useGoogle);\n  const useHotPepper = useSelector(state => state.searchSlice.useHotPepper);\n  const dispatch = useDispatch();\n\n\n  \n  return (\n    <div>\n      <Box\n        sx={{ flexGrow: 1 }}>\n        <AppBar\n          position=\"static\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 100 }}\n        >\n          <Toolbar>\n            <Grid \n              container \n              spacing={1}\n              display=\"flex\"\n              justify=\"space-between\">\n            <Grid item xs={1} md={1}>\n              <IconButton\n                size=\"large\"\n                //edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => { dispatch(mapSlice.actions.setResultsListToggle()); }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Grid>\n\n            <Grid item xs={5} md={5}>\n              <SearchBox\n                example=\"例：\"\n                requestUserLocMethod={(bool) => { dispatch(mapSlice.actions.requestUserLoc(bool)); }}\n                searchMethod={() => {\n                 \n                  trySearch(inputValue,useGoogle,useHotPepper)\n                  .then((received) => (dispatch(mapSlice.actions.setSearchResults(received))))}}></SearchBox>\n            </Grid>\n\n            <Grid item xs={0} md={1}>\n              \n            </Grid>\n\n            <Grid item xs={4} md={2}>\n              <Checkbox\n                value={useGoogle} onChange={() => (dispatch(searchSlice.actions.useGoogleToggle()))}\n                icon={<GoogleIcon size={2} checked={false} />}\n                checkedIcon={<GoogleIcon size={2} checked={true} />}\n              />\n              <Checkbox\n                sx={{ ml: 3 }}\n                value={useHotPepper} onChange={() => (dispatch(searchSlice.actions.useHotPepperToggle()))}\n                icon={<HotPepperIcon size={2} checked={false} />}\n                checkedIcon={<HotPepperIcon size={2} checked={true}\n                />}\n              />\n            </Grid>\n\n            <Grid item xs={0} md={1}>\n              \n            </Grid>\n\n\n            <Grid item xs={1} md={1}>\n              <PartyButton\n                onClick={() => { dispatch(appSlice.actions.toggleWheel()) }}\n                color=\"warning\"\n                variant=\"contained\">🎯</PartyButton>\n            </Grid>\n            </Grid>\n\n          </Toolbar>\n        </AppBar>\n      </Box>\n\n      <SearchResultsElementMemo results={searchResults}></SearchResultsElementMemo>\n      <WheelElementMemo trySearchFunc={() => {\n                  trySearch(inputValue,useGoogle,useHotPepper)\n                  .then((received) => (dispatch(mapSlice.actions.setSearchResults(received))))}}></WheelElementMemo>\n    </div>\n  );\n}\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx",["137","138","139","140","141"],[],"import React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { appSlice } from '../../redux/appSlice';\nimport { wheelSlice } from '../../redux/wheelSlice';\nimport './style/wheel.css'\n\nlet countofSpins = 0;\n\nexport default function Wheel(props) {\n\n\n    let wheelToggle = useSelector(state => state.app.wheelToggle);\n    return (\n\n        <Drawer\n            anchor='right'\n            open={wheelToggle}\n            variant=\"persistent\"\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 600,\n                    height:600                }\n            }}\n        >\n\n            <Box>\n                <WheelMain trySearchFunc={props.trySearchFunc}></WheelMain>\n            </Box>\n        </Drawer>\n\n    )\n\n\n}\n\nfunction WheelMain(props) {\n\n    useEffect(() => {\n\n        \n    })\n\n    const wheelContentsSolo = ['ラーメン', 'カレー', 'ハンバーガー', '牛丼', 'そば', 'ドーナツ', 'うどん', '中華'];\n    const wheelContentsParty = ['焼肉', '回転寿司', 'イタリアン', 'ハンバーガー', '中華', '和食', 'ラーメン', 'インド料理'];\n\n\n    const colorCode = ['#FF6961', '#FFb480', '#F8f38d', '#42d6a4', '#08cad1', '#59adf6', '#9d94ff', '#c780e8'];\n    const wheelRadius = 200; // in px\n\n\n    let wheelRotation = useSelector(state => state.wheelSlice.wheelRotation);\n    let wheelState = useSelector(state => state.wheelSlice.wheelState);\n    let wheelContents = useSelector(state => state.wheelSlice.wheelContents);\n    const dispatch = useDispatch();\n\n    let styleObjectArray = [];\n    let degreePerContents = 360 / wheelContents.length;\n    let polygon = Math.tan(3.14 / wheelContents.length);\n    let sizeofEdge = polygon * wheelRadius;\n\n    wheelContents.forEach((value, index) => {\n\n        let colorCode_temp = colorCode[index]\n        if (colorCode_temp == undefined) {\n            colorCode_temp = '#FFFFFF';\n        }\n\n        let style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n            'left': `${wheelRadius - sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCode_temp} transparent`\n        }\n\n        styleObjectArray.push(style);\n    })\n\n\n    const wheelSpin = () => {\n\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n\n        countofSpins+=1;\n        let newSpin = 5000 * countofSpins;\n        console.log(newSpin);\n        let rndSpin = Math.floor(Math.random() * (360)) + 1;\n        let intervalID = setTimeout(() => { dispatch(wheelSlice.actions.setWheelState(0)); getResult(); }, 10000)\n        dispatch(wheelSlice.actions.setWheelState(1))\n        dispatch(wheelSlice.actions.setRotation(newSpin + rndSpin));\n\n    }\n    \n    const getResult = () => {\n        \n        let resultDegree = wheelRotation % 360;\n        let degreePerContent = 360 / wheelContents.length;\n        resultDegree -= degreePerContent / 2;\n        let result = 'Error';\n    \n        resultDegree = 360 - resultDegree;\n    \n        let temp = resultDegree / degreePerContent;\n    \n        temp = Math.floor(temp);\n        result = wheelContents[temp];\n\n        dispatch(appSlice.actions.handleInputField(result));\n        dispatch(appSlice.actions.toggleWheel());\n        props.trySearchFunc();\n        console.log(result);\n    \n\n      \n\n    }\n\n\n    const setToSolo = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsSolo));\n    }\n    const setToParty = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsParty));\n    }\n\n    return (\n        <div id='wrapper'>\n            <div id='buttonholder'>\n                <span onClick={setToSolo} id='button-1'>一人で</span>\n                <span onClick={setToParty} id='button-2'>みんなで</span>\n            </div>\n            <div id='tri'></div>\n            <div id='wheel' onClick={wheelSpin}>\n                <div id='inner-wheel' style={{\n                    transform: `rotate(${wheelRotation}deg)`,\n                }}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n                        key={index}\n                        id={`content${index}`}>\n                        <span>{value}</span></div>)}\n                </div>\n                <div id='mid-wheel' >\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gmap.jsx",["142","143","144"],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/pages/mapPage.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gMap.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/searchBox.jsx",["145"],[],"import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { appSlice } from '../../redux/appSlice';\n\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { styled, alpha } from '@mui/material/styles';\n\nimport MyLocationIcon from '@mui/icons-material/MyLocation';\nimport IconButton from '@mui/material/IconButton';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2000\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    width: '80%',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n    },\n}));\n\nexport default function SearchBox(props) {\n    /*\n    [props]\n    onChangeMethod\n    example\n    requestUserLocMethod\n    searchMethod\n    */\n\n    const dispatch = useDispatch();\n\n    return (\n        <Search>\n            <SearchIconWrapper>\n                <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={() => {\n                        props.searchMethod();\n                    }}\n                >\n                    <SearchIcon />\n                </IconButton>\n            </SearchIconWrapper>\n            <StyledInputBase\n\n                onChange={(e) => {dispatch(appSlice.actions.handleInputField(e.target.value)) }}\n                placeholder={props.example}\n                \n                onKeyDown={e => {\n                    if (e.key == 'Enter') {\n                        props.searchMethod();\n                    }\n                }}\n            />\n\n\n            <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"warning\"\n                aria-label=\"menu\"\n                onClick={() => { props.requestUserLocMethod(true) }}\n            >\n                <MyLocationIcon />\n            </IconButton>\n        </Search>\n\n\n    )\n}\n\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/views/mapView.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultdrawer.jsx",["146","147","148","149","150","151","152","153","154","155"],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultDrawer.jsx",["156","157","158","159","160","161","162","163"],[],"import React, { useEffect , useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mapSlice } from '../../redux/mapSlice';\nimport { width } from '@mui/system';\nimport ResultCard from './resultCard';\nimport { createMarker, deleteMarkers, deleteCircles,createCircle } from '../logics/map';\nimport { getMapObject } from '../logics/map';\nimport { getUserLocation } from '../parts/gMap';\n\nexport default function ResultDrawer(props) {\n\n    let searchResults = props.results.results;\n    let searchStatus = props.results.status;\n    let lat = props.results.lat;\n    let lng = props.results.lng;\n    let userCircle;\n    let resultsListToggle = useSelector(state => state.mapSlice.resultsListToggle);\n    const drawerRef = useRef();\n　　 console.log(searchResults);\n    console.log(searchStatus);\n\n\n    const scr = (amount) => {\n        drawerRef.current.children[0].scrollTop = amount;\n    }\n\n    return (\n\n        <Drawer\n            anchor='left'\n            open={resultsListToggle}\n            variant=\"persistent\"\n            ref={drawerRef}\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 400,\n                    height: 'calc(100vh - 62px)'\n                }\n            }}\n        >\n\n            <Box>\n                {(() => {\n                    const d = [];\n                    deleteMarkers();\n                    deleteCircles();\n                    \n                    if(searchStatus == 'INITIALIZED'){\n\n                        d.push(<ResultCard name='検索してみましょう' vicinity='😀' mode='noresults'></ResultCard>);\n                        return d;\n\n                    }\n\n                    createCircle(lat,lng,1000);\n                    if(searchStatus == 'NO_RESULTS'){\n\n                        d.push(<ResultCard name='何も見つかりませんでした。' vicinity='🥺' mode='noresults'></ResultCard>);\n                        return d;\n                    }\n\n                    \n                    for (let i = 0; i < searchResults.length; i++) {\n                        \n                        let r = searchResults[i];\n\n                        createMarker(r.lat,r.lng,i,scr,r.name);\n\n                        d.push(<ResultCard \n                            key={i}\n                            name={r.name} \n                            vicinity={r.vicinity} \n                            rating={r.rating} \n                            reviews={r.reviews}\n                            mode='data'\n                            eatfree={r.eatfree}\n                            drinkfree={r.drinkfree}\n                            parking={r.parking}\n                            card={r.card}\n                            rat={r.rat}\n                            privateroom={r.privateroom}\n                            google={r.google}\n                            hotpepper={r.hotpepper}\n                            lat={r.lat}\n                            lng={r.lng}\n                            photo={r.photo}\n                            onClickFunc={(lat,lng) => \n                                {let loc = {\n                                    lat: lat,\n                                    lng: lng\n                                };\n                                let map = getMapObject();\n                                map.panTo(loc);\n                                map.setZoom(18);}}\n                            ></ResultCard>);\n                        \n                    }\n                    return d;\n                })()}\n\n            </Box>\n        </Drawer>\n\n    )\n\n\n}\n\n\n\n/*\n   \n            \n*/\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultCard.jsx",["164","165","166","167","168","169","170","171","172","173","174","175"],[],"import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport Rating from '@mui/material/Rating';\nimport IconButton from '@mui/material/IconButton';\nimport { GoogleIcon } from '../parts/googleIcon';\nimport { HotPepperIcon } from '../parts/hotPepperIcon';\nimport { margin, maxWidth } from '@mui/system';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport TestImage from '../../images/neko.jpeg'\n\nexport default function ResultCard(props) {\n    return (\n        <Card \n        onClick={() => props.onClickFunc(props.lat,props.lng)}\n        sx={{\n            mb: 2,\n            height: props.mode == 'noresults' ? 200 : 300\n        }}>\n\n            {props.mode != 'noresults' &&\n                <CardMedia\n                    component=\"img\"\n                    height=\"150\"\n                    image={props.photo}\n                    alt=\"picture\"\n                />}\n\n\n\n            <CardContent>\n\n                <Grid container rowSpacing={0.2}s pacing={1}>\n                    <Grid item xs={12} md={12}>\n\n                        <Typography gutterBottom variant=\"h5ty\" \n                            component=\"div\"\n                            noWrap={true}\n                            sx={{ textAlign: 'center' }}>\n                                \n                            {props.name}\n                        </Typography>\n\n                    </Grid>\n\n                    <Grid item xs={12} md={12}>\n                        <Typography\n                            sx={{\n                                fontSize: props.mode == 'noresults' ? '5rem' : '0.8rem',\n                                textAlign: 'center',\n                                textOverflow: 'ellipsis'\n                            }}\n                            noWrap={true}\n                            color=\"text.secondary\">\n                            {props.vicinity}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} md={4}>\n                        {(props.mode != 'noresult' ?\n                        (props.google ?  <Rating name=\"read-only\" value={props.rating} precision={0.5} /> : \n                            <Rating disabled name=\"read-only\" value={0} precision={0.5} /> ) : <div>21e12</div>)}\n                        \n                    </Grid>\n\n                    <Grid item xs={2} md={2}>\n                        {props.mode != 'noresult' &&\n                        \n                            props.google ?  <Typography>{`(${props.rat})`}</Typography>:\n                            <Typography>(-)</Typography>\n                        \n                        }\n                    </Grid>\n\n\n                    <Grid item xs={6} md={6}>\n                        \n                    </Grid>\n\n                    <Grid item xs={1} md={1}>\n                        {props.google && <IconButton onClick={() => window.open(`http://www.${props.google}`, \"_blank\")}>\n                            <GoogleIcon size={1.5} />\n                        </IconButton>}\n                    </Grid>\n                    <Grid item xs={1} md={1}>\n                        {props.hotpepper && <IconButton onClick={() => window.open(`http://www.${props.hotpepper}`, \"_blank\")}>\n                            <HotPepperIcon size={1.5} />\n                        </IconButton>}\n                    </Grid>\n\n                    <Grid item xs={10} md={10}>\n\n                    </Grid>\n                </Grid>\n\n            </CardContent>\n        </Card>\n    );\n}",{"ruleId":"176","severity":1,"message":"177","line":13,"column":9,"nodeType":"178","endLine":13,"endColumn":70},{"ruleId":"176","severity":1,"message":"177","line":15,"column":9,"nodeType":"178","endLine":15,"endColumn":66},{"ruleId":"176","severity":1,"message":"177","line":15,"column":9,"nodeType":"178","endLine":15,"endColumn":73},{"ruleId":"176","severity":1,"message":"177","line":17,"column":9,"nodeType":"178","endLine":17,"endColumn":69},{"ruleId":"179","severity":1,"message":"180","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":7,"column":18,"nodeType":"181","messageId":"182","endLine":7,"endColumn":23},{"ruleId":"179","severity":1,"message":"184","line":23,"column":8,"nodeType":"181","messageId":"182","endLine":23,"endColumn":13},{"ruleId":"179","severity":1,"message":"185","line":24,"column":8,"nodeType":"181","messageId":"182","endLine":24,"endColumn":13},{"ruleId":"179","severity":1,"message":"186","line":25,"column":10,"nodeType":"181","messageId":"182","endLine":25,"endColumn":18},{"ruleId":"179","severity":1,"message":"187","line":26,"column":10,"nodeType":"181","messageId":"182","endLine":26,"endColumn":14},{"ruleId":"179","severity":1,"message":"188","line":30,"column":5,"nodeType":"181","messageId":"182","endLine":30,"endColumn":17},{"ruleId":"179","severity":1,"message":"189","line":35,"column":5,"nodeType":"181","messageId":"182","endLine":35,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":67,"column":28,"nodeType":"192","messageId":"193","endLine":67,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":85,"column":24,"nodeType":"192","messageId":"193","endLine":85,"endColumn":26},{"ruleId":"179","severity":1,"message":"194","line":94,"column":13,"nodeType":"181","messageId":"182","endLine":94,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":126,"column":24,"nodeType":"192","messageId":"193","endLine":126,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":133,"column":24,"nodeType":"192","messageId":"193","endLine":133,"endColumn":26},{"ruleId":"179","severity":1,"message":"195","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":18},{"ruleId":"179","severity":1,"message":"196","line":17,"column":7,"nodeType":"181","messageId":"182","endLine":17,"endColumn":13},{"ruleId":"179","severity":1,"message":"197","line":60,"column":17,"nodeType":"181","messageId":"182","endLine":60,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":77,"column":31,"nodeType":"192","messageId":"193","endLine":77,"endColumn":33},{"ruleId":"179","severity":1,"message":"198","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"199","line":4,"column":23,"nodeType":"181","messageId":"182","endLine":4,"endColumn":34},{"ruleId":"179","severity":1,"message":"200","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":18},{"ruleId":"179","severity":1,"message":"201","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"202","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":22},{"ruleId":"179","severity":1,"message":"203","line":8,"column":24,"nodeType":"181","messageId":"182","endLine":8,"endColumn":36},{"ruleId":"179","severity":1,"message":"204","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":22},{"ruleId":"179","severity":1,"message":"205","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":46,"column":37,"nodeType":"192","messageId":"193","endLine":46,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":53,"column":37,"nodeType":"192","messageId":"193","endLine":53,"endColumn":39},{"ruleId":"179","severity":1,"message":"198","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"199","line":4,"column":23,"nodeType":"181","messageId":"182","endLine":4,"endColumn":34},{"ruleId":"179","severity":1,"message":"200","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":18},{"ruleId":"179","severity":1,"message":"201","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"205","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":25},{"ruleId":"179","severity":1,"message":"206","line":18,"column":9,"nodeType":"181","messageId":"182","endLine":18,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":51,"column":37,"nodeType":"192","messageId":"193","endLine":51,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":59,"column":37,"nodeType":"192","messageId":"193","endLine":59,"endColumn":39},{"ruleId":"179","severity":1,"message":"207","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":19},{"ruleId":"179","severity":1,"message":"208","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"209","line":13,"column":10,"nodeType":"181","messageId":"182","endLine":13,"endColumn":16},{"ruleId":"179","severity":1,"message":"210","line":13,"column":18,"nodeType":"181","messageId":"182","endLine":13,"endColumn":26},{"ruleId":"179","severity":1,"message":"211","line":14,"column":8,"nodeType":"181","messageId":"182","endLine":14,"endColumn":11},{"ruleId":"179","severity":1,"message":"212","line":16,"column":8,"nodeType":"181","messageId":"182","endLine":16,"endColumn":18},{"ruleId":"179","severity":1,"message":"213","line":18,"column":8,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":26,"column":32,"nodeType":"192","messageId":"193","endLine":26,"endColumn":34},{"ruleId":"190","severity":1,"message":"214","line":29,"column":25,"nodeType":"192","messageId":"193","endLine":29,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":57,"column":54,"nodeType":"192","messageId":"193","endLine":57,"endColumn":56},{"ruleId":"190","severity":1,"message":"214","line":67,"column":38,"nodeType":"192","messageId":"193","endLine":67,"endColumn":40},{"ruleId":"190","severity":1,"message":"214","line":74,"column":37,"nodeType":"192","messageId":"193","endLine":74,"endColumn":39},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'AppSlice' is defined but never used.","Identifier","unusedVar","'alpha' is defined but never used.","'axios' is defined but never used.","'jsonp' is defined but never used.","'useTheme' is defined but never used.","'auto' is defined but never used.","'userLocation' is assigned a value but never used.","'searchResults' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'intervalID' is assigned a value but never used.","'appSlice' is defined but never used.","'radius' is assigned a value but never used.","'prm' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'mapSlice' is defined but never used.","'width' is defined but never used.","'createMarker' is defined but never used.","'createCircle' is defined but never used.","'getMapObject' is defined but never used.","'getUserLocation' is defined but never used.","'userCircle' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'margin' is defined but never used.","'maxWidth' is defined but never used.","'Box' is defined but never used.","'ButtonBase' is defined but never used.","'TestImage' is defined but never used.","Expected '!==' and instead saw '!='."]