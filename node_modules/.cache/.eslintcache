[{"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/index.js":"1","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/reportWebVitals.js":"2","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/store.js":"3","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/appSlice.js":"4","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/mapSlice.js":"5","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/wheelSlice.js":"6","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/searchSlice.js":"7","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleicon.jsx":"8","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotpeppericon.jsx":"9","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleIcon.jsx":"10","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotPepperIcon.jsx":"11","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/appBar.jsx":"12","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx":"13","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js":"14","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gmap.jsx":"15","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/pages/mapPage.jsx":"16","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gMap.jsx":"17","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/searchBox.jsx":"18","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/views/mapView.jsx":"19","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js":"20","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultdrawer.jsx":"21","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultDrawer.jsx":"22","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultCard.jsx":"23"},{"size":972,"mtime":1669515149224,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1664590383636,"results":"26","hashOfConfig":"25"},{"size":471,"mtime":1668248787737,"results":"27","hashOfConfig":"25"},{"size":972,"mtime":1669442462217,"results":"28","hashOfConfig":"25"},{"size":798,"mtime":1668920835339,"results":"29","hashOfConfig":"25"},{"size":760,"mtime":1668003841380,"results":"30","hashOfConfig":"25"},{"size":536,"mtime":1669443291375,"results":"31","hashOfConfig":"25"},{"size":458,"mtime":1668772808446,"results":"32","hashOfConfig":"25"},{"size":490,"mtime":1668777119907,"results":"33","hashOfConfig":"25"},{"size":546,"mtime":1669449564869,"results":"34","hashOfConfig":"25"},{"size":639,"mtime":1669514360346,"results":"35","hashOfConfig":"25"},{"size":4189,"mtime":1669515231330,"results":"36","hashOfConfig":"25"},{"size":4861,"mtime":1669515118129,"results":"37","hashOfConfig":"25"},{"size":2972,"mtime":1669444008414,"results":"38","hashOfConfig":"25"},{"size":487,"mtime":1668933288962,"results":"39","hashOfConfig":"25"},{"size":501,"mtime":1669514845832,"results":"40","hashOfConfig":"25"},{"size":246,"mtime":1669170033774,"results":"41","hashOfConfig":"25"},{"size":2750,"mtime":1669513386913,"results":"42","hashOfConfig":"25"},{"size":1497,"mtime":1668921324109,"results":"43","hashOfConfig":"25"},{"size":7085,"mtime":1669449880260,"results":"44","hashOfConfig":"25"},{"size":3664,"mtime":1669031887476,"results":"45","hashOfConfig":"25"},{"size":3868,"mtime":1669445554590,"results":"46","hashOfConfig":"25"},{"size":3819,"mtime":1669448966975,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ua7u1o",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/index.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/reportWebVitals.js",[],[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/store.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/appSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/mapSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/wheelSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/searchSlice.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleicon.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotpeppericon.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/googleIcon.jsx",["127","128"],[],"import React from \"react\";\nimport SvgIcon from '@mui/material/SvgIcon';\nimport Googleicon from '../../images/googlemap.png';\nimport GoogleiconGray from '../../images/googlemap_grayscale.png';\n\nexport function GoogleIcon (props) {\n  return (\n    <SvgIcon\n      component=\"span\"\n      sx={{transform: `scale(${props.size})`}}>\n\n      {props.checked ? \n        <img src={GoogleiconGray} alt=\"photo\" width=\"24\" height=\"24\"></img> \n        :\n        <img src={Googleicon} alt=\"photo\" width=\"24\" height=\"24\"></img>\n      }\n      \n    </SvgIcon>\n  );\n};","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/hotPepperIcon.jsx",["129","130"],[],"import React from \"react\";\nimport SvgIcon from '@mui/material/SvgIcon';\nimport HotPeppericon from '../../images/hotpepper.png';\nimport HotPeppericonGray from '../../images/hotpepper_grayscale.png';\n\n\nexport function HotPepperIcon(props) {\n  return (\n    <SvgIcon\n      component=\"div\"\n      sx={{textAlign: 'center',\n      verticalAlign: 'bottom',\n      transform: `scale(${props.size})`}}>\n      \n      {props.checked ? \n\n        <img src={HotPeppericonGray} alt=\"photo\" width=\"24\" height=\"24\"></img> \n        :\n        <img src={HotPeppericon} alt=\"photo\" width=\"24\" height=\"24\" sx={{top:-3}}></img>\n      }\n      \n    </SvgIcon>\n  );\n};","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/appBar.jsx",["131","132","133","134","135","136","137","138","139","140"],[],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppSlice, { appSlice } from '../../redux/appSlice';\nimport mapSlice from '../../redux/mapSlice';\nimport { searchSlice } from '../../redux/searchSlice';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport FavIcon from '@mui/icons-material/FavoriteOutlined';\nimport Checkbox from '@mui/material/Checkbox';\nimport SearchBox from '../parts/searchBox';\nimport Grid from '@mui/material/Grid';\nimport ResultDrawer from './resultDrawer'\nimport Wheel from '../parts/wheel'\nimport { GoogleIcon } from '../parts/googleIcon'\nimport { trySearch } from '../logics/search';\nimport { HotPepperIcon } from '../parts/hotPepperIcon'\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\nimport { useTheme } from '@mui/material/styles';\nimport { auto } from '@popperjs/core';\n\n\n\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\n\nlet searchResults;\n\n\n\n\nconst PartyButton = styled(Button)(({ theme }) => ({\n\n  fontSize: '1.8rem',\n  padding: theme.spacing(0, 0, 0, 0),\n  textAlign: 'right',\n  marginLeft: 'auto'\n}))\n\nconst SearchResultsElementMemo = React.memo(props => {\n  return <ResultDrawer results={props.results}></ResultDrawer>;\n});\n\nconst WheelElementMemo = React.memo(props => {\n  return <Wheel trySearchFunc={props.trySearchFunc}></Wheel>;\n});\n\nexport default function AppBarTemplate() {\n\n  const inputValue = useSelector(state => state.app.inputValue);\n  const searchResults = useSelector(state => state.mapSlice.searchResults);\n  const useGoogle = useSelector(state => state.searchSlice.useGoogle);\n  const useHotPepper = useSelector(state => state.searchSlice.useHotPepper);\n  const dispatch = useDispatch();\n\n  \n\n  \n  return (\n    <div>\n      <Box>\n        <AppBar\n          position=\"static\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 100 }}\n        >\n          <Toolbar>\n\n              <IconButton\n                size=\"large\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => { dispatch(mapSlice.actions.setResultsListToggle()); }}\n                edge=\"start\"\n              >\n                <MenuIcon />\n              </IconButton>\n            \n              <SearchBox\n                example=\"例：\"\n                requestUserLocMethod={(bool) => { dispatch(mapSlice.actions.requestUserLoc(bool)); }}\n                searchMethod={() => {\n                 \n                  trySearch(inputValue,useGoogle,useHotPepper)\n                  .then((received) => (dispatch(mapSlice.actions.setSearchResults(received)))).catch()}}></SearchBox>\n\n            \n              <Checkbox\n                value={useGoogle} onChange={() => (dispatch(searchSlice.actions.useGoogleToggle()))}\n                icon={<GoogleIcon size={2} checked={false} />}\n                checkedIcon={<GoogleIcon size={2} checked={true}/>}\n                sx={{ ml: 5 }}\n                edge=\"start\"\n              />\n\n              <Checkbox\n                sx={{ ml: 5 }}\n                value={useHotPepper} onChange={() => (dispatch(searchSlice.actions.useHotPepperToggle()))}\n                icon={<HotPepperIcon size={2} checked={false} />}\n                checkedIcon={<HotPepperIcon size={2} checked={true}/>}\n                edge=\"start\"\n              />\n                \n\n              <PartyButton\n\n                onClick={() => { dispatch(appSlice.actions.toggleWheel()) }}\n                color=\"warning\"\n                edge=\"start\"\n                variant=\"contained\">🎯</PartyButton>\n\n          </Toolbar>\n        </AppBar>\n      </Box>\n\n      <SearchResultsElementMemo results={searchResults}></SearchResultsElementMemo>\n      <WheelElementMemo trySearchFunc={(res) => {\n                  trySearch(res,useGoogle,useHotPepper)\n                  .then((received) => (dispatch(mapSlice.actions.setSearchResults(received))))}}></WheelElementMemo>\n    </div>\n  );\n}\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx",["141","142","143","144","145","146","147"],[],"import React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { appSlice } from '../../redux/appSlice';\nimport { wheelSlice } from '../../redux/wheelSlice';\nimport './style/wheel.css'\n\nlet countofSpins = 0;\n\nexport default function Wheel(props) {\n\n    let wheelToggle = useSelector(state => state.app.wheelToggle);\n \n    return (\n\n        <Drawer\n            anchor='right'\n            open={wheelToggle}\n            variant=\"persistent\"\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 600,\n                    height: 600,\n                    }\n            }}\n        >\n\n            <Box>\n                <WheelMain  trySearchFunc={props.trySearchFunc}></WheelMain>\n            </Box>\n        </Drawer>\n    )\n\n}\n\nfunction resizeWheel () {\n\n}\n\nfunction WheelMain(props) {\n\n    const wheelContentsSolo = ['ラーメン', 'カレー', 'ハンバーガー', '牛丼', 'そば', 'ドーナツ', 'うどん', '中華'];\n    const wheelContentsParty = ['焼肉', '回転寿司', 'イタリアン', 'ハンバーガー', '中華', '和食', 'ラーメン', 'インド料理'];\n    console.log(\"wheel is rendered\");\n\n    const colorCode = ['#FF6961', '#FFb480', '#F8f38d', '#42d6a4', '#08cad1', '#59adf6', '#9d94ff', '#c780e8'];\n    const wheelRadius = 200; // in px\n\n\n    let wheelRotation = useSelector(state => state.wheelSlice.wheelRotation);\n    let wheelState = useSelector(state => state.wheelSlice.wheelState);\n    let wheelContents = useSelector(state => state.wheelSlice.wheelContents);\n    const dispatch = useDispatch();\n    let styleObjectArray = [];\n    let degreePerContents = 360 / wheelContents.length;\n    let polygon = Math.tan(3.14 / wheelContents.length);\n    let sizeofEdge = polygon * wheelRadius;\n\n    wheelContents.forEach((value, index) => {\n\n        let colorCode_temp = colorCode[index]\n        if (colorCode_temp == undefined) {\n            colorCode_temp = '#FFFFFF';\n        }\n\n        let style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n            'left': `${wheelRadius - sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCode_temp} transparent`\n        }\n\n        styleObjectArray.push(style);\n    })\n\n\n    const wheelSpin = () => {\n\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n\n        countofSpins+=1;\n        let rndSpin = Math.floor(Math.random() * (360)) + 1;\n        let newSpin = (5000 * countofSpins) + rndSpin;\n        dispatch(wheelSlice.actions.setWheelState(1))\n        dispatch(wheelSlice.actions.setRotation(newSpin));\n\n        let intervalID = setTimeout(() => { dispatch(wheelSlice.actions.setWheelState(0)); getResult(newSpin); }, 10000)\n        \n\n    }\n    \n    const getResult = (spin) => {\n        \n        let resultDegree = spin % 360; //clamping WheelRotation to 0 between 360\n        let degreePerContent = 360 / wheelContents.length; //the size of each pies\n\n        resultDegree -= degreePerContent / 2; //handling negative numbers\n\n        resultDegree = 360 - resultDegree;\n    \n        let temp = resultDegree / degreePerContent;\n    \n        temp = Math.floor(temp);\n\n        let result = wheelContents[temp];\n\n        dispatch(appSlice.actions.handleInputField(result));\n        dispatch(appSlice.actions.toggleWheel());\n        props.trySearchFunc(result);\n\n\n      \n\n    }\n\n\n    const setToSolo = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsSolo));\n    }\n    const setToParty = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsParty));\n    }\n\n    return (\n        <div id='wrapper'>\n            <div id='buttonholder'>\n                <span onClick={setToSolo} id='button-1'>一人で</span>\n                <span onClick={setToParty} id='button-2'>みんなで</span>\n            </div>\n            <div id='tri'></div>\n            <div id='wheel' onClick={wheelSpin}>\n                <div id='inner-wheel' style={{\n                    transform: `rotate(${wheelRotation}deg)`,\n                }}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n                        key={index}\n                        id={`content${index}`}>\n                        <span>{value}</span></div>)}\n                </div>\n                <div id='mid-wheel' >\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gmap.jsx",["148","149","150"],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/pages/mapPage.jsx",["151"],[],"import React, {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport MapView from '../views/mapView';\n\n\nfunction MapPage() {\n\n   \n    let appState = useSelector(state => state.app.appState);\n    let drawElement;\n\n    \n    if (appState === 0) {\n\n        drawElement = <MapView></MapView>\n\n    } else if (appState === 1) {\n\n\n    } else if (appState === 2) {\n\n    }\n\n    return (\n        <div className='App'>\n            {drawElement}\n        </div>\n    );\n}\n\n\nexport default MapPage;","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/gMap.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/searchBox.jsx",["152"],[],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appSlice } from '../../redux/appSlice';\n\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { styled, alpha } from '@mui/material/styles';\n\nimport MyLocationIcon from '@mui/icons-material/MyLocation';\nimport IconButton from '@mui/material/IconButton';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '55%',\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2000\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    width: 'calc(100% - 48px)',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n    },\n}));\n\nexport default function SearchBox(props) {\n\n    /*\n    [props]\n    onChangeMethod\n    example\n    requestUserLocMethod\n    searchMethod\n    */\n\n    const dispatch = useDispatch();\n    const inputValue = useSelector(state => state.app.inputValue);\n    return (\n        <Search>\n            <SearchIconWrapper>\n                <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"search\"\n                    onClick={() => {\n                        props.searchMethod();\n                    }}\n                >\n                    <SearchIcon />\n                </IconButton>\n            </SearchIconWrapper>\n            <StyledInputBase\n\n                onChange={(e) => {dispatch(appSlice.actions.handleInputField(e.target.value)) }}\n                placeholder={props.example}\n                value={inputValue}\n                \n                onKeyDown={e => {\n                    if (e.key == 'Enter') {\n                        props.searchMethod();\n                    }\n                }}\n            />\n\n\n            <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"warning\"\n                aria-label=\"menu\"\n                onClick={() => { props.requestUserLocMethod(true) }}\n            >\n                <MyLocationIcon />\n            </IconButton>\n        </Search>\n\n\n    )\n}\n\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/views/mapView.jsx",[],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js",["153","154","155","156","157"],[],"\nimport { getServiceObject, getCenter } from './map';\nimport { doGoogleMapSearchPromise } from '../logics/map';\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\n\nlet searchStatus = 'READY';\n\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n\n    return new Promise((resolve, reject) => {\n\n\n        if (searchStatus !== 'READY') {\n\n            throw 'now searching';\n        }\n        searchStatus = 'BUSY';\n        console.log(keyword + ':search start');\n        let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n\n        let req = {\n            keyword: keyword,\n            radius: 500,\n            userLoc: getCenter()\n        };\n\n        if (!useGoogle && !useHotPepper)\n            return;\n\n        if (useHotPepper) {\n\n            promiseHotPepper = axios.get(createHotPepperRequest(req), {\n                adapter: jsonp\n            }).then((response) => {\n\n                responseHotPepper = perseHotPepperResults(response);\n\n            });\n        }\n\n        if (useGoogle) {\n\n            promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then((response) => {\n\n                responseGoogle = perseGoogleResults(response);\n\n            }).catch((status) => {\n\n                responseGoogle = perseGoogleResults(status);\n\n            })\n        }\n\n        Promise.all([promiseGoogle, promiseHotPepper]).then((message) => {\n\n            if (!useGoogle)\n                responseGoogle = 'NO_RESULTS';\n\n            if (!useHotPepper)\n                responseHotPepper = 'NO_RESULTS';\n\n            let res = combineResults(responseGoogle, responseHotPepper, req.userLoc);\n\n            resolve(res);\n\n        })\n    })\n}\n\nexport function createGoogleRequest(req) {\n\n    let request = {\n\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        language: 'ja',\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}\n\nexport function createHotPepperRequest(req) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    let lat = req.userLoc.lat();\n    let lng = req.userLoc.lng();\n    let keyword = req.keyword;\n    const apiURL = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n\n    return apiURL;\n}\n\nfunction similarity(str1, str2) {\n    let longer = str1;\n    let shorter = str2;\n    if (str1.length < str2.length) {\n        longer = str2;\n        shorter = str1;\n    }\n    var longerLength = longer.length;\n    if (longerLength == 0) {\n        return 1.0;\n    }\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nfunction editDistance(str1, str2) {\n\n    let costs = [];\n    for (let i = 0; i <= str1.length; i++) {\n        let lastValue = i;\n        for (let j = 0; j <= str2.length; j++) {\n            if (i == 0)\n                costs[j] = j;\n            else {\n                if (j > 0) {\n                    let newValue = costs[j - 1];\n                    if (str1.charAt(i - 1) != str2.charAt(j - 1))\n                        newValue = Math.min(Math.min(newValue, lastValue),\n                            costs[j]) + 1;\n                    costs[j - 1] = lastValue;\n                    lastValue = newValue;\n                }\n            }\n        }\n        if (i > 0)\n            costs[str2.length] = lastValue;\n    }\n    return costs[str2.length];\n}\n\nexport function combineResults(res1, res2, loc) {\n\n    let results, status;\n    let itemsShouldbeSpliced = [];\n\n    let itemsShouldbeUnShifted = [];\n\n    if (res1 === 'NO_RESULTS' && res2 === 'NO_RESULTS') {\n        status = 'NO_RESULTS';\n        results = [];\n    } else if (res2 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res1;\n    } else if (res1 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res2;\n    } else {\n        for (let i = 0; i < res1.length; i++) {\n            for (let j = 0; j < res2.length; j++) {\n                let sim = similarity(res1[i].name, res2[j].name);\n                if (sim > 0.5) {\n                    res1[i].hotpepper = res2[j].hotpepper;\n                    itemsShouldbeSpliced.push(j);\n                    itemsShouldbeUnShifted.push(i);\n                    console.log(\"detected\");\n                }\n            }\n        }\n\n        status = 'DONE';\n        for (let i = 0; i < itemsShouldbeSpliced.length; i++) {\n\n            res2.splice(itemsShouldbeSpliced[i], 1);\n        }\n        /*for (let i = 0; i < itemsShouldbeUnShifted.length; i++) {\n\n            res1.unshift(res1[itemsShouldbeUnShifted[i]]);\n\n            res1.splice(itemsShouldbeUnShifted[i+1], 1);\n        }*/\n        results = res1.concat(res2);\n    }\n\n    let res = {\n        status: status,\n        results: results,\n        lat: loc.lat(),\n        lng: loc.lng()\n    }\n    searchStatus = 'WAITING';\n    let timeout = setTimeout(() => { searchStatus = 'READY' }, 3000);\n    console.log(res);\n    return res;\n\n}\n\nexport function perseGoogleResults(results) {\n\n    let result_temp = {};\n    let parsedResults = [];\n\n    if (results === 'ZERO_RESULTS') {\n\n        return 'NO_RESULTS';\n\n    }\n\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        result_temp.type = 1;\n        result_temp.rat = result.user_ratings_total;\n        result_temp.google = 'we_are_still_working_on_it.sry';\n        result_temp.photo = result.photos[0].getUrl();\n\n        /*axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n            adapter: jsonp\n        }).then((response) => {\n\n            console.log(response);\n            result_temp.google = response.url;\n\n        });*/\n\n        //cors error occurs\n\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\n\nexport function perseHotPepperResults(res) {\n\n    let result_temp = {};\n    let parsedResults = [];\n    let results = res.data.results.shop;\n\n    if (res.data.results.shop.length <= 0) {\n\n        return 'NO_RESULTS';\n\n    }\n\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n        result_temp.name = result.name;\n        result_temp.vicinity = result.address;\n        result_temp.rating = 5;\n        result_temp.lat = result.lat;\n        result_temp.lng = result.lng;\n        result_temp.type = 2;\n        result_temp.photo = result.photo.mobile.l;\n        result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n        parsedResults.push(result_temp);\n\n    }\n\n    return parsedResults;\n\n}\n\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultdrawer.jsx",["158","159","160","161","162","163","164","165","166","167"],[],"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultDrawer.jsx",["168","169","170","171","172"],[],"import React, { useEffect , useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mapSlice } from '../../redux/mapSlice';\nimport { width } from '@mui/system';\nimport ResultCard from './resultCard';\nimport { createMarker, deleteMarkers, deleteCircles,createCircle } from '../logics/map';\nimport { getMapObject } from '../logics/map';\nimport { getUserLocation } from '../parts/gMap';\n\nexport default function ResultDrawer(props) {\n\n    console.log('drawe');\n    let searchResults = props.results.results;\n    let searchStatus = props.results.status;\n    let lat = props.results.lat;\n    let lng = props.results.lng;\n    const dispatch = useDispatch();\n    let resultsListToggle = useSelector(state => state.mapSlice.resultsListToggle);\n    const drawerRef = useRef();\n\n    const scrollFunc = (amount) => {\n        drawerRef.current.children[0].scrollTop = amount;\n    }\n    const openFunc = () =>{\n\n        if(!resultsListToggle)\n            dispatch(mapSlice.actions.setResultsListToggle());\n\n    }\n\n    return (\n\n        <Drawer\n            anchor='left'\n            open={resultsListToggle}\n            variant=\"persistent\"\n            ref={drawerRef}\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 400,\n                    height: 'calc(100vh - 62px)'\n                }\n            }}\n        >\n\n            <Box>\n                {(() => {\n                    const d = [];\n                    deleteMarkers();\n                    deleteCircles();\n                    \n                    if(searchStatus == 'INITIALIZED'){\n\n                        d.push(<ResultCard name='検索してみましょう' key={0} vicinity='😀' mode='noresults'></ResultCard>);\n                        return d;\n\n                    }\n\n                    createCircle(lat,lng,1000);\n                    if(searchStatus == 'NO_RESULTS'){\n\n                        d.push(<ResultCard name='何も見つかりませんでした。' key={0} vicinity='🥺' mode='noresults'></ResultCard>);\n                        return d;\n                    }\n\n                    \n                    for (let i = 0; i < searchResults.length; i++) {\n                        \n                        let r = searchResults[i];\n\n                        createMarker(r.lat,r.lng,i,scrollFunc,openFunc,r.name);\n\n                        d.push(<ResultCard \n                            key={i}\n                            name={r.name} \n                            vicinity={r.vicinity} \n                            rating={r.rating} \n                            reviews={r.reviews}\n                            mode='data'\n                            eatfree={r.eatfree}\n                            drinkfree={r.drinkfree}\n                            parking={r.parking}\n                            card={r.card}\n                            rat={r.rat}\n                            privateroom={r.privateroom}\n                            google={r.google}\n                            hotpepper={r.hotpepper}\n                            lat={r.lat}\n                            lng={r.lng}\n                            photo={r.photo}\n                            onClickFunc={(lat,lng) => \n                                {let loc = {\n                                    lat: lat,\n                                    lng: lng\n                                };\n                                let map = getMapObject();\n                                map.panTo(loc);\n                                map.setZoom(18);}}\n                            ></ResultCard>);\n                        \n                    }\n                    return d;\n                })()}\n\n            </Box>\n        </Drawer>\n\n    )\n\n\n}\n\n\n\n/*\n   \n            \n*/\n","/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/templates/resultCard.jsx",["173","174","175","176","177","178","179","180","181","182","183","184"],[],"import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport Rating from '@mui/material/Rating';\nimport IconButton from '@mui/material/IconButton';\nimport { GoogleIcon } from '../parts/googleIcon';\nimport { HotPepperIcon } from '../parts/hotPepperIcon';\nimport { margin, maxWidth } from '@mui/system';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport TestImage from '../../images/neko.jpeg'\n\nexport default function ResultCard(props) {\n    return (\n        <Card \n        onClick={() => props.onClickFunc(props.lat,props.lng)}\n        sx={{\n            mb: 2,\n            height: props.mode == 'noresults' ? 200 : 300\n        }}>\n\n            {props.mode != 'noresults' &&\n                <CardMedia\n                    component=\"img\"\n                    height=\"150\"\n                    image={props.photo}\n                    alt=\"picture\"\n                />}\n\n\n\n            <CardContent>\n\n                <Grid container rowSpacing={0.2}s pacing={1}>\n                    <Grid item xs={12} md={12}>\n\n                        <Typography gutterBottom variant=\"h5ty\" \n                            component=\"div\"\n                            noWrap={true}\n                            sx={{ textAlign: 'center' }}>\n                                \n                            {props.name}\n                        </Typography>\n\n                    </Grid>\n\n                    <Grid item xs={12} md={12}>\n                        <Typography\n                            sx={{\n                                fontSize: props.mode == 'noresults' ? '5rem' : '0.8rem',\n                                textAlign: 'center',\n                                textOverflow: 'ellipsis'\n                            }}\n                            noWrap={true}\n                            color=\"text.secondary\">\n                            {props.vicinity}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={4} md={4}>\n                        {(props.mode != 'noresult' ?\n                        (props.google ?  <Rating name=\"read-only\" value={props.rating} precision={0.5} /> : \n                            <Rating disabled name=\"read-only\" value={0} precision={0.5} /> ) : <div>21e12</div>)}\n                        \n                    </Grid>\n\n                    <Grid item xs={2} md={2}>\n                        {props.mode != 'noresult' &&\n                        \n                            props.google ?  <Typography>{`(${props.rat})`}</Typography>:\n                            <Typography>(-)</Typography>\n                        \n                        }\n                    </Grid>\n\n\n                    <Grid item xs={6} md={6}>\n                        \n                    </Grid>\n\n                    <Grid item xs={2} md={2}>\n                        {props.google && <IconButton onClick={() => window.open(`http://www.google.com`, \"_blank\")}>\n                            <GoogleIcon size={1.5} />\n                        </IconButton>}\n                    </Grid>\n                    <Grid item xs={2} md={2}>\n                        {props.hotpepper && <IconButton onClick={() => window.open(`http://www.${props.hotpepper}`, \"_blank\")}>\n                            <HotPepperIcon size={1.5} />\n                        </IconButton>}\n                    </Grid>\n\n                    <Grid item xs={10} md={10}>\n\n                    </Grid>\n                </Grid>\n\n            </CardContent>\n        </Card>\n    );\n}",{"ruleId":"185","severity":1,"message":"186","line":13,"column":9,"nodeType":"187","endLine":13,"endColumn":70},{"ruleId":"185","severity":1,"message":"186","line":15,"column":9,"nodeType":"187","endLine":15,"endColumn":66},{"ruleId":"185","severity":1,"message":"186","line":17,"column":9,"nodeType":"187","endLine":17,"endColumn":73},{"ruleId":"185","severity":1,"message":"186","line":19,"column":9,"nodeType":"187","endLine":19,"endColumn":83},{"ruleId":"188","severity":1,"message":"189","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"188","severity":1,"message":"192","line":6,"column":18,"nodeType":"190","messageId":"191","endLine":6,"endColumn":23},{"ruleId":"188","severity":1,"message":"193","line":13,"column":8,"nodeType":"190","messageId":"191","endLine":13,"endColumn":15},{"ruleId":"188","severity":1,"message":"194","line":16,"column":8,"nodeType":"190","messageId":"191","endLine":16,"endColumn":12},{"ruleId":"188","severity":1,"message":"195","line":22,"column":8,"nodeType":"190","messageId":"191","endLine":22,"endColumn":13},{"ruleId":"188","severity":1,"message":"196","line":23,"column":8,"nodeType":"190","messageId":"191","endLine":23,"endColumn":13},{"ruleId":"188","severity":1,"message":"197","line":24,"column":10,"nodeType":"190","messageId":"191","endLine":24,"endColumn":18},{"ruleId":"188","severity":1,"message":"198","line":25,"column":10,"nodeType":"190","messageId":"191","endLine":25,"endColumn":14},{"ruleId":"188","severity":1,"message":"199","line":29,"column":5,"nodeType":"190","messageId":"191","endLine":29,"endColumn":17},{"ruleId":"188","severity":1,"message":"200","line":34,"column":5,"nodeType":"190","messageId":"191","endLine":34,"endColumn":18},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"202","line":38,"column":10,"nodeType":"190","messageId":"191","endLine":38,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":64,"column":28,"nodeType":"205","messageId":"206","endLine":64,"endColumn":30},{"ruleId":"203","severity":1,"message":"204","line":82,"column":24,"nodeType":"205","messageId":"206","endLine":82,"endColumn":26},{"ruleId":"188","severity":1,"message":"207","line":93,"column":13,"nodeType":"190","messageId":"191","endLine":93,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":124,"column":24,"nodeType":"205","messageId":"206","endLine":124,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":131,"column":24,"nodeType":"205","messageId":"206","endLine":131,"endColumn":26},{"ruleId":"188","severity":1,"message":"208","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"209","line":17,"column":7,"nodeType":"190","messageId":"191","endLine":17,"endColumn":13},{"ruleId":"188","severity":1,"message":"210","line":60,"column":17,"nodeType":"190","messageId":"191","endLine":60,"endColumn":20},{"ruleId":"188","severity":1,"message":"201","line":1,"column":16,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":79,"column":31,"nodeType":"205","messageId":"206","endLine":79,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":16,"column":13,"nodeType":"213","messageId":"214","endLine":16,"endColumn":35},{"ruleId":"203","severity":1,"message":"204","line":105,"column":22,"nodeType":"205","messageId":"206","endLine":105,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":117,"column":19,"nodeType":"205","messageId":"206","endLine":117,"endColumn":21},{"ruleId":"203","severity":1,"message":"215","line":122,"column":44,"nodeType":"205","messageId":"206","endLine":122,"endColumn":46},{"ruleId":"188","severity":1,"message":"216","line":186,"column":9,"nodeType":"190","messageId":"191","endLine":186,"endColumn":16},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"217","line":4,"column":23,"nodeType":"190","messageId":"191","endLine":4,"endColumn":34},{"ruleId":"188","severity":1,"message":"218","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":18},{"ruleId":"188","severity":1,"message":"219","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"220","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":22},{"ruleId":"188","severity":1,"message":"221","line":8,"column":24,"nodeType":"190","messageId":"191","endLine":8,"endColumn":36},{"ruleId":"188","severity":1,"message":"222","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":22},{"ruleId":"188","severity":1,"message":"223","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":46,"column":37,"nodeType":"205","messageId":"206","endLine":46,"endColumn":39},{"ruleId":"203","severity":1,"message":"204","line":53,"column":37,"nodeType":"205","messageId":"206","endLine":53,"endColumn":39},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"219","line":6,"column":10,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"223","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":55,"column":37,"nodeType":"205","messageId":"206","endLine":55,"endColumn":39},{"ruleId":"203","severity":1,"message":"204","line":63,"column":37,"nodeType":"205","messageId":"206","endLine":63,"endColumn":39},{"ruleId":"188","severity":1,"message":"224","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":19},{"ruleId":"188","severity":1,"message":"225","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":14},{"ruleId":"188","severity":1,"message":"226","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"188","severity":1,"message":"227","line":13,"column":18,"nodeType":"190","messageId":"191","endLine":13,"endColumn":26},{"ruleId":"188","severity":1,"message":"228","line":14,"column":8,"nodeType":"190","messageId":"191","endLine":14,"endColumn":11},{"ruleId":"188","severity":1,"message":"229","line":16,"column":8,"nodeType":"190","messageId":"191","endLine":16,"endColumn":18},{"ruleId":"188","severity":1,"message":"230","line":18,"column":8,"nodeType":"190","messageId":"191","endLine":18,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":26,"column":32,"nodeType":"205","messageId":"206","endLine":26,"endColumn":34},{"ruleId":"203","severity":1,"message":"215","line":29,"column":25,"nodeType":"205","messageId":"206","endLine":29,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":57,"column":54,"nodeType":"205","messageId":"206","endLine":57,"endColumn":56},{"ruleId":"203","severity":1,"message":"215","line":67,"column":38,"nodeType":"205","messageId":"206","endLine":67,"endColumn":40},{"ruleId":"203","severity":1,"message":"215","line":74,"column":37,"nodeType":"205","messageId":"206","endLine":74,"endColumn":39},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'AppSlice' is defined but never used.","Identifier","unusedVar","'alpha' is defined but never used.","'FavIcon' is defined but never used.","'Grid' is defined but never used.","'axios' is defined but never used.","'jsonp' is defined but never used.","'useTheme' is defined but never used.","'auto' is defined but never used.","'userLocation' is assigned a value but never used.","'searchResults' is defined but never used.","'useEffect' is defined but never used.","'resizeWheel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'intervalID' is assigned a value but never used.","'appSlice' is defined but never used.","'radius' is assigned a value but never used.","'prm' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Expected '!==' and instead saw '!='.","'timeout' is assigned a value but never used.","'useDispatch' is defined but never used.","'mapSlice' is defined but never used.","'width' is defined but never used.","'createMarker' is defined but never used.","'createCircle' is defined but never used.","'getMapObject' is defined but never used.","'getUserLocation' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'margin' is defined but never used.","'maxWidth' is defined but never used.","'Box' is defined but never used.","'ButtonBase' is defined but never used.","'TestImage' is defined but never used."]