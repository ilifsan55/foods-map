{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearch, createRequest } from './mapapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet shouldMapInitialize = true;\nconst radius = 1000;\n\nasync function asyncCall(req, loc) {\n  const result = await searchPlaces(req, loc);\n  return result;\n}\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const searchRequest = useSelector(state => state.app.searchRequest);\n  const GmapMemo = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  });\n\n  if (searchRequest.isDone == false) {\n    dispatch(appSlice.actions.setRequestDone());\n    let req = createRequest(searchRequest, props.userLoc);\n    doGoogleMapSearchPromise(req).then(response => {\n      let res = resultsParser(response); //places found! put them into parser to parse them for easier prossesing.\n\n      dispatch(resultListSlice.actions.setSearchResult(res));\n    }).catch(status => {\n      let res = resultsParser(0); //error in searching.\n\n      dispatch(resultListSlice.actions.setSearchResult(res));\n    });\n  }\n\n  useEffect(() => {\n    if (shouldMapInitialize) {\n      map = initMap(document.getElementById('map'), props.userLoc, props.radius);\n      service = initService(map);\n      shouldMapInitialize = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"sc9UXUIjK8lcBhZr4AuuKVadzTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GMap;\n\nfunction CreateMarker(place, index) {\n  let marker = new window.google.maps.Marker({\n    map: map,\n    label: String(index),\n    position: place.geometry.location\n  });\n}\n\n_c2 = CreateMarker;\n\nfunction resultsParser(results) {\n  let parsedResults = [];\n\n  if (results == 0 || results.length <= 0) {\n    let result_temp = {};\n    result_temp.name = '何も見つかりませんでした。';\n    result_temp.vicinity = '';\n    result_temp.rating = '';\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result_temp = {};\n    let result = results[i];\n    CreateMarker(result, i + 1);\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\n\nexport default GMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GMap\");\n$RefreshReg$(_c2, \"CreateMarker\");","map":{"version":3,"names":["React","useEffect","resultListSlice","appSlice","useSelector","useDispatch","axios","initMap","initService","doGoogleMapSearch","createRequest","map","service","shouldMapInitialize","radius","asyncCall","req","loc","result","searchPlaces","GMap","props","dispatch","searchRequest","state","app","GmapMemo","memo","name","isDone","actions","setRequestDone","userLoc","doGoogleMapSearchPromise","then","response","res","resultsParser","setSearchResult","catch","status","document","getElementById","CreateMarker","place","index","marker","window","google","maps","Marker","label","String","position","geometry","location","results","parsedResults","length","result_temp","vicinity","rating","push","i","lat","lng"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearch, createRequest } from './mapapi'\n\n\nlet map, service;\nlet shouldMapInitialize = true;\nconst radius = 1000;\n\nasync function asyncCall(req, loc) {\n    const result = await searchPlaces(req, loc);\n    return result;\n\n}\n\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const searchRequest = useSelector(state => state.app.searchRequest);\n\n    const GmapMemo = React.memo(props => {\n        return <h1>Hello {props.name}</h1>;\n    });\n\n    if (searchRequest.isDone == false) {\n\n        dispatch(appSlice.actions.setRequestDone());\n        let req = createRequest(searchRequest, props.userLoc);\n\n        doGoogleMapSearchPromise(req).then((response) => {\n\n            let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n\n        }).catch((status) => {\n\n            let res = resultsParser(0); //error in searching.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n            \n        });\n       \n\n    }\n\n    useEffect(() => {\n        if (shouldMapInitialize) {\n            map = initMap(document.getElementById('map'), props.userLoc, props.radius);\n            service = initService(map);\n            shouldMapInitialize = false;\n        }\n    })\n    return (\n        <div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\n\n\n\n\n\n\nfunction CreateMarker(place, index) {\n\n    let marker = new window.google.maps.Marker({\n        map: map,\n        label: String(index),\n        position: place.geometry.location\n    });\n\n}\n\n\nfunction resultsParser(results) {\n\n    let parsedResults = [];\n    if (results == 0 || results.length <= 0) {\n\n        let result_temp = {};\n        result_temp.name = '何も見つかりませんでした。';\n        result_temp.vicinity = '';\n        result_temp.rating = '';\n        parsedResults.push(result_temp);\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result_temp = {};\n        let result = results[i];\n        CreateMarker(result, i + 1);\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\n\n\n\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}