{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice } from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet shouldMapInitialize = true;\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\nconst radius = 1000;\nexport const getMapObject = () => {\n  return map;\n};\nexport const getServiceObject = () => {\n  return service;\n};\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const isUserLocRequested = useSelector(state => state.mapSlice.isUserLocRequested);\n  useEffect(() => {\n    if (isUserLocRequested) {\n      let prm = getUserLocation.then(function (value) {\n        userLocation = {\n          lat: value.coords.latitude,\n          lng: value.coords.longitude\n        };\n        map.panTo(userLocation);\n      }).catch(value => {\n        console.log(\"unable to obtain the user position\");\n      }).finally(() => {\n        dispatch(mapSlice.actions.requestUserLoc(false));\n      });\n    }\n\n    if (shouldMapInitialize) {\n      map = initMap(document.getElementById('map'), userLocation);\n      service = initService(map);\n      shouldMapInitialize = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"WHV8H0K4yWrZ3Qh2gM8xUp/kqrA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GMap;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"names":["React","useEffect","appSlice","mapSlice","useSelector","useDispatch","initMap","initService","doGoogleMapSearchPromise","createGoogleRequest","createMarker","map","service","shouldMapInitialize","userLocation","lat","lng","radius","getMapObject","getServiceObject","GMap","props","dispatch","isUserLocRequested","state","prm","getUserLocation","then","value","coords","latitude","longitude","panTo","catch","console","log","finally","actions","requestUserLoc","document","getElementById","Promise","resolve","reject","navigator","geolocation","getCurrentPosition"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice } from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi'\n\n\n\nlet map, service;\nlet shouldMapInitialize = true;\nlet userLocation = {\n    lat: 35.41221,\n    lng: 139.4130\n};\n\nconst radius = 1000;\n\nexport const getMapObject = () => {\n\n    return map;\n\n}\n\nexport const getServiceObject = () => {\n\n    return service;\n\n}\n\n\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const isUserLocRequested = useSelector(state => state.mapSlice.isUserLocRequested);\n\n    useEffect(() => {\n\n        if (isUserLocRequested) {\n            let prm = getUserLocation.then(function (value) {\n\n                userLocation = {\n                    lat: value.coords.latitude,\n                    lng: value.coords.longitude\n                };\n            \n                map.panTo(userLocation);\n\n\n            }).catch(value => {\n\n                console.log(\"unable to obtain the user position\")\n\n            }).finally(() => {\n\n                dispatch(mapSlice.actions.requestUserLoc(false));\n\n\n            });\n\n\n        }\n\n        if (shouldMapInitialize) {\n            map = initMap(document.getElementById('map'), userLocation);\n            service = initService(map);\n            shouldMapInitialize = false;\n        }\n    })\n\n\n\n    return (\n        <div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\n\n\n\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\nexport default GMap;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,YAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,wBAA/B,EAAyDC,mBAAzD,EAA8EC,YAA9E,QAAkG,UAAlG;;AAIA,IAAIC,GAAJ,EAASC,OAAT;AACA,IAAIC,mBAAmB,GAAG,IAA1B;AACA,IAAIC,YAAY,GAAG;EACfC,GAAG,EAAE,QADU;EAEfC,GAAG,EAAE;AAFU,CAAnB;AAKA,MAAMC,MAAM,GAAG,IAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAE9B,OAAOP,GAAP;AAEH,CAJM;AAMP,OAAO,MAAMQ,gBAAgB,GAAG,MAAM;EAElC,OAAOP,OAAP;AAEH,CAJM;;AAQP,SAASQ,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,IAAIC,QAAQ,GAAGjB,WAAW,EAA1B;EAEA,MAAMkB,kBAAkB,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACrB,QAAN,CAAeoB,kBAAzB,CAAtC;EAEAtB,SAAS,CAAC,MAAM;IAEZ,IAAIsB,kBAAJ,EAAwB;MACpB,IAAIE,GAAG,GAAGC,eAAe,CAACC,IAAhB,CAAqB,UAAUC,KAAV,EAAiB;QAE5Cd,YAAY,GAAG;UACXC,GAAG,EAAEa,KAAK,CAACC,MAAN,CAAaC,QADP;UAEXd,GAAG,EAAEY,KAAK,CAACC,MAAN,CAAaE;QAFP,CAAf;QAKApB,GAAG,CAACqB,KAAJ,CAAUlB,YAAV;MAGH,CAVS,EAUPmB,KAVO,CAUDL,KAAK,IAAI;QAEdM,OAAO,CAACC,GAAR,CAAY,oCAAZ;MAEH,CAdS,EAcPC,OAdO,CAcC,MAAM;QAEbd,QAAQ,CAACnB,QAAQ,CAACkC,OAAT,CAAiBC,cAAjB,CAAgC,KAAhC,CAAD,CAAR;MAGH,CAnBS,CAAV;IAsBH;;IAED,IAAIzB,mBAAJ,EAAyB;MACrBF,GAAG,GAAGL,OAAO,CAACiC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAD,EAAiC1B,YAAjC,CAAb;MACAF,OAAO,GAAGL,WAAW,CAACI,GAAD,CAArB;MACAE,mBAAmB,GAAG,KAAtB;IACH;EACJ,CAhCQ,CAAT;EAoCA,oBACI;IAAA,uBACI;MAAK,KAAK,EAAE,EAAZ;MAAgB,EAAE,EAAC;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GA/CQO,I;UAEUf,W,EAEYD,W;;;KAJtBgB,I;AAqDT,MAAMM,eAAe,GAAG,IAAIe,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACrDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;AACH,CAFuB,CAAxB;AAKA,eAAevB,IAAf"},"metadata":{},"sourceType":"module"}