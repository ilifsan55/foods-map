{"ast":null,"code":"import { getServiceObject, getCenter } from './map';\nimport { doGoogleMapSearchPromise } from '../logics/map';\nimport axios from 'axios';\nimport jsonp from 'axios-jsonp';\nlet searchStatus = 'READY';\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n  return new Promise((resolve, reject) => {\n    if (searchStatus !== 'READY') {\n      throw 'now searching';\n    }\n\n    searchStatus = 'BUSY';\n    console.log(keyword + ':search start');\n    let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n    let req = {\n      keyword: keyword,\n      radius: 500,\n      userLoc: getCenter()\n    };\n    if (!useGoogle && !useHotPepper) return;\n\n    if (useHotPepper) {\n      promiseHotPepper = axios.get(createHotPepperRequest(req), {\n        adapter: jsonp\n      }).then(response => {\n        responseHotPepper = perseHotPepperResults(response);\n      });\n    }\n\n    if (useGoogle) {\n      promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then(response => {\n        responseGoogle = perseGoogleResults(response);\n      }).catch(status => {\n        responseGoogle = perseGoogleResults(status);\n      });\n    }\n\n    Promise.all([promiseGoogle, promiseHotPepper]).then(message => {\n      if (!useGoogle) responseGoogle = 'NO_RESULTS';\n      if (!useHotPepper) responseHotPepper = 'NO_RESULTS';\n      let res = combineResults(responseGoogle, responseHotPepper, req.userLoc);\n      resolve(res);\n    });\n  });\n};\nexport function createGoogleRequest(req) {\n  let request = {\n    location: req.userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    language: 'ja',\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  return request;\n}\nexport function createHotPepperRequest(req) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  let lat = req.userLoc.lat();\n  let lng = req.userLoc.lng();\n  let keyword = req.keyword;\n  const apiURL = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n  return apiURL;\n}\n\nfunction similarity(s1, s2) {\n  var longer = s1;\n  var shorter = s2;\n\n  if (s1.length < s2.length) {\n    longer = s2;\n    shorter = s1;\n  }\n\n  var longerLength = longer.length;\n\n  if (longerLength == 0) {\n    return 1.0;\n  }\n\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nfunction editDistance(s1, s2) {\n  s1 = s1.toLowerCase();\n  s2 = s2.toLowerCase();\n  var costs = new Array();\n\n  for (var i = 0; i <= s1.length; i++) {\n    var lastValue = i;\n\n    for (var j = 0; j <= s2.length; j++) {\n      if (i == 0) costs[j] = j;else {\n        if (j > 0) {\n          var newValue = costs[j - 1];\n          if (s1.charAt(i - 1) != s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n\n    if (i > 0) costs[s2.length] = lastValue;\n  }\n\n  return costs[s2.length];\n}\n\nexport function combineResults(res1, res2, loc) {\n  let results, status;\n  let itemsShouldbeSpliced = [];\n\n  if (res1 === 'NO_RESULTS' && res2 === 'NO_RESULTS') {\n    status = 'NO_RESULTS';\n    results = [];\n  } else if (res2 === 'NO_RESULTS') {\n    status = 'DONE';\n    results = res1;\n  } else if (res1 === 'NO_RESULTS') {\n    status = 'DONE';\n    results = res2;\n  } else {\n    for (let i = 0; i < res1.length; i++) {\n      for (let j = 0; j < res2.length; j++) {\n        let sim = similarity(res1[i].name, res2[j].name);\n\n        if (sim > 0.8) {\n          res1[i].hotpepper = res2[j].hotpepper;\n          itemsShouldbeSpliced.push(j);\n        }\n      }\n    }\n\n    status = 'DONE';\n\n    for (let i = 0; i < itemsShouldbeSpliced.length; i++) {\n      res2.splice(itemsShouldbeSpliced[i], 1);\n    }\n\n    results = res1.concat(res2);\n  }\n\n  let res = {\n    status: status,\n    results: results,\n    lat: loc.lat(),\n    lng: loc.lng()\n  };\n  searchStatus = 'WAITING';\n  let timeout = setTimeout(() => {\n    searchStatus = 'READY';\n  }, 3000);\n  console.log(res);\n  return res;\n}\nexport function perseGoogleResults(results) {\n  let result_temp = {};\n  let parsedResults = [];\n\n  if (results === 'ZERO_RESULTS') {\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    result_temp.type = 1;\n    result_temp.rat = result.user_ratings_total;\n    result_temp.google = 'we_are_still_working_on_it.sry';\n    result_temp.photo = result.photos[0].getUrl();\n    /*axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n        adapter: jsonp\n    }).then((response) => {\n         console.log(response);\n        result_temp.google = response.url;\n     });*/\n    //cors error occurs\n\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\nexport function perseHotPepperResults(res) {\n  let result_temp = {};\n  let parsedResults = [];\n  let results = res.data.results.shop;\n\n  if (res.data.results.shop.length <= 0) {\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.address;\n    result_temp.rating = 5;\n    result_temp.lat = result.lat;\n    result_temp.lng = result.lng;\n    result_temp.type = 2;\n    result_temp.photo = result.photo.mobile.l;\n    result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}","map":{"version":3,"names":["getServiceObject","getCenter","doGoogleMapSearchPromise","axios","jsonp","searchStatus","trySearch","keyword","useGoogle","useHotPepper","Promise","resolve","reject","console","log","responseHotPepper","responseGoogle","promiseGoogle","promiseHotPepper","req","radius","userLoc","get","createHotPepperRequest","adapter","then","response","perseHotPepperResults","createGoogleRequest","perseGoogleResults","catch","status","all","message","res","combineResults","request","location","language","type","apiKeyHotPepper","lat","lng","apiURL","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","toLowerCase","costs","Array","i","lastValue","j","newValue","charAt","Math","min","res1","res2","loc","results","itemsShouldbeSpliced","sim","name","hotpepper","push","splice","concat","timeout","setTimeout","result_temp","parsedResults","result","vicinity","rating","geometry","rat","user_ratings_total","google","photo","photos","getUrl","data","shop","address","mobile","l","id"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js"],"sourcesContent":["\nimport { getServiceObject, getCenter } from './map';\nimport { doGoogleMapSearchPromise } from '../logics/map';\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\n\nlet searchStatus = 'READY';\n\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n\n    return new Promise((resolve, reject) => {\n\n\n        if (searchStatus !== 'READY') {\n\n            throw 'now searching';\n        }\n        searchStatus = 'BUSY';\n        console.log(keyword + ':search start');\n        let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n\n        let req = {\n            keyword: keyword,\n            radius: 500,\n            userLoc: getCenter()\n        };\n\n        if (!useGoogle && !useHotPepper)\n            return;\n\n        if (useHotPepper) {\n\n            promiseHotPepper = axios.get(createHotPepperRequest(req), {\n                adapter: jsonp\n            }).then((response) => {\n\n                responseHotPepper = perseHotPepperResults(response);\n\n            });\n        }\n\n        if (useGoogle) {\n\n            promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then((response) => {\n\n                responseGoogle = perseGoogleResults(response);\n\n            }).catch((status) => {\n\n                responseGoogle = perseGoogleResults(status);\n\n            })\n        }\n\n        Promise.all([promiseGoogle, promiseHotPepper]).then((message) => {\n\n            if (!useGoogle)\n                responseGoogle = 'NO_RESULTS';\n\n            if (!useHotPepper)\n                responseHotPepper = 'NO_RESULTS';\n\n            let res = combineResults(responseGoogle, responseHotPepper, req.userLoc);\n\n            resolve(res);\n\n        })\n    })\n}\n\nexport function createGoogleRequest(req) {\n\n    let request = {\n\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        language: 'ja',\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}\n\nexport function createHotPepperRequest(req) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    let lat = req.userLoc.lat();\n    let lng = req.userLoc.lng();\n    let keyword = req.keyword;\n    const apiURL = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n\n    return apiURL;\n}\n\nfunction similarity(s1, s2) {\n    var longer = s1;\n    var shorter = s2;\n    if (s1.length < s2.length) {\n        longer = s2;\n        shorter = s1;\n    }\n    var longerLength = longer.length;\n    if (longerLength == 0) {\n        return 1.0;\n    }\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nfunction editDistance(s1, s2) {\n    s1 = s1.toLowerCase();\n    s2 = s2.toLowerCase();\n\n    var costs = new Array();\n    for (var i = 0; i <= s1.length; i++) {\n        var lastValue = i;\n        for (var j = 0; j <= s2.length; j++) {\n            if (i == 0)\n                costs[j] = j;\n            else {\n                if (j > 0) {\n                    var newValue = costs[j - 1];\n                    if (s1.charAt(i - 1) != s2.charAt(j - 1))\n                        newValue = Math.min(Math.min(newValue, lastValue),\n                            costs[j]) + 1;\n                    costs[j - 1] = lastValue;\n                    lastValue = newValue;\n                }\n            }\n        }\n        if (i > 0)\n            costs[s2.length] = lastValue;\n    }\n    return costs[s2.length];\n}\n\nexport function combineResults(res1, res2, loc) {\n\n    let results, status;\n    let itemsShouldbeSpliced = [];\n\n    if (res1 === 'NO_RESULTS' && res2 === 'NO_RESULTS') {\n        status = 'NO_RESULTS';\n        results = [];\n    } else if (res2 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res1;\n    } else if (res1 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res2;\n    } else {\n        for (let i = 0; i < res1.length; i++) {\n            for (let j = 0; j < res2.length; j++) {\n                let sim = similarity(res1[i].name, res2[j].name);\n                if (sim > 0.8) {\n                    res1[i].hotpepper = res2[j].hotpepper;\n                    itemsShouldbeSpliced.push(j);\n\n                }\n            }\n        }\n\n        status = 'DONE';\n        for (let i = 0; i < itemsShouldbeSpliced.length; i++) {\n\n            res2.splice(itemsShouldbeSpliced[i], 1);\n        }\n        results = res1.concat(res2);\n    }\n\n    let res = {\n        status: status,\n        results: results,\n        lat: loc.lat(),\n        lng: loc.lng()\n    }\n    searchStatus = 'WAITING';\n    let timeout = setTimeout(() => { searchStatus = 'READY' }, 3000);\n    console.log(res);\n    return res;\n\n}\n\nexport function perseGoogleResults(results) {\n\n    let result_temp = {};\n    let parsedResults = [];\n\n    if (results === 'ZERO_RESULTS') {\n\n        return 'NO_RESULTS';\n\n    }\n\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        result_temp.type = 1;\n        result_temp.rat = result.user_ratings_total;\n        result_temp.google = 'we_are_still_working_on_it.sry';\n        result_temp.photo = result.photos[0].getUrl();\n\n        /*axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n            adapter: jsonp\n        }).then((response) => {\n\n            console.log(response);\n            result_temp.google = response.url;\n\n        });*/\n\n        //cors error occurs\n\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\n\nexport function perseHotPepperResults(res) {\n\n    let result_temp = {};\n    let parsedResults = [];\n    let results = res.data.results.shop;\n\n    if (res.data.results.shop.length <= 0) {\n\n        return 'NO_RESULTS';\n\n    }\n\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n        result_temp.name = result.name;\n        result_temp.vicinity = result.address;\n        result_temp.rating = 5;\n        result_temp.lat = result.lat;\n        result_temp.lng = result.lng;\n        result_temp.type = 2;\n        result_temp.photo = result.photo.mobile.l;\n        result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n        parsedResults.push(result_temp);\n\n    }\n\n    return parsedResults;\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}