{"ast":null,"code":"let map, service;\nlet markers,\n    circles = [];\nlet defaultUserLoc = {\n  lat: 35.6809591,\n  lng: 139.7673068\n};\nexport function initMap(element, userLoc) {\n  console.log(\"Map Initialized\");\n  let map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  });\n  /*\n  let userpos = new window.google.maps.Circle({\n      center: userLoc,\n      fillColor: '#0000ff',\n      fillOpacity: 0.45,\n      map: map,\n      radius: 20,\n      strokeColor: '#0000ff',\n      strokeOpacity: 1,\n      strokeWeight: 1\n  });\n  */\n\n  return map;\n}\nexport function initService(map) {\n  let service = new window.google.maps.places.PlacesService(map);\n  return service;\n}\nexport function createMapInstance() {\n  map = initMap(document.getElementById('map'), defaultUserLoc);\n  service = initService(map);\n  return map;\n}\nexport function doGoogleMapSearchPromise(request, service) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport function createMarker(lat, lng, index, ScrollFunc, OpenFunc, name) {\n  console.log(\"nit\");\n  let pixelOffset = new window.google.maps.Size(0, -40);\n  let hover;\n  let marker = new window.google.maps.Marker({\n    map: map,\n    position: {\n      lat: lat,\n      lng: lng\n    } //label: name\n\n  });\n  marker.addListener('mouseover', () => {\n    hover = new window.google.maps.InfoWindow({\n      map: map,\n      content: name,\n      noSuppress: true,\n      zIndex: 20000,\n      pixelOffset: pixelOffset\n    });\n    hover.setPosition({\n      lat: lat,\n      lng: lng\n    });\n  });\n  marker.addListener('mouseout', () => {\n    if (hover) hover.close();\n  });\n  marker.addListener(\"click\", () => {\n    ScrollFunc(index * 316);\n    OpenFunc();\n  });\n  markers.push(marker);\n}\nexport function deleteMarkers() {\n  for (let i = 0; i < markers.length; i++) {\n    markers[i].setMap(null);\n  }\n\n  markers = [];\n}\nexport function deleteCircles() {\n  for (let i = 0; i < circles.length; i++) {\n    circles[i].setMap(null);\n  }\n\n  circles = [];\n}\nexport function createCircle(lat, lng, radius) {\n  let circle = new window.google.maps.Circle({\n    center: {\n      lat: lat,\n      lng: lng\n    },\n    fillColor: '#0000ff',\n    fillOpacity: 0.15,\n    map: map,\n    radius: radius,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  circles.push(circle);\n}\nexport const getMapObject = () => {\n  return map;\n};\nexport const getCenter = () => {\n  let latlng = map.getCenter();\n  return latlng;\n};\nexport const getServiceObject = () => {\n  return service;\n};","map":{"version":3,"names":["map","service","markers","circles","defaultUserLoc","lat","lng","initMap","element","userLoc","console","log","window","google","maps","Map","center","zoom","initService","places","PlacesService","createMapInstance","document","getElementById","doGoogleMapSearchPromise","request","Promise","resolve","reject","nearbySearch","results","status","createMarker","index","ScrollFunc","OpenFunc","name","pixelOffset","Size","hover","marker","Marker","position","addListener","InfoWindow","content","noSuppress","zIndex","setPosition","close","push","deleteMarkers","i","length","setMap","deleteCircles","createCircle","radius","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","getMapObject","getCenter","latlng","getServiceObject"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js"],"sourcesContent":["let map,service;\nlet markers,circles = [];\n\nlet defaultUserLoc = {   \n    lat: 35.6809591,\n    lng: 139.7673068\n};\n\nexport function initMap(element, userLoc) {\n\n    console.log(\"Map Initialized\");\n \n    let map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n\n    /*\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    */\n\n    return map;\n\n}\n\nexport function initService(map) {\n\n    let service = new window.google.maps.places.PlacesService(map);\n    return service;\n}\n\nexport function createMapInstance(){\n\n    map = initMap(document.getElementById('map'), defaultUserLoc);\n    service = initService(map);\n    return map;\n\n}\n\nexport function doGoogleMapSearchPromise(request, service) {\n\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n\n}\nexport function createMarker(lat, lng, index, ScrollFunc, OpenFunc, name) {\n\n    console.log(\"nit\");\n    let pixelOffset = new window.google.maps.Size(0, -40);\n    let hover;\n    let marker = new window.google.maps.Marker({\n\n        map: map,\n        position: { lat: lat, lng: lng },\n        //label: name\n        \n    });\n\n    \n\n    marker.addListener('mouseover', () => {\n    hover = new window.google.maps.InfoWindow({\n            map: map,\n            content: name,\n            noSuppress: true,\n            zIndex: 20000,\n           pixelOffset: pixelOffset\n        });\n \n        hover.setPosition({ lat: lat, lng: lng });\n        \n \n       \n    });\n\n    marker.addListener('mouseout', ()ã€€=> {\n        if(hover)\n            hover.close();\n    });\n\n    marker.addListener( \"click\", () =>  {\n        ScrollFunc(index*316);\n        OpenFunc();\n    }  );\n    markers.push(marker);\n\n}\n\nexport function deleteMarkers () {\n\n    for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n    }\n\n    markers = [];\n\n}\n\nexport function deleteCircles () {\n\n    for (let i = 0; i < circles.length; i++) {\n        circles[i].setMap(null);\n    }\n\n    circles = [];\n\n}\n\nexport function createCircle(lat, lng, radius) {\n\n    let circle = new window.google.maps.Circle({\n        center: { lat: lat, lng: lng },\n        fillColor: '#0000ff',\n        fillOpacity: 0.15,\n        map: map,\n        radius: radius,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n    circles.push(circle);\n\n}\n\nexport const getMapObject = () => {\n\n    return map;\n\n}\n\nexport const getCenter = () => {\n\n    let latlng = map.getCenter();\n    return latlng;\n}\n\n\n\nexport const getServiceObject = () => {\n\n    return service;\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}