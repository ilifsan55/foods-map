{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './base.css';\nimport React, { useState } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet countofSpins = 0;\nconst wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\", \"AA\"];\nconst colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\nconst wheelRadius = 200; // in px\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  let prm = getUserLocation.then(function (value) {\n    // 非同期処理が成功した場合\n    console.log('実行結果:' + value); // => 実行結果:成功!\n  }).catch(function (value) {\n    // 非同期処理が失敗した場合\n    console.log('実行結果:' + value); // 呼ばれない\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DrawWheel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\n\nfunction DrawWheel() {\n  _s2();\n\n  let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n  let mainState = useSelector(state => state.reducer.mainState);\n  const dispatch = useDispatch(); //ルーレット描画用＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n  let styleObjectArray = [];\n  let degreePerContents = 360 / wheelContents.length;\n  let polygon = Math.tan(3.14 / wheelContents.length);\n  let sizeofEdge = polygon * wheelRadius;\n  wheelContents.forEach((value, index) => {\n    let colorCode_temp = colorCode[index];\n\n    if (colorCode_temp == undefined) {\n      colorCode_temp = \"#FFFFFF\";\n    }\n\n    let style = {\n      'borderWidth': `200px ${sizeofEdge}px 0`,\n      'transformOrigin': `${sizeofEdge}px 200px`,\n      'left': `${wheelRadius - sizeofEdge}px`,\n      'transform': `rotate(${index * degreePerContents}deg)`,\n      'borderColor': `${colorCode_temp} transparent`\n    };\n    styleObjectArray.push(style);\n  }); //ここまで＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n  const WheelSpin = () => {\n    if (mainState == 1) {\n      //the Whell is runnning!\n      return;\n    }\n\n    countofSpins++;\n    let newSpin = 3000 * countofSpins;\n    let rndSpin = Math.floor(Math.random() * 360) + 1;\n    dispatch(setRotation(newSpin + rndSpin));\n    dispatch(mainState(1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: WheelSpin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wheel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inner-wheel\",\n        style: {\n          transform: `rotate(${wheelRotation}deg)`\n        },\n        children: wheelContents.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styleObjectArray[index],\n          id: `contant${index}`,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mid-wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DrawWheel, \"1YPcD5v4P6L3CJsaQUKuvsm65Xo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c2 = DrawWheel;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"DrawWheel\");","map":{"version":3,"names":["React","useState","setState","setRotation","useSelector","useDispatch","countofSpins","wheelContents","colorCode","wheelRadius","App","dispatch","prm","getUserLocation","then","value","console","log","catch","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","DrawWheel","wheelRotation","state","reducer","mainState","styleObjectArray","degreePerContents","length","polygon","Math","tan","sizeofEdge","forEach","index","colorCode_temp","undefined","style","push","WheelSpin","newSpin","rndSpin","floor","random","transform","map"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js"],"sourcesContent":["import './base.css';\nimport React, { useState } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nlet countofSpins = 0;\n\nconst wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\", \"AA\"];\nconst colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\nconst wheelRadius = 200; // in px\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    let prm = getUserLocation.then(function (value) {\n        // 非同期処理が成功した場合\n        console.log('実行結果:' + value); // => 実行結果:成功!\n    }).catch(function (value) {\n        // 非同期処理が失敗した場合\n        console.log('実行結果:' + value); // 呼ばれない\n    });\n\n    return (\n        <div className=\"App\">\n            <DrawWheel></DrawWheel>\n        </div>\n    );\n}\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\n\nfunction DrawWheel() {\n\n    let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n    let mainState = useSelector(state => state.reducer.mainState);\n    const dispatch = useDispatch();\n\n    //ルーレット描画用＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n    let styleObjectArray = [];\n    let degreePerContents = 360 / wheelContents.length;\n    let polygon = Math.tan(3.14 / wheelContents.length);\n    let sizeofEdge = polygon * wheelRadius;\n\n    wheelContents.forEach((value, index) => {\n\n        let colorCode_temp = colorCode[index]\n        if (colorCode_temp == undefined) {\n            colorCode_temp = \"#FFFFFF\";\n        }\n\n        let style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n            'left': `${wheelRadius - sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCode_temp} transparent`\n        }\n\n        styleObjectArray.push(style);\n    })\n\n    //ここまで＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n    const WheelSpin = () => {\n\n        if(mainState == 1){\n            //the Whell is runnning!\n            return;\n        }\n\n        countofSpins++;\n        let newSpin = 3000 * countofSpins;\n        let rndSpin = Math.floor(Math.random() * (360)) + 1;\n        dispatch(setRotation(newSpin + rndSpin));\n        dispatch(mainState(1));\n\n    }\n\n    return (\n        <div id=\"wrapper\">\n            <button onClick={WheelSpin}></button>\n            <div id=\"wheel\">\n                <div id=\"inner-wheel\" style={{\n                    transform: `rotate(${wheelRotation}deg)`,\n                }}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n                        key={index}\n                        id={`contant${index}`}>\n                        {value}</div>)}\n                </div>\n                <div id=\"mid-wheel\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}