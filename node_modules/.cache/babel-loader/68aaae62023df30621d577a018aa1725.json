{"ast":null,"code":"import{getServiceObject,getCenter}from'./map';import{doGoogleMapSearchPromise}from'../logics/map';import axios from'axios';import jsonp from'axios-jsonp';var searchStatus='DONE';export var trySearch=function trySearch(keyword,useGoogle,useHotPepper){if(searchStatus=='BUSY')return;searchStatus='BUSY';return new Promise(function(resolve,reject){var responseHotPepper,responseGoogle,promiseGoogle,promiseHotPepper;var req={keyword:keyword,radius:500,userLoc:getCenter()};if(!useGoogle&&!useHotPepper)return;if(useHotPepper){promiseHotPepper=axios.get(createHotPepperRequest(req),{adapter:jsonp}).then(function(response){responseHotPepper=perseHotPepperResults(response);});}if(useGoogle){promiseGoogle=doGoogleMapSearchPromise(createGoogleRequest(req),getServiceObject()).then(function(response){responseGoogle=perseGoogleResults(response);}).catch(function(status){responseGoogle=perseGoogleResults(status);});}Promise.all([promiseGoogle,promiseHotPepper]).then(function(message){if(!useGoogle)responseGoogle='NO_RESULTS';if(!useHotPepper)responseHotPepper='NO_RESULTS';var res=combineResults(responseGoogle,responseHotPepper,req.userLoc);resolve(res);});});};export function createGoogleRequest(req){var request={location:req.userLoc,radius:req.radius,keyword:req.keyword,type:'restaurant'//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n};return request;}export function createHotPepperRequest(req){var apiKeyHotPepper='1ff50644037f0f38';var lat=req.userLoc.lat();var lng=req.userLoc.lng();var keyword=req.keyword;var apiURL=\"http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=\".concat(apiKeyHotPepper,\"&lat=\").concat(lat,\"&lng=\").concat(lng,\"&count=100&range=3&keyword=\").concat(keyword,\"&order=4&format=jsonp\");return apiURL;}export function combineResults(res1,res2,loc){var results,status;if(res1=='NO_RESULTS'&&res2=='NO_RESULTS'){status='NO_RESULTS';results=[];}else if(res2=='NO_RESULTS'){status='DONE';results=res1;}else if(res1=='NO_RESULTS'){status='DONE';results=res2;}else{status='DONE';results=res1.concat(res2);}var res={status:status,results:results,lat:loc.lat(),lng:loc.lng()};searchStatus=status;console.log(res);return res;}export function perseGoogleResults(results){var result_temp={};var parsedResults=[];if(results=='ZERO_RESULTS'){return'NO_RESULTS';}for(var i=0;i<results.length;i++){var result=results[i];result_temp={};result_temp.name=result.name;result_temp.vicinity=result.vicinity;result_temp.rating=result.rating;result_temp.lat=result.geometry.location.lat();result_temp.lng=result.geometry.location.lng();result_temp.type=1;result_temp.rat=result.user_ratings_total;result_temp.google='tes';result_temp.photo=result.photos[0].getUrl();/*axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n                adapter: jsonp\n            }).then((response) => {\n\n                console.log(response);\n                result_temp.google = response.url;\n\n            });*/parsedResults.push(result_temp);}return parsedResults;}export function perseHotPepperResults(res){var result_temp={};var parsedResults=[];var results=res.data.results.shop;if(res.data.results.shop.length<=0){return'NO_RESULTS';}for(var i=0;i<results.length;i++){var result=results[i];result_temp={};result_temp.name=result.name;result_temp.vicinity=result.address;result_temp.rating=5;result_temp.lat=result.lat;result_temp.lng=result.lng;result_temp.type=2;result_temp.photo=result.photo.mobile.l;result_temp.hotpepper=\"hotpepper.jp/str\".concat(result.id);parsedResults.push(result_temp);}return parsedResults;}","map":{"version":3,"names":["getServiceObject","getCenter","doGoogleMapSearchPromise","axios","jsonp","searchStatus","trySearch","keyword","useGoogle","useHotPepper","Promise","resolve","reject","responseHotPepper","responseGoogle","promiseGoogle","promiseHotPepper","req","radius","userLoc","get","createHotPepperRequest","adapter","then","response","perseHotPepperResults","createGoogleRequest","perseGoogleResults","catch","status","all","message","res","combineResults","request","location","type","apiKeyHotPepper","lat","lng","apiURL","res1","res2","loc","results","concat","console","log","result_temp","parsedResults","i","length","result","name","vicinity","rating","geometry","rat","user_ratings_total","google","photo","photos","getUrl","push","data","shop","address","mobile","l","hotpepper","id"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js"],"sourcesContent":["\nimport { getServiceObject, getCenter } from './map';\nimport { doGoogleMapSearchPromise } from '../logics/map';\n\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\n\nlet searchStatus = 'DONE';\n\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n\n    if (searchStatus=='BUSY')\n        return ;\n\n    searchStatus = 'BUSY';\n\n    return new Promise((resolve, reject) => {\n\n        let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n\n        let req = {\n            keyword: keyword,\n            radius: 500,\n            userLoc: getCenter()\n        };\n\n        if (!useGoogle && !useHotPepper)\n            return;\n\n        if (useHotPepper) {\n\n            promiseHotPepper = axios.get(createHotPepperRequest(req), {\n                adapter: jsonp\n            }).then((response) => {\n\n                responseHotPepper = perseHotPepperResults(response);\n\n            });\n        }\n\n        if (useGoogle) {\n\n            promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then((response) => {\n\n                responseGoogle = perseGoogleResults(response);\n\n            }).catch((status) => {\n                responseGoogle = perseGoogleResults(status);\n\n            })\n        }\n\n\n        Promise.all([promiseGoogle, promiseHotPepper]).then((message) => {\n\n            if (!useGoogle)\n                responseGoogle = 'NO_RESULTS';\n\n            if (!useHotPepper)\n                responseHotPepper = 'NO_RESULTS';\n\n            let res = combineResults(responseGoogle, responseHotPepper, req.userLoc);\n\n            \n            resolve(res);\n\n\n\n        })\n\n    })\n}\n\n\n    export function createGoogleRequest(req) {\n\n        let request = {\n\n            location: req.userLoc,\n            radius: req.radius,\n            keyword: req.keyword,\n            type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n        };\n\n        return request;\n    }\n\n    export function createHotPepperRequest(req) {\n\n        let apiKeyHotPepper = '1ff50644037f0f38';\n        let lat = req.userLoc.lat();\n        let lng = req.userLoc.lng();\n        let keyword = req.keyword;\n        const apiURL = `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n\n        return apiURL;\n    }\n\n    export function combineResults(res1, res2, loc) {\n\n        let results, status;\n\n        if (res1 == 'NO_RESULTS' && res2 == 'NO_RESULTS') {\n            status = 'NO_RESULTS';\n            results = [];\n        } else if (res2 == 'NO_RESULTS') {\n            status = 'DONE';\n            results = res1;\n        } else if (res1 == 'NO_RESULTS') {\n            status = 'DONE';\n            results = res2;\n        } else {\n            status = 'DONE';\n            results = res1.concat(res2);\n        }\n\n\n        let res = {\n            status: status,\n            results: results,\n            lat : loc.lat(),\n            lng : loc.lng()\n        }\n        searchStatus = status;\n        console.log(res);\n        return res;\n\n    }\n\n    export function perseGoogleResults(results) {\n\n        let result_temp = {};\n        let parsedResults = [];\n        if (results == 'ZERO_RESULTS') {\n\n            return 'NO_RESULTS';\n\n        }\n        for (let i = 0; i < results.length; i++) {\n\n            let result = results[i];\n            result_temp = {};\n\n            result_temp.name = result.name;\n            result_temp.vicinity = result.vicinity;\n            result_temp.rating = result.rating;\n            result_temp.lat = result.geometry.location.lat();\n            result_temp.lng = result.geometry.location.lng();\n            result_temp.type = 1;\n            result_temp.rat = result.user_ratings_total;\n            result_temp.google = 'tes';\n            result_temp.photo = result.photos[0].getUrl();\n            \n\n            /*axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n                adapter: jsonp\n            }).then((response) => {\n\n                console.log(response);\n                result_temp.google = response.url;\n\n            });*/\n\n\n\n            parsedResults.push(result_temp);\n        }\n\n\n        return parsedResults;\n\n\n    }\n\n\n    export function perseHotPepperResults(res) {\n\n\n\n        let result_temp = {};\n        let parsedResults = [];\n        let results = res.data.results.shop;\n        if (res.data.results.shop.length <= 0) {\n\n            return 'NO_RESULTS';\n\n        }\n\n        for (let i = 0; i < results.length; i++) {\n\n            let result = results[i];\n            result_temp = {};\n\n            result_temp.name = result.name;\n            result_temp.vicinity = result.address;\n            result_temp.rating = 5;\n            result_temp.lat = result.lat;\n            result_temp.lng = result.lng;\n            result_temp.type = 2;\n            result_temp.photo = result.photo.mobile.l;\n            result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n\n\n            parsedResults.push(result_temp);\n\n        }\n\n        return parsedResults;\n\n\n    }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}