{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice } from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet shouldMapInitialize = true;\nlet hasUserLocation = false;\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\nconst radius = 1000;\nexport const getMapObject = () => {\n  return map;\n};\nexport const getServiceObject = () => {\n  return service;\n};\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const searchRequest = useSelector(state => state.app.searchRequest);\n  const isUserLocRequested = useSelector(state => state.mapSlice.isUserLocRequested);\n  const GmapMemo = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  });\n  /*if (searchRequest.isDone == false) {\n       dispatch(appSlice.actions.setRequestDone());\n       let req = createGoogleRequest(searchRequest, props.userLoc);\n       doGoogleMapSearchPromise(req, service).then((response) => {\n           let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n          dispatch(resultListSlice.actions.setSearchResult(res));\n       }).catch((status) => {\n           let res = resultsParser(0); //error in searching.\n          dispatch(resultListSlice.actions.setSearchResult(res));\n       });\n   }*/\n\n  useEffect(() => {\n    if (isUserLocRequested) {\n      if (!hasUserLocation) {\n        let prm = getUserLocation.then(function (value) {\n          userLocation = {\n            lat: value.coords.latitude,\n            lng: value.coords.longitude\n          };\n          hasUserLocation = true;\n        }).catch(value => {\n          hasUserLocation = false;\n        }).finally(() => {\n          dispatch(mapSlice.actions.requestUserLoc(false));\n          map.panTo(userLocation);\n        });\n      } else {\n        dispatch(mapSlice.actions.requestUserLoc(false));\n        map.panTo(userLocation);\n      }\n    }\n\n    if (shouldMapInitialize) {\n      map = initMap(document.getElementById('map'), userLocation);\n      service = initService(map);\n      shouldMapInitialize = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"HpVtui5/jZaJd275pXJny4LUoHQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GMap;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"names":["React","useEffect","appSlice","mapSlice","useSelector","useDispatch","axios","initMap","initService","doGoogleMapSearchPromise","createGoogleRequest","createMarker","map","service","shouldMapInitialize","hasUserLocation","userLocation","lat","lng","radius","getMapObject","getServiceObject","GMap","props","dispatch","searchRequest","state","app","isUserLocRequested","GmapMemo","memo","name","prm","getUserLocation","then","value","coords","latitude","longitude","catch","finally","actions","requestUserLoc","panTo","document","getElementById","Promise","resolve","reject","navigator","geolocation","getCurrentPosition"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice } from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi'\n\n\n\nlet map, service;\nlet shouldMapInitialize = true;\nlet hasUserLocation = false;\nlet userLocation = {\n    lat: 35.41221,\n    lng: 139.4130\n};\n\nconst radius = 1000;\n\nexport const getMapObject = () => {\n\n    return map;\n\n}\n\nexport const getServiceObject = () => {\n\n    return service;\n\n}\n\n\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const searchRequest = useSelector(state => state.app.searchRequest);\n    const isUserLocRequested = useSelector(state => state.mapSlice.isUserLocRequested);\n\n    const GmapMemo = React.memo(props => {\n        return <h1>Hello {props.name}</h1>;\n    });\n\n    /*if (searchRequest.isDone == false) {\n\n        dispatch(appSlice.actions.setRequestDone());\n\n        let req = createGoogleRequest(searchRequest, props.userLoc);\n\n        doGoogleMapSearchPromise(req, service).then((response) => {\n\n            let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n\n        }).catch((status) => {\n\n            let res = resultsParser(0); //error in searching.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n\n        });\n\n    }*/\n\n    useEffect(() => {\n\n        if (isUserLocRequested) {\n            if (!hasUserLocation) {\n                let prm = getUserLocation.then(function (value) {\n\n                    userLocation = {\n                        lat: value.coords.latitude,\n                        lng: value.coords.longitude\n                    };\n                    hasUserLocation = true;\n\n                }).catch(value => {\n\n                    hasUserLocation = false;\n\n                }).finally(() => {\n\n                    dispatch(mapSlice.actions.requestUserLoc(false));\n                    map.panTo(userLocation);\n\n\n                });\n            } else {\n\n                dispatch(mapSlice.actions.requestUserLoc(false));\n                map.panTo(userLocation);\n            }\n\n\n        }\n\n        if (shouldMapInitialize) {\n            map = initMap(document.getElementById('map'), userLocation);\n            service = initService(map);\n            shouldMapInitialize = false;\n        }\n    })\n\n\n\n    return (\n        <div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\n\n\n\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}