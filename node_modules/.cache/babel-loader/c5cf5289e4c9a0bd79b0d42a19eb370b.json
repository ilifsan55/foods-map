{"ast":null,"code":"import { getServiceObject, getUserLocation, getCenter } from './map';\nimport AppSlice, { appSlice } from '../../redux/appSlice';\nimport mapSlice from '../../redux/mapSlice';\nimport wheelSlice from '../../redux/wheelSlice';\nimport { searchSlice } from '../../redux/searchSlice';\nimport { doGoogleMapSearchPromise } from '../logics/map';\nimport axios from 'axios';\nimport jsonp from 'axios-jsonp';\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n  let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n  let req = {\n    keyword: keyword,\n    radius: 500,\n    userLoc: getCenter(),\n    useGoogle: true,\n    useHotPepper: true,\n    useGurunabi: true,\n    isDone: false\n  };\n  if (!useGoogle && !useHotPepper) return;\n\n  if (useHotPepper) {\n    promiseHotPepper = axios.get(createHotPepperRequest(req), {\n      adapter: jsonp\n    }).then(response => {\n      responseHotPepper = perseHotPepperResults(response);\n    });\n  }\n\n  if (useGoogle) {\n    promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then(response => {\n      responseGoogle = perseGoogleResults(response);\n    }).catch(status => {\n      responseGoogle = perseGoogleResults(status);\n    });\n  }\n\n  Promise.all([promiseGoogle, promiseHotPepper]).then(message => {\n    let noReponseOnGoogle, noReponseOnHP;\n    if (responseGoogle == 'NO_RESULTS' || respon || !useGoogle) noReponseOnGoogle = true;\n    if (responseHotPepper == 'NO_RESULTS' || !useHotPepper) noReponseOnHP = true;\n    if (noReponseOnGoogle && noReponseOnHP) return [];\n    return combineResults(responseGoogle, responseHotPepper);\n    /*if (responseGoogle == 'NO_RESULTS' || responseGoogle == undefined || promise1 == undefined) {\n        if (responseHotPepper == 'NO_RESULTS' || responseHotPepper == undefined || promise2 == undefined) {\n             //dispatch(mapSlice.actions.setSearchResults([]));\n            //dispatch(mapSlice.actions.setSearchStatus('NO_RESULTS'));\n            return [];\n        } else {\n              //dispatch(mapSlice.actions.setSearchResults(responseHotPepper));\n             //dispatch(mapSlice.actions.setSearchStatus('DO３２NE'));\n            return responseHotPepper;\n        }\n     } else {\n        if (responseHotPepper == 'NO_RESULTS' || responseHotPepper == undefined || promise2 == undefined) {\n              //dispatch(mapSlice.actions.setSearchResults(responseGoogle));\n             //dispatch(mapSlice.actions.setSearchStatus('DO１１１NE'));\n            return responseGoogle;\n        } else {\n              r\n             //dispatch(mapSlice.actions.setSearchResults(combinedResults));\n             //dispatch(mapSlice.actions.setSearchStatus('DsONE'));\n        }\n      }*/\n  });\n};\nexport function createGoogleRequest(req) {\n  let request = {\n    location: req.userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  return request;\n}\nexport function createHotPepperRequest(req) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  let lat = req.userLoc.lat();\n  let lng = req.userLoc.lng();\n  let keyword = req.keyword;\n  const apiURL = `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n  return apiURL;\n}\nexport function combineResults(res1, res2) {\n  if (res1[0].name == 'NO_RESULTS' && res2[0].name == 'NO_RESULTS') {\n    return 'NO_RESULTS';\n  } else if (res2[0].name == '_NO_RESULTS') {\n    return res1;\n  } else if (res2[0].name == '_NO_RESULTS') {\n    return res1;\n  }\n\n  let res3 = res1.concat(res2);\n  return res3;\n}\nexport function perseGoogleResults(results) {\n  let result_temp = {};\n  console.log(results);\n  let parsedResults = [];\n\n  if (results == 'ZERO_RESULTS') {\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    result_temp.type = 1;\n    result_temp.rat = result.user_ratings_total;\n    result_temp.google = result.url; // result_temp.photo = result.photos[0].getURL;\n\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\nexport function perseHotPepperResults(res) {\n  let result_temp = {};\n  let parsedResults = [];\n  let results = res.data.results.shop;\n\n  if (res.data.results.shop.length <= 0) {\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.address;\n    result_temp.rating = 5;\n    result_temp.lat = result.lat;\n    result_temp.lng = result.lng;\n    result_temp.type = 2;\n    result_temp.photo = result.photo.mobile.l;\n    result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}","map":{"version":3,"names":["getServiceObject","getUserLocation","getCenter","AppSlice","appSlice","mapSlice","wheelSlice","searchSlice","doGoogleMapSearchPromise","axios","jsonp","trySearch","keyword","useGoogle","useHotPepper","responseHotPepper","responseGoogle","promiseGoogle","promiseHotPepper","req","radius","userLoc","useGurunabi","isDone","get","createHotPepperRequest","adapter","then","response","perseHotPepperResults","createGoogleRequest","perseGoogleResults","catch","status","Promise","all","message","noReponseOnGoogle","noReponseOnHP","respon","combineResults","request","location","type","apiKeyHotPepper","lat","lng","apiURL","res1","res2","name","res3","concat","results","result_temp","console","log","parsedResults","i","length","result","vicinity","rating","geometry","rat","user_ratings_total","google","url","push","res","data","shop","address","photo","mobile","l","hotpepper","id"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js"],"sourcesContent":["\nimport { getServiceObject, getUserLocation, getCenter } from './map';\nimport AppSlice, { appSlice } from '../../redux/appSlice';\nimport mapSlice from '../../redux/mapSlice';\nimport wheelSlice from '../../redux/wheelSlice';\nimport { searchSlice } from '../../redux/searchSlice';\nimport { doGoogleMapSearchPromise} from '../logics/map';\n\nimport axios from 'axios'\nimport jsonp from 'axios-jsonp'\n\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n\n    let responseHotPepper, responseGoogle, promiseGoogle, promiseHotPepper;\n\n    let req = {\n        keyword: keyword,\n        radius: 500,\n        userLoc: getCenter(),\n        useGoogle: true,\n        useHotPepper: true,\n        useGurunabi: true,\n        isDone: false,\n    };\n\n    if (!useGoogle && !useHotPepper)\n        return;\n\n    if (useHotPepper) {\n\n        promiseHotPepper = axios.get(createHotPepperRequest(req), {\n            adapter: jsonp\n        }).then((response) => {\n\n            responseHotPepper = perseHotPepperResults(response);\n\n        });\n    }\n\n    if (useGoogle) {\n\n        promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then((response) => {\n\n            responseGoogle = perseGoogleResults(response);\n\n        }).catch((status) => {\n            responseGoogle = perseGoogleResults(status);\n\n        })\n    }\n\n\n    Promise.all([promiseGoogle, promiseHotPepper]).then((message) => {\n\n        let noReponseOnGoogle, noReponseOnHP;\n\n        if (responseGoogle == 'NO_RESULTS' || respon || !useGoogle)\n            noReponseOnGoogle = true;\n\n        if (responseHotPepper == 'NO_RESULTS' || !useHotPepper)\n            noReponseOnHP = true;\n\n        if (noReponseOnGoogle && noReponseOnHP)\n            return [];\n\n        return combineResults(responseGoogle, responseHotPepper);\n\n        /*if (responseGoogle == 'NO_RESULTS' || responseGoogle == undefined || promise1 == undefined) {\n            if (responseHotPepper == 'NO_RESULTS' || responseHotPepper == undefined || promise2 == undefined) {\n\n                //dispatch(mapSlice.actions.setSearchResults([]));\n                //dispatch(mapSlice.actions.setSearchStatus('NO_RESULTS'));\n                return [];\n            } else {\n\n\n                //dispatch(mapSlice.actions.setSearchResults(responseHotPepper));\n\n                //dispatch(mapSlice.actions.setSearchStatus('DO３２NE'));\n                return responseHotPepper;\n            }\n\n        } else {\n            if (responseHotPepper == 'NO_RESULTS' || responseHotPepper == undefined || promise2 == undefined) {\n\n\n                //dispatch(mapSlice.actions.setSearchResults(responseGoogle));\n\n                //dispatch(mapSlice.actions.setSearchStatus('DO１１１NE'));\n                return responseGoogle;\n            } else {\n\n\n                r\n\n                //dispatch(mapSlice.actions.setSearchResults(combinedResults));\n\n                //dispatch(mapSlice.actions.setSearchStatus('DsONE'));\n            }\n\n\n        }*/\n\n\n\n\n    })\n};\n\n\nexport function createGoogleRequest(req) {\n\n    let request = {\n\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}\n\nexport function createHotPepperRequest(req) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    let lat = req.userLoc.lat();\n    let lng = req.userLoc.lng();\n    let keyword = req.keyword;\n    const apiURL = `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n\n    return apiURL;\n}\n\nexport function combineResults(res1, res2) {\n\n    if (res1[0].name == 'NO_RESULTS' && res2[0].name == 'NO_RESULTS') {\n        return 'NO_RESULTS';\n    } else if (res2[0].name == '_NO_RESULTS') {\n        return res1;\n    } else if (res2[0].name == '_NO_RESULTS') {\n        return res1;\n    }\n\n    let res3 = res1.concat(res2);\n\n    return res3;\n\n}\n\nexport function perseGoogleResults(results) {\n\n    let result_temp = {};\n    console.log(results)\n    let parsedResults = [];\n    if (results == 'ZERO_RESULTS') {\n\n\n        return 'NO_RESULTS';\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        result_temp.type = 1;\n        result_temp.rat = result.user_ratings_total;\n        result_temp.google = result.url;\n\n        // result_temp.photo = result.photos[0].getURL;\n\n\n\n        parsedResults.push(result_temp);\n    }\n\n\n    return parsedResults;\n\n\n}\n\n\nexport function perseHotPepperResults(res) {\n\n\n\n    let result_temp = {};\n    let parsedResults = [];\n    let results = res.data.results.shop;\n    if (res.data.results.shop.length <= 0) {\n\n        return 'NO_RESULTS';\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.address;\n        result_temp.rating = 5;\n        result_temp.lat = result.lat;\n        result_temp.lng = result.lng;\n        result_temp.type = 2;\n        result_temp.photo = result.photo.mobile.l;\n        result_temp.hotpepper = `hotpepper.jp/str${result.id}`;\n\n\n        parsedResults.push(result_temp);\n\n    }\n\n    return parsedResults;\n\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}