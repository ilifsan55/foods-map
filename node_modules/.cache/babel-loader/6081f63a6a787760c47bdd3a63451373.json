{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/Gohan/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { setState, setResults, setRotation, setContents } from '../redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    initMap(document.getElementById('map'), props.userLoc, props.radius);\n    let request = {\n      location: props.userLoc,\n      radius: props.radius,\n      keyword: [props.result],\n      type: 'restaurant'\n    };\n    getPlace(request).then(response => {\n      let res = resultsController(response);\n      dispatch(setResults(res));\n    }).catch(status => {\n      dispatch(setResults(resultsController(0)));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = GMap;\n\nfunction initMap(element, userLoc, radius) {\n  //google mapを実際に作成する\n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //検索機能を利用するためにgoogle placeを作成\n\n  service = new window.google.maps.places.PlacesService(map); //ユーザーの位置及び検索範囲を描画\n\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#ff0000',\n    fillOpacity: 0.2,\n    map: map,\n    radius: radius * 2,\n    strokeColor: '#ff0000',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n}\n\nfunction getPlace(request) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\n\n;\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"names":["React","useEffect","setState","setResults","setRotation","setContents","useSelector","useDispatch","GMap","props","dispatch","initMap","document","getElementById","userLoc","radius","request","location","keyword","result","type","getPlace","then","response","res","resultsController","catch","status","element","map","window","google","maps","Map","center","zoom","service","places","PlacesService","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","userpos","Promise","resolve","reject","nearbySearch","results"],"sources":["/Users/kokiyamamoto/Desktop/Gohan/src/components/gmap.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {setState,setResults ,setRotation, setContents} from '../redux/appSlice';\nimport {useSelector, useDispatch} from 'react-redux';\n\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n\n        initMap(document.getElementById('map'), props.userLoc, props.radius);\n\n        let request = {\n            location: props.userLoc,\n            radius: props.radius,\n            keyword: [props.result],\n            type: 'restaurant',\n\n        };\n        getPlace(request).then((response) => {\n            let res = resultsController(response);\n            dispatch(setResults(res));\n        }).catch((status) => {\n            dispatch(setResults(resultsController(0)));\n        }\n        );\n    })\n    return (\n        <div style={{}} id='map'></div>\n    )\n}\n\nfunction initMap(element, userLoc, radius) {\n    //google mapを実際に作成する\n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //検索機能を利用するためにgoogle placeを作成\n    service = new window.google.maps.places.PlacesService(map);\n\n    //ユーザーの位置及び検索範囲を描画\n    let circle = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#ff0000',\n        fillOpacity: 0.2,\n        map: map,\n        radius: radius*2,\n        strokeColor: '#ff0000',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n}\n\nfunction getPlace(request) {\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n};\n\n\nexport default GMap;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0CC,WAA1C,QAA4D,mBAA5D;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,IAAIC,QAAQ,GAAGH,WAAW,EAA1B;EAEAN,SAAS,CAAC,MAAM;IAEZU,OAAO,CAACC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAD,EAAiCJ,KAAK,CAACK,OAAvC,EAAgDL,KAAK,CAACM,MAAtD,CAAP;IAEA,IAAIC,OAAO,GAAG;MACVC,QAAQ,EAAER,KAAK,CAACK,OADN;MAEVC,MAAM,EAAEN,KAAK,CAACM,MAFJ;MAGVG,OAAO,EAAE,CAACT,KAAK,CAACU,MAAP,CAHC;MAIVC,IAAI,EAAE;IAJI,CAAd;IAOAC,QAAQ,CAACL,OAAD,CAAR,CAAkBM,IAAlB,CAAwBC,QAAD,IAAc;MACjC,IAAIC,GAAG,GAAGC,iBAAiB,CAACF,QAAD,CAA3B;MACAb,QAAQ,CAACP,UAAU,CAACqB,GAAD,CAAX,CAAR;IACH,CAHD,EAGGE,KAHH,CAGUC,MAAD,IAAY;MACjBjB,QAAQ,CAACP,UAAU,CAACsB,iBAAiB,CAAC,CAAD,CAAlB,CAAX,CAAR;IACH,CALD;EAOH,CAlBQ,CAAT;EAmBA,oBACI;IAAK,KAAK,EAAE,EAAZ;IAAgB,EAAE,EAAC;EAAnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH;;GA1BQjB,I;UAEUD,W;;;KAFVC,I;;AA4BT,SAASG,OAAT,CAAiBiB,OAAjB,EAA0Bd,OAA1B,EAAmCC,MAAnC,EAA2C;EACvC;EACAc,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BL,OAA3B,EAAoC;IACtCM,MAAM,EAAEpB,OAD8B;IAEtCqB,IAAI,EAAE;EAFgC,CAApC,CAAN,CAFuC,CAMvC;;EACAC,OAAO,GAAG,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAnB,CAA0BC,aAA9B,CAA4CT,GAA5C,CAAV,CAPuC,CASvC;;EACA,IAAIU,MAAM,GAAG,IAAIT,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,MAAvB,CAA8B;IACvCN,MAAM,EAAEpB,OAD+B;IAEvC2B,SAAS,EAAE,SAF4B;IAGvCC,WAAW,EAAE,GAH0B;IAIvCb,GAAG,EAAEA,GAJkC;IAKvCd,MAAM,EAAEA,MAAM,GAAC,CALwB;IAMvC4B,WAAW,EAAE,SAN0B;IAOvCC,aAAa,EAAE,CAPwB;IAQvCC,YAAY,EAAE;EARyB,CAA9B,CAAb;EAUA,IAAIC,OAAO,GAAG,IAAIhB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,MAAvB,CAA8B;IACxCN,MAAM,EAAEpB,OADgC;IAExC2B,SAAS,EAAE,SAF6B;IAGxCC,WAAW,EAAE,IAH2B;IAIxCb,GAAG,EAAEA,GAJmC;IAKxCd,MAAM,EAAE,EALgC;IAMxC4B,WAAW,EAAE,SAN2B;IAOxCC,aAAa,EAAE,CAPyB;IAQxCC,YAAY,EAAE;EAR0B,CAA9B,CAAd;AAWH;;AAED,SAASxB,QAAT,CAAkBL,OAAlB,EAA2B;EACvB,OAAO,IAAI+B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACpCb,OAAO,CAACc,YAAR,CAAqBlC,OAArB,EAA8B,CAACmC,OAAD,EAAUxB,MAAV,KAAqB;MAC/C,IAAIA,MAAM,KAAK,IAAf,EAAqB;QACjBqB,OAAO,CAACG,OAAD,CAAP;MACH,CAFD,MAEO;QACHF,MAAM,CAACtB,MAAD,CAAN;MACH;IACJ,CAND;EAOH,CARM,CAAP;AASH;;AAAA;AAGD,eAAenB,IAAf"},"metadata":{},"sourceType":"module"}