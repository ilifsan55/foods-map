{"ast":null,"code":"export function initMap(element, userLoc) {\n  console.log(\"Map Initialized\"); //create an actual gmap \n\n  let map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //draw user and user radius\n\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  return map;\n}\nexport function initService(map) {\n  let service = new window.google.maps.places.PlacesService(map);\n  return service;\n}\nexport function doGoogleMapSearchPromise(request, service) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport function createGoogleRequest(req) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4'; //a request object for the initial search.\n\n  let request = {\n    location: req.userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  return request;\n}\nexport function createMarker(place, str, map) {\n  let marker = new window.google.maps.Marker({\n    map: map,\n    label: String(str),\n    position: place.geometry.location\n  });\n}\nexport function perseGoogleResults(results) {\n  let parsedResults = [];\n\n  if (results == 0 || results.length <= 0) {\n    let result_temp = {};\n    result_temp.name = '何も見つかりませんでした。';\n    result_temp.vicinity = '';\n    result_temp.rating = '';\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result_temp = {};\n    let result = results[i];\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}","map":{"version":3,"names":["initMap","element","userLoc","console","log","map","window","google","maps","Map","center","zoom","userpos","Circle","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","initService","service","places","PlacesService","doGoogleMapSearchPromise","request","Promise","resolve","reject","nearbySearch","results","status","createGoogleRequest","req","apiKeyHotPepper","apiURL","location","keyword","type","createMarker","place","str","marker","Marker","label","String","position","geometry","perseGoogleResults","parsedResults","length","result_temp","name","vicinity","rating","push","i","result","lat","lng"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/mapapi.js"],"sourcesContent":["\nexport function initMap(element, userLoc) {\n    console.log(\"Map Initialized\");\n    //create an actual gmap \n    let map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //draw user and user radius\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n    return map;\n\n}\n\nexport function initService(map) {\n\n    let service = new window.google.maps.places.PlacesService(map);\n    return service;\n}\n\nexport function doGoogleMapSearchPromise(request, service) {\n\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n\n}\n\nexport function createGoogleRequest(req) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4';\n\n    //a request object for the initial search.\n    let request = {\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}\n\nexport function createMarker(place, str, map) {\n\n    let marker = new window.google.maps.Marker({\n        map: map,\n        label: String(str),\n        position: place.geometry.location\n    });\n\n}\n\nexport function perseGoogleResults(results) {\n\n    let parsedResults = [];\n    if (results == 0 || results.length <= 0) {\n\n        let result_temp = {};\n        result_temp.name = '何も見つかりませんでした。';\n        result_temp.vicinity = '';\n        result_temp.rating = '';\n        parsedResults.push(result_temp);\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result_temp = {};\n        let result = results[i];\n       \n        \n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}