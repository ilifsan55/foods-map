{"ast":null,"code":"let map;\nlet service;\nlet markers = [];\nlet circles = [];\nconst defaultUserLoc = {\n  lat: 35.6809591,\n  lng: 139.7673068\n};\nexport function initMap(element, userLoc) {\n  console.log('Map Initialized');\n  const map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  });\n  /*\n  let userpos = new window.google.maps.Circle({\n      center: userLoc,\n      fillColor: '#0000ff',\n      fillOpacity: 0.45,\n      map: map,\n      radius: 20,\n      strokeColor: '#0000ff',\n      strokeOpacity: 1,\n      strokeWeight: 1\n  });\n  */\n\n  return map;\n}\nexport function initService(map) {\n  const service = new window.google.maps.places.PlacesService(map);\n  return service;\n}\nexport function createMapInstance() {\n  map = initMap(document.getElementById('map'), defaultUserLoc);\n  service = initService(map);\n  return map;\n}\nexport function doGoogleMapSearchPromise(request, service) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport function createMarker(lat, lng, index, scrollFunc, openFunc, name) {\n  const pixelOffset = new window.google.maps.Size(0, -40);\n  const marker = new window.google.maps.Marker({\n    map: map,\n    position: {\n      lat: lat,\n      lng: lng\n    } // label: name\n\n  });\n  marker.addListener('mouseover', () => {\n    const hover = new window.google.maps.InfoWindow({\n      map: map,\n      content: name,\n      noSuppress: true,\n      zIndex: 20000,\n      pixelOffset: pixelOffset\n    });\n    hover.setPosition({\n      lat: lat,\n      lng: lng\n    });\n  });\n  marker.addListener('mouseout', () => {\n    if (hover) {\n      hover.close();\n    }\n  });\n  marker.addListener('click', () => {\n    scrollFunc(index * 316);\n    spenFunc();\n  });\n  markers.push(marker);\n}\nexport function deleteMarkers() {\n  for (let i = 0; i < markers.length; i++) {\n    markers[i].setMap(null);\n  }\n\n  markers = [];\n}\nexport function deleteCircles() {\n  for (let i = 0; i < circles.length; i++) {\n    circles[i].setMap(null);\n  }\n\n  circles = [];\n}\nexport function createCircle(lat, lng, radius) {\n  let circle = new window.google.maps.Circle({\n    center: {\n      lat: lat,\n      lng: lng\n    },\n    fillColor: '#0000ff',\n    fillOpacity: 0.15,\n    map: map,\n    radius: radius,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  circles.push(circle);\n}\nexport const getMapObject = () => {\n  return map;\n};\nexport const getCenter = () => {\n  let latlng = map.getCenter();\n  return latlng;\n};\nexport const getServiceObject = () => {\n  return service;\n};","map":{"version":3,"names":["map","service","markers","circles","defaultUserLoc","lat","lng","initMap","element","userLoc","console","log","window","google","maps","Map","center","zoom","initService","places","PlacesService","createMapInstance","document","getElementById","doGoogleMapSearchPromise","request","Promise","resolve","reject","nearbySearch","results","status","createMarker","index","scrollFunc","openFunc","name","pixelOffset","Size","marker","Marker","position","addListener","hover","InfoWindow","content","noSuppress","zIndex","setPosition","close","spenFunc","push","deleteMarkers","i","length","setMap","deleteCircles","createCircle","radius","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","getMapObject","getCenter","latlng","getServiceObject"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/map.js"],"sourcesContent":["let map;\nlet service;\nlet markers = [];\nlet circles = [];\nconst defaultUserLoc = {\n    lat: 35.6809591,\n    lng: 139.7673068,\n};\nexport function initMap(element, userLoc) {\n    console.log('Map Initialized');\n    const map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15,\n    });\n    /*\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    */\n    return map;\n}\nexport function initService(map) {\n    const service = new window.google.maps.places.PlacesService(map);\n    return service;\n}\nexport function createMapInstance() {\n    map = initMap(document.getElementById('map'), defaultUserLoc);\n    service = initService(map);\n    return map;\n}\nexport function doGoogleMapSearchPromise(request, service) {\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n}\nexport function createMarker(lat, lng, index, scrollFunc, openFunc, name) {\n    const pixelOffset = new window.google.maps.Size(0, -40);\n    const marker = new window.google.maps.Marker({\n        map: map,\n        position: {lat: lat, lng: lng},\n        // label: name\n    });\n    marker.addListener('mouseover', () => {\n    const hover = new window.google.maps.InfoWindow({\n            map: map,\n            content: name,\n            noSuppress: true,\n            zIndex: 20000,\n           pixelOffset: pixelOffset,\n        });\n        hover.setPosition({lat: lat, lng: lng});\n    });\n\n    marker.addListener('mouseout', ()=> {\n        if (hover) {\n            hover.close();\n        }\n    });\n\n    marker.addListener( 'click', ()=> {\n        scrollFunc(index*316);\n        spenFunc();\n    }  );\n    markers.push(marker);\n}\nexport function deleteMarkers () {\n    for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n    }\n    markers = [];\n}\nexport function deleteCircles () {\n\n    for (let i = 0; i < circles.length; i++) {\n        circles[i].setMap(null);\n    }\n\n    circles = [];\n\n}\n\nexport function createCircle(lat, lng, radius) {\n\n    let circle = new window.google.maps.Circle({\n        center: { lat: lat, lng: lng },\n        fillColor: '#0000ff',\n        fillOpacity: 0.15,\n        map: map,\n        radius: radius,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1,\n    });\n    circles.push(circle);\n}\nexport const getMapObject = ()=> {\n    return map;\n}\nexport const getCenter = ()=> {\n    let latlng = map.getCenter();\n    return latlng;\n}\nexport const getServiceObject = () => {\n    return service;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}