{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 41\n  }, this);\n};\n\n_c = AnyReactComponent;\nlet countofSpins = 0;\nconst wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\", \"AA\"];\nconst colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\nconst wheelRadius = 200; // in px\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\nlet userLocation = null;\nlet location = 0;\nlet isApiLoaded = false;\nlet drawElement;\nlet longitude;\nlet radius;\nlet latitude;\nlet center = {\n  lat: 35.4122,\n  lng: 139.4130\n};\n\nfunction SimpleMap() {\n  const defaultProps = {\n    center: {\n      center\n    },\n    zoom: 11\n  };\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"\n        },\n        defaultCenter: defaultProps.center,\n        defaultZoom: defaultProps.zoom,\n        children: /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n          lat: 59.955413,\n          lng: 30.337844,\n          text: \"My Marker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c2 = SimpleMap;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  let mainState = useSelector(state => state.reducer.mainState);\n\n  if (userLocation == null) {\n    let prm = getUserLocation.then(function (value) {\n      // 非同期処理が成功した場合\n      console.log('The user location was sucssesfully obtained:');\n      userLocation = value;\n      center = {\n        lat: userLocation.coords.latitude,\n        lng: userLocation.coords.longitude\n      };\n    }).catch(function (value) {\n      // 非同期処理が失敗した場合\n      console.log('couldnt obtain the user location:');\n      userLocation = null;\n    });\n  }\n\n  if (mainState != 2) {\n    drawElement = /*#__PURE__*/_jsxDEV(DrawWheel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this);\n  } else {\n    drawElement = /*#__PURE__*/_jsxDEV(DrawResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: drawElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"sg0hwWyic8+klPAxuAGkdgBKzxY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c3 = App;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\n\nfunction getLocationinfo() {\n  let longitude = userLocation.coords;\n  let latitude = userLocation.coords;\n  let radius = 1000;\n}\n\nfunction DrawResult() {\n  _s2();\n\n  let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n  let resultDegree = wheelRotation % 360;\n  let degreePerContent = 360 / wheelContents.length;\n  let result = \"Error\";\n\n  if (degreePerContent > resultDegree) {\n    result = wheelContents[0];\n  } else {\n    for (let i = 1; i < 9; i++) {\n      if (resultDegree - degreePerContent * i <= 0) {\n        result = wheelContents[i - 1];\n        break;\n      }\n    }\n  }\n\n  service = new google.maps.places.PlacesService(map);\n  service.nearbySearch(request, callback);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(SimpleMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"button-1\",\n      children: \"\\u3082\\u3046\\u4E00\\u5EA6\\u3084\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"button-2\",\n      children: \"\\u30EB\\u30FC\\u30EC\\u30C3\\u30C8\\u3092\\u30AB\\u30B9\\u30BF\\u30DE\\u30A4\\u30BA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"showresult\",\n      children: [\"Result is \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DrawResult, \"aJYjEb2whAjHkkNVlhGPNHaT7ik=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = DrawResult;\n\nfunction DrawWheel() {\n  _s3();\n\n  let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n  let mainState = useSelector(state => state.reducer.mainState);\n  const dispatch = useDispatch(); //ルーレット描画用＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n  let styleObjectArray = [];\n  let degreePerContents = 360 / wheelContents.length;\n  let polygon = Math.tan(3.14 / wheelContents.length);\n  let sizeofEdge = polygon * wheelRadius;\n  wheelContents.forEach((value, index) => {\n    let colorCode_temp = colorCode[index];\n\n    if (colorCode_temp == undefined) {\n      colorCode_temp = \"#FFFFFF\";\n    }\n\n    let style = {\n      'borderWidth': `200px ${sizeofEdge}px 0`,\n      'transformOrigin': `${sizeofEdge}px 200px`,\n      'left': `${wheelRadius - sizeofEdge}px`,\n      'transform': `rotate(${index * degreePerContents}deg)`,\n      'borderColor': `${colorCode_temp} transparent`\n    };\n    styleObjectArray.push(style);\n  }); //ここまで＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n  const WheelSpin = () => {\n    if (mainState == 1) {\n      //the Whell is runnning!\n      return;\n    }\n\n    countofSpins++;\n    let newSpin = 3000 * countofSpins;\n    let rndSpin = Math.floor(Math.random() * 360) + 1;\n    let intervalID = setInterval(() => {\n      dispatch(setState(2));\n    }, 800);\n    dispatch(setRotation(newSpin + rndSpin));\n    dispatch(setState(1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: WheelSpin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wheel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inner-wheel\",\n        style: {\n          transform: `rotate(${wheelRotation}deg)`\n        },\n        children: wheelContents.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styleObjectArray[index],\n          id: `content${index}`,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mid-wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(DrawWheel, \"1YPcD5v4P6L3CJsaQUKuvsm65Xo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c5 = DrawWheel;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"SimpleMap\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"DrawResult\");\n$RefreshReg$(_c5, \"DrawWheel\");","map":{"version":3,"names":["React","useState","useEffect","setState","setRotation","useSelector","useDispatch","axios","GoogleMapReact","AnyReactComponent","text","countofSpins","wheelContents","colorCode","wheelRadius","apikey","userLocation","location","isApiLoaded","drawElement","longitude","radius","latitude","center","lat","lng","SimpleMap","defaultProps","zoom","height","width","key","App","dispatch","mainState","state","reducer","prm","getUserLocation","then","value","console","log","coords","catch","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getLocationinfo","DrawResult","wheelRotation","resultDegree","degreePerContent","length","result","i","service","google","maps","places","PlacesService","map","nearbySearch","request","callback","DrawWheel","styleObjectArray","degreePerContents","polygon","Math","tan","sizeofEdge","forEach","index","colorCode_temp","undefined","style","push","WheelSpin","newSpin","rndSpin","floor","random","intervalID","setInterval","transform"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js"],"sourcesContent":["import './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nimport GoogleMapReact from 'google-map-react';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n\nlet countofSpins = 0;\n\nconst wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\", \"AA\"];\nconst colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\nconst wheelRadius = 200; // in px\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\nlet userLocation = null;\nlet location = 0;\nlet isApiLoaded = false;\nlet drawElement;\nlet longitude;\nlet radius;\nlet latitude;\nlet center = {\n    lat: 35.4122,\n    lng: 139.4130\n  };\nfunction SimpleMap() {\n    \n    const defaultProps = {center: {center},\n        zoom: 11\n    };\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={defaultProps.center}\n                defaultZoom={defaultProps.zoom}\n            >\n                <AnyReactComponent\n                    lat={59.955413}\n                    lng={30.337844}\n                    text=\"My Marker\"\n                />\n            </GoogleMapReact>\n        </div>\n    );\n}\n\n\nfunction App() {\n\n    const dispatch = useDispatch();\n\n    let mainState = useSelector(state => state.reducer.mainState);\n\n\n    if (userLocation == null) {\n        let prm = getUserLocation.then(function (value) {\n            // 非同期処理が成功した場合\n            console.log('The user location was sucssesfully obtained:');\n            userLocation = value;\n            center = {\n\n                lat: userLocation.coords.latitude,\n                lng: userLocation.coords.longitude\n            }\n            \n        }).catch(function (value) {\n            // 非同期処理が失敗した場合\n            console.log('couldnt obtain the user location:');\n            userLocation = null;\n        });\n    }\n\n    if (mainState != 2) {\n\n        drawElement = <DrawWheel></DrawWheel>;\n    } else {\n\n        drawElement = <DrawResult></DrawResult>;\n    }\n\n\n\n    return (\n        <div className=\"App\">\n            {drawElement}\n        </div>\n    );\n}\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\nfunction getLocationinfo() {\n\n    let longitude = userLocation.coords;\n    let latitude = userLocation.coords;\n    let radius = 1000;\n}\n\n\nfunction DrawResult() {\n\n\n    let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n\n    let resultDegree = wheelRotation % 360;\n    let degreePerContent = 360 / wheelContents.length;\n    let result = \"Error\";\n\n    if (degreePerContent > resultDegree) {\n        result = wheelContents[0];\n    } else {\n\n        for (let i = 1; i < 9; i++) {\n            if ((resultDegree - (degreePerContent * i)) <= 0) {\n                result = wheelContents[i - 1];\n                break;\n            }\n        }\n    }\n\n\n    service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, callback);\n\n    return (\n        <div id=\"wrapper\">\n            <SimpleMap></SimpleMap>\n            <span id=\"button-1\">もう一度やる</span>\n            <span id=\"button-2\">ルーレットをカスタマイズ</span>\n            <span id=\"showresult\">Result is {result}</span>\n\n        </div >\n    );\n}\n\n\n\nfunction DrawWheel() {\n\n    let wheelRotation = useSelector(state => state.reducer.wheelRotation);\n    let mainState = useSelector(state => state.reducer.mainState);\n    const dispatch = useDispatch();\n\n    //ルーレット描画用＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n    let styleObjectArray = [];\n    let degreePerContents = 360 / wheelContents.length;\n    let polygon = Math.tan(3.14 / wheelContents.length);\n    let sizeofEdge = polygon * wheelRadius;\n\n    wheelContents.forEach((value, index) => {\n\n        let colorCode_temp = colorCode[index]\n        if (colorCode_temp == undefined) {\n            colorCode_temp = \"#FFFFFF\";\n        }\n\n        let style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n            'left': `${wheelRadius - sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCode_temp} transparent`\n        }\n\n        styleObjectArray.push(style);\n    })\n\n    //ここまで＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝\n\n    const WheelSpin = () => {\n\n        if (mainState == 1) {\n            //the Whell is runnning!\n            return;\n        }\n\n        countofSpins++;\n        let newSpin = 3000 * countofSpins;\n        let rndSpin = Math.floor(Math.random() * (360)) + 1;\n        let intervalID = setInterval(() => { dispatch(setState(2)) }, 800)\n        dispatch(setRotation(newSpin + rndSpin));\n        dispatch(setState(1));\n\n    }\n\n    return (\n        <div id=\"wrapper\">\n            <button onClick={WheelSpin}></button>\n            <div id=\"wheel\">\n                <div id=\"inner-wheel\" style={{\n                    transform: `rotate(${wheelRotation}deg)`,\n                }}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n                        key={index}\n                        id={`content${index}`}>\n                        {value}</div>)}\n                </div>\n                <div id=\"mid-wheel\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}