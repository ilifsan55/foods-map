{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js\";\nimport './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\nconst loader = new Loader({\n  apikey: \"\",\n  version: \"weekly\",\n  libraries: [\"places\"]\n});\nloader.load().then(() => {}).catch(e => {});\n\nfunction gMap(props) {\n  return (\n    /*#__PURE__*/\n    // Important! Always set the container height explicitly\n    _jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"\n        },\n        defaultCenter: props.center,\n        defaultZoom: props.zoom,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: _ref => {\n          let {\n            map,\n            maps\n          } = _ref;\n          return handleApiLoaded(map, maps);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: _ref2 => {\n          let {\n            map,\n            maps\n          } = _ref2;\n          return handleApiLoaded(map, maps);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  );\n}\n\nexport default gMap;\n/*const handleApiLoaded = (map, maps) => {\n    console.log(map);\n    \n    let pyrmont = new window.google.maps.LatLng(35.4122, 139.4130);\n    let callback;\n\n    var request = {\n        location: pyrmont,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    let service = new window.google.maps.places.PlacesService;\n    service.nearbySearch(request, callback);\n\n};\n\nfunction gMap(props) {\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={props.center}\n                defaultZoom={props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            >\n            </GoogleMapReact>\n            <button onClick={({ map, maps }) => handleApiLoaded(map, maps)}></button>\n        </div>\n\n    );\n}\n\nexport default gMap; */","map":{"version":3,"names":["React","useState","useEffect","setState","setRotation","useSelector","useDispatch","axios","GoogleMapReact","Loader","Wrapper","apikey","loader","version","libraries","load","then","catch","e","gMap","props","height","width","key","center","zoom","map","maps","handleApiLoaded"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { Wrapper } from \"@googlemaps/react-wrapper\";\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\n\nconst loader = new Loader({\n    apikey: \"\",\n    version: \"weekly\",\n    libraries: [\"places\"],\n\n})\n\nloader.load().then(() => {\n\n}).catch((e) => {\n\n});\n\n\nfunction gMap(props) {\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={props.center}\n                defaultZoom={props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            >\n            </GoogleMapReact>\n            <button onClick={({ map, maps }) => handleApiLoaded(map, maps)}></button>\n        </div>\n\n    );\n}\n\nexport default gMap;\n\n/*const handleApiLoaded = (map, maps) => {\n    console.log(map);\n    \n    let pyrmont = new window.google.maps.LatLng(35.4122, 139.4130);\n    let callback;\n\n    var request = {\n        location: pyrmont,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    let service = new window.google.maps.places.PlacesService;\n    service.nearbySearch(request, callback);\n\n};\n\nfunction gMap(props) {\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={props.center}\n                defaultZoom={props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            >\n            </GoogleMapReact>\n            <button onClick={({ map, maps }) => handleApiLoaded(map, maps)}></button>\n        </div>\n\n    );\n}\n\nexport default gMap; */\n"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAEA,MAAMC,MAAM,GAAG,yCAAf;AAEA,MAAMC,MAAM,GAAG,IAAIH,MAAJ,CAAW;EACtBE,MAAM,EAAE,EADc;EAEtBE,OAAO,EAAE,QAFa;EAGtBC,SAAS,EAAE,CAAC,QAAD;AAHW,CAAX,CAAf;AAOAF,MAAM,CAACG,IAAP,GAAcC,IAAd,CAAmB,MAAM,CAExB,CAFD,EAEGC,KAFH,CAEUC,CAAD,IAAO,CAEf,CAJD;;AAOA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAEjB;IAAA;IACI;IACA;MAAK,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAV;QAAmBC,KAAK,EAAE;MAA1B,CAAZ;MAAA,wBACI,QAAC,cAAD;QACI,gBAAgB,EAAE;UAAEC,GAAG,EAAE;QAAP,CADtB;QAEI,aAAa,EAAEH,KAAK,CAACI,MAFzB;QAGI,WAAW,EAAEJ,KAAK,CAACK,IAHvB;QAII,kCAAkC,MAJtC;QAKI,iBAAiB,EAAE;UAAA,IAAC;YAAEC,GAAF;YAAOC;UAAP,CAAD;UAAA,OAAmBC,eAAe,CAACF,GAAD,EAAMC,IAAN,CAAlC;QAAA;MALvB;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAQ,OAAO,EAAE;UAAA,IAAC;YAAED,GAAF;YAAOC;UAAP,CAAD;UAAA,OAAmBC,eAAe,CAACF,GAAD,EAAMC,IAAN,CAAlC;QAAA;MAAjB;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAeH;;AAED,eAAeR,IAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}