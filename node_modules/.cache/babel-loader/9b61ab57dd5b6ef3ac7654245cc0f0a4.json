{"ast":null,"code":"import './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport { Loader } from \"@googlemaps/js-api-loader\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\nconst loader = new Loader({\n  apikey: \"\",\n  version: \"weekly\",\n  libraries: [\"places\"]\n});\nloader.load().then(() => {}).catch(e => {});\n/*const handleApiLoaded = (map, maps) => {\n    console.log(map);\n    \n    let pyrmont = new window.google.maps.LatLng(35.4122, 139.4130);\n    let callback;\n\n    var request = {\n        location: pyrmont,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    let service = new window.google.maps.places.PlacesService;\n    service.nearbySearch(request, callback);\n\n};\n\nfunction gMap(props) {\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={props.center}\n                defaultZoom={props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            >\n            </GoogleMapReact>\n            <button onClick={({ map, maps }) => handleApiLoaded(map, maps)}></button>\n        </div>\n\n    );\n}\n\nexport default gMap; */","map":{"version":3,"names":["React","useState","useEffect","setState","setRotation","useSelector","useDispatch","axios","GoogleMapReact","Loader","apikey","loader","version","libraries","load","then","catch","e"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import './base.css';\nimport React, { useState, useEffect } from 'react';\nimport { setState, setRotation } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\";\n\nconst loader = new Loader({\n    apikey: \"\",\n    version: \"weekly\",\n    libraries: [\"places\"],\n\n})\n\nloader.load().then(() => {\n\n}).catch((e) => {\n\n});\n\n/*const handleApiLoaded = (map, maps) => {\n    console.log(map);\n    \n    let pyrmont = new window.google.maps.LatLng(35.4122, 139.4130);\n    let callback;\n\n    var request = {\n        location: pyrmont,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    let service = new window.google.maps.places.PlacesService;\n    service.nearbySearch(request, callback);\n\n};\n\nfunction gMap(props) {\n\n    return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\" }}\n                defaultCenter={props.center}\n                defaultZoom={props.zoom}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n            >\n            </GoogleMapReact>\n            <button onClick={({ map, maps }) => handleApiLoaded(map, maps)}></button>\n        </div>\n\n    );\n}\n\nexport default gMap; */\n"],"mappings":"AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,MAAMC,MAAM,GAAG,yCAAf;AAEA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAW;EACtBC,MAAM,EAAE,EADc;EAEtBE,OAAO,EAAE,QAFa;EAGtBC,SAAS,EAAE,CAAC,QAAD;AAHW,CAAX,CAAf;AAOAF,MAAM,CAACG,IAAP,GAAcC,IAAd,CAAmB,MAAM,CAExB,CAFD,EAEGC,KAFH,CAEUC,CAAD,IAAO,CAEf,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}