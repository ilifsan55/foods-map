{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js\",\n    _s = $RefreshSig$();\n\nimport './Main.css';\nimport React, { useState } from 'react';\nimport { setState } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reducer } from './redux/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const app = useSelector(state => state.app);\n  let prm = getUserLocation.then(console.log(\"suc\")).catch(console.log(\"fail\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        // dispatch関数を実行することで該当のreducerが作動する\n        dispatch(setState(1));\n      },\n      children: app.mainState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s7UEEqi4wiGItSUNrmPkgfryKuo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject, options);\n});\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","setState","useSelector","useDispatch","reducer","App","dispatch","app","state","prm","getUserLocation","then","console","log","catch","mainState","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","options"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js"],"sourcesContent":["import './Main.css';\nimport React, { useState } from 'react';\nimport { setState } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reducer } from './redux/reducer'\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    const app = useSelector(state => state.app);\n    let prm = getUserLocation.then(console.log(\"suc\")).catch(console.log(\"fail\"));\n\n    return (\n        <div className=\"App\">\n            <span\n                onClick={() => {\n                    // dispatch関数を実行することで該当のreducerが作動する\n                    dispatch(setState(1));\n                }}\n            >{app.mainState}</span>\n        </div>\n    );\n}\n\nconst getUserLocation = new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options)\n    })\n\n\nexport default App;"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,GAAG,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,GAAhB,CAAvB;EACA,IAAIE,GAAG,GAAGC,eAAe,CAACC,IAAhB,CAAqBC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAArB,EAAyCC,KAAzC,CAA+CF,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA/C,CAAV;EAEA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MACI,OAAO,EAAE,MAAM;QACX;QACAP,QAAQ,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAR;MACH,CAJL;MAAA,UAKEM,GAAG,CAACQ;IALN;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAhBQV,G;UAEYF,W,EACLD,W;;;KAHPG,G;AAkBT,MAAMK,eAAe,GAAG,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACjDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD,EAA0DI,OAA1D;AACH,CAFmB,CAAxB;AAKA,eAAejB,GAAf"},"metadata":{},"sourceType":"module"}