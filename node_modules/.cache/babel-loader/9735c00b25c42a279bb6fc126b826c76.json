{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\n\nlet map, service, request;\nlet nearbyResults;\nservice = new window.google.maps.places.PlacesService(map);\n\nfunction initMap(element, userLoc) {\n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  });\n  service = new window.google.maps.places.PlacesService(map);\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    // 中心点(google.maps.LatLng)\n    fillColor: '#ff0000',\n    // 塗りつぶし色\n    fillOpacity: 0.2,\n    // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n    map: map,\n    // 表示させる地図（google.maps.Map）\n    radius: 300,\n    // 半径（ｍ）\n    strokeColor: '#ff0000',\n    // 外周色\n    strokeOpacity: 1,\n    // 外周透過度（0: 透明 ⇔ 1:不透明）\n    strokeWeight: 1 // 外周太さ（ピクセル）\n\n  });\n}\n\nfunction makeRequest(userLoc, radius) {\n  let request = {\n    location: userLoc,\n    radius: '500',\n    type: ['restaurant']\n  };\n  return request;\n}\n\nfunction createMarker(place, ifInitPoint) {\n  let placeLoc = place.geometry.location;\n  let marker = new window.google.maps.Marker({\n    map: map,\n    position: place.geometry.location\n  });\n}\n/*function callback(results, status) {\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n\n        nearbyResults = results;\n        dispatch(setResults(nearbyResults));\n        console.log(nearbyResults);\n        for (var i = 0; i < results.length; i++) {\n            createMarker(results[i]);\n        }\n    }\n}*/\n\n\nconst getPlace = request => {\n  return new Promise((resolve, reject) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results[0].geometry.location);\n      } else {\n        reject(status);\n      }\n    });\n  });\n};\n\nfunction Gmap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    initMap(document.getElementById('map'), props.userLoc);\n    let request = {\n      location: props.userLoc,\n      radius: '500',\n      type: ['restaurant']\n    };\n    service.nearbySearch(request);\n    promises.then(response => {\n      console.log(response.results);\n    });\n    getPlace(request);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gmap, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Gmap;\nexport default Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"names":["React","useEffect","useRef","ReactElement","axios","useSelector","useDispatch","setResults","apikey","map","service","request","nearbyResults","window","google","maps","places","PlacesService","initMap","element","userLoc","Map","center","zoom","circle","Circle","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","makeRequest","location","type","createMarker","place","ifInitPoint","placeLoc","geometry","marker","Marker","position","getPlace","Promise","resolve","reject","nearbySearch","results","status","Gmap","props","dispatch","document","getElementById","promises","then","response","console","log"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\nlet map, service, request;\nlet nearbyResults;\nservice = new window.google.maps.places.PlacesService(map);\nfunction initMap(element, userLoc) {\n\n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    service = new window.google.maps.places.PlacesService(map);\n    let circle = new window.google.maps.Circle({\n        center: userLoc,       // 中心点(google.maps.LatLng)\n        fillColor: '#ff0000',   // 塗りつぶし色\n        fillOpacity: 0.2,       // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n        map: map,             // 表示させる地図（google.maps.Map）\n        radius: 300,          // 半径（ｍ）\n        strokeColor: '#ff0000', // 外周色\n        strokeOpacity: 1,       // 外周透過度（0: 透明 ⇔ 1:不透明）\n        strokeWeight: 1         // 外周太さ（ピクセル）\n    });\n\n}\n\nfunction makeRequest(userLoc, radius) {\n\n    let request = {\n        location: userLoc,\n        radius: '500',\n        type: ['restaurant']\n    };\n    return request;\n}\n\nfunction createMarker(place, ifInitPoint) {\n    let placeLoc = place.geometry.location;\n    let marker = new window.google.maps.Marker({\n        map: map,\n        position: place.geometry.location,\n    });\n}\n\n/*function callback(results, status) {\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n\n        nearbyResults = results;\n        dispatch(setResults(nearbyResults));\n        console.log(nearbyResults);\n        for (var i = 0; i < results.length; i++) {\n            createMarker(results[i]);\n        }\n    }\n}*/\n\nconst getPlace = request => {\n    return new Promise((resolve, reject) => {\n        const service = new window.google.maps.places.PlacesService(map);\n        service.nearbySearch((request),(results,status) => {\n            if (status === 'OK') {\n                resolve(results[0].geometry.location);\n            } else {\n                reject(status);\n            }    \n        });    \n    });\n};\n\n\n\nfunction Gmap(props) {\n\n    let dispatch = useDispatch();\n    useEffect(() => {\n\n        initMap(document.getElementById('map'), props.userLoc);\n        let request = {\n            location: props.userLoc,\n            radius: '500',\n            type: ['restaurant']\n        };\n\n        \n        service.nearbySearch(request);\n        promises.then((response) => {\n            console.log(response.results);\n        });\n        getPlace(request);\n    })\n    return (\n        <div style={{}} id=\"map\"></div>\n    )\n}\n\nexport default Gmap;"],"mappings":"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"},"metadata":{},"sourceType":"module"}