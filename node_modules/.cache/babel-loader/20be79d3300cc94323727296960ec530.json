{"ast":null,"code":"export function initMap(element, userLoc, radius) {\n  console.log(\"Map Initialized\"); //create an actual gmap \n\n  let map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //draw user and user radius\n\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#ff0000',\n    fillOpacity: 0.2,\n    map: map,\n    radius: radius * 2,\n    strokeColor: '#ff0000',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  return map;\n}\nexport function initService(map) {\n  let service = new window.google.maps.places.PlacesService(map);\n  return service;\n}\nexport function doGoogleMapSearchPromise(request) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport function createRequest(req, userLoc) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4'; //a request object for the initial search.\n\n  let request = {\n    location: userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  return request;\n}","map":{"version":3,"names":["initMap","element","userLoc","radius","console","log","map","window","google","maps","Map","center","zoom","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","userpos","initService","service","places","PlacesService","doGoogleMapSearchPromise","request","Promise","resolve","reject","nearbySearch","results","status","createRequest","req","apiKeyHotPepper","apiURL","location","keyword","type"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/mapapi.js"],"sourcesContent":["export function initMap(element, userLoc, radius) {\n    console.log(\"Map Initialized\");\n    //create an actual gmap \n    let map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //draw user and user radius\n    let circle = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#ff0000',\n        fillOpacity: 0.2,\n        map: map,\n        radius: radius * 2,\n        strokeColor: '#ff0000',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n    return map;\n\n}\n\nexport function initService(map) {\n\n    let service = new window.google.maps.places.PlacesService(map);\n\n    return service;\n}\n\nexport function doGoogleMapSearchPromise(request) {\n\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n\n}\n\nexport function createRequest(req, userLoc) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4';\n\n    //a request object for the initial search.\n    let request = {\n        location: userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}"],"mappings":"AAAA,OAAO,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2C;EAC9CC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAD8C,CAE9C;;EACA,IAAIC,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BT,OAA3B,EAAoC;IAC1CU,MAAM,EAAET,OADkC;IAE1CU,IAAI,EAAE;EAFoC,CAApC,CAAV,CAH8C,CAO9C;;EACA,IAAIC,MAAM,GAAG,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,CAA8B;IACvCH,MAAM,EAAET,OAD+B;IAEvCa,SAAS,EAAE,SAF4B;IAGvCC,WAAW,EAAE,GAH0B;IAIvCV,GAAG,EAAEA,GAJkC;IAKvCH,MAAM,EAAEA,MAAM,GAAG,CALsB;IAMvCc,WAAW,EAAE,SAN0B;IAOvCC,aAAa,EAAE,CAPwB;IAQvCC,YAAY,EAAE;EARyB,CAA9B,CAAb;EAUA,IAAIC,OAAO,GAAG,IAAIb,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,CAA8B;IACxCH,MAAM,EAAET,OADgC;IAExCa,SAAS,EAAE,SAF6B;IAGxCC,WAAW,EAAE,IAH2B;IAIxCV,GAAG,EAAEA,GAJmC;IAKxCH,MAAM,EAAE,EALgC;IAMxCc,WAAW,EAAE,SAN2B;IAOxCC,aAAa,EAAE,CAPyB;IAQxCC,YAAY,EAAE;EAR0B,CAA9B,CAAd;EAWA,OAAOb,GAAP;AAEH;AAED,OAAO,SAASe,WAAT,CAAqBf,GAArB,EAA0B;EAE7B,IAAIgB,OAAO,GAAG,IAAIf,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBc,MAAnB,CAA0BC,aAA9B,CAA4ClB,GAA5C,CAAd;EAEA,OAAOgB,OAAP;AACH;AAED,OAAO,SAASG,wBAAT,CAAkCC,OAAlC,EAA2C;EAE9C,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACpCP,OAAO,CAACQ,YAAR,CAAqBJ,OAArB,EAA8B,CAACK,OAAD,EAAUC,MAAV,KAAqB;MAC/C,IAAIA,MAAM,KAAK,IAAf,EAAqB;QACjBJ,OAAO,CAACG,OAAD,CAAP;MACH,CAFD,MAEO;QACHF,MAAM,CAACG,MAAD,CAAN;MACH;IACJ,CAND;EAOH,CARM,CAAP;AAUH;AAED,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BhC,OAA5B,EAAqC;EAExC,IAAIiC,eAAe,GAAG,kBAAtB;EACA,MAAMC,MAAM,GAAG,kHAAf,CAHwC,CAKxC;;EACA,IAAIV,OAAO,GAAG;IACVW,QAAQ,EAAEnC,OADA;IAEVC,MAAM,EAAE+B,GAAG,CAAC/B,MAFF;IAGVmC,OAAO,EAAEJ,GAAG,CAACI,OAHH;IAIVC,IAAI,EAAE,YAJI,CAIS;;EAJT,CAAd;EAQA,OAAOb,OAAP;AACH"},"metadata":{},"sourceType":"module"}