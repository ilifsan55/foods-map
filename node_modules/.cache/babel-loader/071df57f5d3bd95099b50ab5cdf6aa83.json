{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/resultdrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mapSlice } from '../redux/mapSlice';\nimport { width } from '@mui/system';\nimport ResultCard from './resultcard';\nimport { createMarker, createCircle } from './mapapi';\nimport { getMapObject } from './gmap';\nimport { getUserLocation } from './gmap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultDrawer(props) {\n  _s();\n\n  let searchResults = props.results;\n  let resultsListToggle = useSelector(state => state.mapSlice.resultsListToggle);\n\n  for (let i = 0; i <= searchResults.length; i++) {}\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"left\",\n    open: resultsListToggle,\n    variant: \"persistent\",\n    PaperProps: {\n      sx: {\n        marginTop: 8,\n        width: 400\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: (() => {\n        const d = [];\n        let userPos = getUserLocation();\n        let userCircle;\n\n        if (userCircle != null) {\n          userCircle.setMap(null);\n        }\n\n        userCirlce = createCircle(userPos.lat, userPos.lng, getMapObject(), 1000);\n\n        if (searchResults.length == 0) {\n          d.push( /*#__PURE__*/_jsxDEV(ResultCard, {\n            name: \"\\u691C\\u7D22\\u3057\\u3066\\u307F\\u307E\\u3057\\u3087\\u3046\",\n            vicinity: \"\\u4F8B\",\n            mode: \"noresults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }, this));\n          return d;\n        }\n\n        if (searchResults[0].name == 0) {\n          d.push( /*#__PURE__*/_jsxDEV(ResultCard, {\n            name: \"\\u4F55\\u3082\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002\",\n            vicinity: \"\\u691C\\u7D22\\u30EF\\u30FC\\u30C9\",\n            mode: \"noresults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this));\n          return d;\n        }\n\n        for (let i = 0; i < searchResults.length; i++) {\n          let r = searchResults[i];\n          createMarker(r.lat, r.lng, getMapObject());\n          d.push( /*#__PURE__*/_jsxDEV(ResultCard, {\n            name: r.name,\n            vicinity: r.vicinity,\n            mode: \"data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this));\n        }\n\n        return d;\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n/*\n   \n            \n*/\n\n_s(ResultDrawer, \"w0fg1t5bAKk4hC6qm9p4sLPhSAg=\", false, function () {\n  return [useSelector];\n});\n\n_c = ResultDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultDrawer\");","map":{"version":3,"names":["React","useEffect","Box","Drawer","useSelector","useDispatch","mapSlice","width","ResultCard","createMarker","createCircle","getMapObject","getUserLocation","ResultDrawer","props","searchResults","results","resultsListToggle","state","i","length","sx","marginTop","d","userPos","userCircle","setMap","userCirlce","lat","lng","push","name","r","vicinity"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/resultdrawer.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mapSlice } from '../redux/mapSlice';\nimport { width } from '@mui/system';\nimport ResultCard from './resultcard';\nimport { createMarker, createCircle } from './mapapi';\nimport { getMapObject } from './gmap';\nimport { getUserLocation } from './gmap';\n\nexport default function ResultDrawer(props) {\n\n    let searchResults = props.results;\n    \n    let resultsListToggle = useSelector(state => state.mapSlice.resultsListToggle);\n\n    for (let i = 0; i <= searchResults.length; i++) {\n\n\n    }\n\n\n    return (\n\n        <Drawer\n            anchor='left'\n            open={resultsListToggle}\n            variant=\"persistent\"\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 400,\n                }\n            }}\n        >\n\n            <Box>\n                {(() => {\n                    const d = [];\n                    let userPos = getUserLocation();\n                    let userCircle;\n                    if(userCircle!=null){\n                        \n                     userCircle.setMap(null);\n                    }\n                    userCirlce = createCircle(userPos.lat,userPos.lng,getMapObject(),1000);\n                    if(searchResults.length == 0){\n\n                        d.push(<ResultCard name='検索してみましょう' vicinity='例' mode='noresults'></ResultCard>);\n                        return d;\n\n                    }\n                    if(searchResults[0].name == 0){\n                        d.push(<ResultCard name='何も見つかりませんでした。' vicinity='検索ワード' mode='noresults'></ResultCard>);\n                        return d;\n                    }\n                    for (let i = 0; i < searchResults.length; i++) {\n                        \n                        let r = searchResults[i];\n                        createMarker(r.lat,r.lng, getMapObject());\n                        d.push(<ResultCard name={r.name} vicinity={r.vicinity} mode='data'></ResultCard>);\n                    }\n                    return d;\n                })()}\n\n            </Box>\n        </Drawer>\n\n    )\n\n\n}\n\n/*\n   \n            \n*/\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,UAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,eAAT,QAAgC,QAAhC;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAExC,IAAIC,aAAa,GAAGD,KAAK,CAACE,OAA1B;EAEA,IAAIC,iBAAiB,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACZ,QAAN,CAAeW,iBAAzB,CAAnC;;EAEA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,aAAa,CAACK,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD,CAG/C;;EAGD,oBAEI,QAAC,MAAD;IACI,MAAM,EAAC,MADX;IAEI,IAAI,EAAEF,iBAFV;IAGI,OAAO,EAAC,YAHZ;IAII,UAAU,EAAE;MACRI,EAAE,EAAE;QACAC,SAAS,EAAE,CADX;QAEAf,KAAK,EAAE;MAFP;IADI,CAJhB;IAAA,uBAYI,QAAC,GAAD;MAAA,UACK,CAAC,MAAM;QACJ,MAAMgB,CAAC,GAAG,EAAV;QACA,IAAIC,OAAO,GAAGZ,eAAe,EAA7B;QACA,IAAIa,UAAJ;;QACA,IAAGA,UAAU,IAAE,IAAf,EAAoB;UAEnBA,UAAU,CAACC,MAAX,CAAkB,IAAlB;QACA;;QACDC,UAAU,GAAGjB,YAAY,CAACc,OAAO,CAACI,GAAT,EAAaJ,OAAO,CAACK,GAArB,EAAyBlB,YAAY,EAArC,EAAwC,IAAxC,CAAzB;;QACA,IAAGI,aAAa,CAACK,MAAd,IAAwB,CAA3B,EAA6B;UAEzBG,CAAC,CAACO,IAAF,eAAO,QAAC,UAAD;YAAY,IAAI,EAAC,wDAAjB;YAA6B,QAAQ,EAAC,QAAtC;YAA0C,IAAI,EAAC;UAA/C;YAAA;YAAA;YAAA;UAAA,QAAP;UACA,OAAOP,CAAP;QAEH;;QACD,IAAGR,aAAa,CAAC,CAAD,CAAb,CAAiBgB,IAAjB,IAAyB,CAA5B,EAA8B;UAC1BR,CAAC,CAACO,IAAF,eAAO,QAAC,UAAD;YAAY,IAAI,EAAC,gFAAjB;YAAiC,QAAQ,EAAC,gCAA1C;YAAkD,IAAI,EAAC;UAAvD;YAAA;YAAA;YAAA;UAAA,QAAP;UACA,OAAOP,CAAP;QACH;;QACD,KAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAAa,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;UAE3C,IAAIa,CAAC,GAAGjB,aAAa,CAACI,CAAD,CAArB;UACAV,YAAY,CAACuB,CAAC,CAACJ,GAAH,EAAOI,CAAC,CAACH,GAAT,EAAclB,YAAY,EAA1B,CAAZ;UACAY,CAAC,CAACO,IAAF,eAAO,QAAC,UAAD;YAAY,IAAI,EAAEE,CAAC,CAACD,IAApB;YAA0B,QAAQ,EAAEC,CAAC,CAACC,QAAtC;YAAgD,IAAI,EAAC;UAArD;YAAA;YAAA;YAAA;UAAA,QAAP;QACH;;QACD,OAAOV,CAAP;MACH,CA1BA;IADL;MAAA;MAAA;MAAA;IAAA;EAZJ;IAAA;IAAA;IAAA;EAAA,QAFJ;AAiDH;AAED;AACA;AACA;AACA;;GAlEwBV,Y;UAIIT,W;;;KAJJS,Y"},"metadata":{},"sourceType":"module"}