{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // Initial values of the state\n\nconst initState = {\n  isUserLocRequested: false,\n  searchResults: [],\n  resultsListToggle: false\n}; // creating the slice\n\nexport const mapSlice = createSlice({\n  name: 'mapSlice',\n  initialState: initState,\n  reducers: {\n    requestUserLoc: (state, action) => {\n      state.isUserLocRequested = true;\n    },\n    setSearchResults: (state, action) => {\n      state.searchResults = action.payload;\n      state.resultsListToggle = true;\n    }\n  }\n});\nexport default mapSlice;","map":{"version":3,"names":["createSlice","initState","isUserLocRequested","searchResults","resultsListToggle","mapSlice","name","initialState","reducers","requestUserLoc","state","action","setSearchResults","payload"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/mapSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// Initial values of the state\nconst initState = {\n    isUserLocRequested: false,\n    searchResults: [],\n    resultsListToggle: false,\n};\n\n// creating the slice\nexport const mapSlice = createSlice({\n    name: 'mapSlice',\n    initialState: initState,\n    reducers: {\n        requestUserLoc: (state, action) => {\n            state.isUserLocRequested = true;\n        },\n        setSearchResults: (state, action) => {\n            state.searchResults = action.payload;\n            state.resultsListToggle = true;\n        }\n    }\n\n    });\n\nexport default mapSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;EACdC,kBAAkB,EAAE,KADN;EAEdC,aAAa,EAAE,EAFD;EAGdC,iBAAiB,EAAE;AAHL,CAAlB,C,CAMA;;AACA,OAAO,MAAMC,QAAQ,GAAGL,WAAW,CAAC;EAChCM,IAAI,EAAE,UAD0B;EAEhCC,YAAY,EAAEN,SAFkB;EAGhCO,QAAQ,EAAE;IACNC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACR,kBAAN,GAA2B,IAA3B;IACH,CAHK;IAINU,gBAAgB,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACP,aAAN,GAAsBQ,MAAM,CAACE,OAA7B;MACAH,KAAK,CAACN,iBAAN,GAA0B,IAA1B;IACH;EAPK;AAHsB,CAAD,CAA5B;AAeP,eAAeC,QAAf"},"metadata":{},"sourceType":"module"}