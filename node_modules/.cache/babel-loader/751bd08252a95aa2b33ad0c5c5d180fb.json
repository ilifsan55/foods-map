{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js\",\n    _s = $RefreshSig$();\n\nimport './base.css';\nimport React, { useState } from 'react';\nimport { setState } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reducer } from './redux/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const app = useSelector(state => state.app);\n  let prm = getUserLocation.then(function (value) {\n    // 非同期処理が成功した場合\n    console.log('実行結果:' + value); // => 実行結果:成功!\n  }).catch(function (value) {\n    // 非同期処理が失敗した場合\n    console.log('実行結果:' + value); // 呼ばれない\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DrawWheel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s7UEEqi4wiGItSUNrmPkgfryKuo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\n\nfunction DrawWheel() {\n  const wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\", \"AA\"];\n  const colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\n  const wheelRadius = 200; // in px\n\n  let styleObjectArray = [];\n  let degreePerContents = 360 / wheelContents.length;\n  let polygon = Math.tan(3.14 / wheelContents.length);\n  let sizeofEdge = polygon * wheelRadius;\n  let innerWheelStyle;\n  wheelContents.forEach((value, index) => {\n    let colorCode_temp = colorCode[index];\n\n    if (colorCode_temp == undefined) {\n      colorCode_temp = \"#FFFFFF\";\n    }\n\n    let style = {\n      'borderWidth': `200px ${sizeofEdge}px 0`,\n      'transformOrigin': `${sizeofEdge}px 200px`,\n      'left': `${wheelRadius - sizeofEdge}px`,\n      'transform': `rotate(${index * degreePerContents}deg)`,\n      'borderColor': `${colorCode_temp} transparent`\n    };\n    styleObjectArray.push(style);\n  });\n\n  function WheelSpin() {\n    let spin = Math.floor(Math.random() * 360) + 1801;\n    innerWheelStyle = {\n      'transform': `rotate(${spin}deg)`\n    };\n    $('#inner-wheel').css({\n      'transform': 'rotate(' + spin + 'deg)'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wheel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inner-wheel\",\n        style: innerWheelStyle,\n        children: wheelContents.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styleObjectArray[index],\n          id: `contant${index}`,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = DrawWheel;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"DrawWheel\");","map":{"version":3,"names":["React","useState","setState","useSelector","useDispatch","reducer","App","dispatch","app","state","prm","getUserLocation","then","value","console","log","catch","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","DrawWheel","wheelContents","colorCode","wheelRadius","styleObjectArray","degreePerContents","length","polygon","Math","tan","sizeofEdge","innerWheelStyle","forEach","index","colorCode_temp","undefined","style","push","WheelSpin","spin","floor","random","$","css","map"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/base.js"],"sourcesContent":["import './base.css';\nimport React, { useState } from 'react';\nimport { setState } from './redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reducer } from './redux/reducer'\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    const app = useSelector(state => state.app);\n    let prm = getUserLocation.then(function (value) {\n        // 非同期処理が成功した場合\n        console.log('実行結果:' + value); // => 実行結果:成功!\n    }).catch(function (value) {\n        // 非同期処理が失敗した場合\n        console.log('実行結果:' + value); // 呼ばれない\n    });\n\n    return (\n        <div className=\"App\">\n            <DrawWheel></DrawWheel>\n        </div>\n    );\n}\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\n\nfunction DrawWheel() {\n\n    const wheelContents = [\"Ramen\", \"Sushi\", \"ra\", \"Hamburgers\", \"ww\", \"hazure\", \"aa\",\"AA\"];\n    const colorCode = [\"#FF1493\", \"#FFFF1F\", \"#F0FFFF\", \"#ADFF2F\", \"#F33FFF\", \"#2FFFFF\", \"#ffffff\"];\n    const wheelRadius = 200; // in px\n    let styleObjectArray = [];\n    let degreePerContents = 360 / wheelContents.length;\n    let polygon = Math.tan(3.14 / wheelContents.length);\n    let sizeofEdge = polygon * wheelRadius;\n    let innerWheelStyle;\n\n    wheelContents.forEach((value, index) => {\n\n        let colorCode_temp = colorCode[index]\n        if(colorCode_temp == undefined){\n            colorCode_temp = \"#FFFFFF\";\n        }\n\n\n        let style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n\n            'left' : `${wheelRadius-sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCode_temp} transparent`\n        }\n        styleObjectArray.push(style);\n    })\n\n    function WheelSpin() {\n\n        let spin = Math.floor(Math.random() * (360)) + 1801;\n        innerWheelStyle = {\n            'transform' : `rotate(${spin}deg)`\n        }\n        $('#inner-wheel').css({'transform' : 'rotate(' + spin + 'deg)'});\n    \n    }\n\n    return (\n        <div id=\"wrapper\">\n            <div id=\"wheel\">\n                <div id=\"inner-wheel\" style={innerWheelStyle}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n\n                        key={index}\n                        id={`contant${index}`}>\n                        {value}</div>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}