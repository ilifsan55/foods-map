{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet shouldMapInitialize = true;\nconst radius = 1000;\n\nasync function asyncCall() {\n  const result = await searchPlaces(searchRequest, props.userLoc);\n  return result;\n}\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const searchRequest = useSelector(state => state.app.searchRequest);\n  console.log(searchRequest);\n  const GmapMemo = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  });\n\n  if (searchRequest.isDone == false) {\n    dispatch(appSlice.actions.setRequestDone());\n    dispatch(resultListSlice.actions.setSearchResult(asyncCall(searchRequest, props.userLoc)));\n  }\n\n  useEffect(() => {\n    if (shouldMapInitialize) {\n      initMap(document.getElementById('map'), props.userLoc, props.radius);\n      shouldMapInitialize = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"sc9UXUIjK8lcBhZr4AuuKVadzTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GMap;\n\nfunction searchPlaces(req, userLoc) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4'; //a request object for the initial search.\n\n  let request = {\n    location: userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  getPlace(request).then(response => {\n    let res = resultsParser(response); //places found! put them into parser to parse them for easier prossesing.\n\n    return res;\n  }).catch(status => {\n    let res = resultsParser(0); //Nothing found! try again with larger search radius (im gonna work on it!!!!)\n\n    return res;\n  });\n}\n\nfunction initMap(element, userLoc, radius) {\n  console.log(\"Map Initialized\"); //create an actual gmap \n\n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //create google places service for nearby serach feature\n\n  service = new window.google.maps.places.PlacesService(map); //draw user and user radius\n\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#ff0000',\n    fillOpacity: 0.2,\n    map: map,\n    radius: radius * 2,\n    strokeColor: '#ff0000',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n}\n\nfunction CreateMarker(place, index) {\n  let marker = new window.google.maps.Marker({\n    map: map,\n    label: String(index),\n    position: place.geometry.location\n  });\n}\n\n_c2 = CreateMarker;\n\nfunction resultsParser(results) {\n  let parsedResults = [];\n\n  if (results == 0 || results.length <= 0) {\n    let result_temp = {};\n    result_temp.name = '何も見つかりませんでした。';\n    result_temp.vicinity = '';\n    result_temp.rating = '';\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result_temp = {};\n    let result = results[i];\n    CreateMarker(result, i + 1);\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\n\nfunction getPlace(request) {\n  return new Promise((resolve, reject) => {\n    console.log(\"Searching\");\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\n\n;\nexport default GMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GMap\");\n$RefreshReg$(_c2, \"CreateMarker\");","map":{"version":3,"names":["React","useEffect","resultListSlice","appSlice","useSelector","useDispatch","axios","map","service","shouldMapInitialize","radius","asyncCall","result","searchPlaces","searchRequest","props","userLoc","GMap","dispatch","state","app","console","log","GmapMemo","memo","name","isDone","actions","setRequestDone","setSearchResult","initMap","document","getElementById","req","apiKeyHotPepper","apiURL","request","location","keyword","type","getPlace","then","response","res","resultsParser","catch","status","element","window","google","maps","Map","center","zoom","places","PlacesService","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","userpos","CreateMarker","place","index","marker","Marker","label","String","position","geometry","results","parsedResults","length","result_temp","vicinity","rating","push","i","lat","lng","Promise","resolve","reject","nearbySearch"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\n\n\nlet map, service;\nlet shouldMapInitialize = true;\nconst radius = 1000;\n\nasync function asyncCall() {\n    const result = await searchPlaces(searchRequest, props.userLoc);\n    return result;\n    \n}\n  \n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const searchRequest = useSelector(state => state.app.searchRequest);\n\n    console.log(searchRequest);\n\n    \n\n    const GmapMemo = React.memo(props => {\n        return <h1>Hello {props.name}</h1>;\n    });\n\n    if (searchRequest.isDone == false) {\n        \n        dispatch(appSlice.actions.setRequestDone());\n\n        dispatch(resultListSlice.actions.setSearchResult(asyncCall(searchRequest, props.userLoc)));\n        \n\n    }\n\n    useEffect(() => {\n        if (shouldMapInitialize) {\n            initMap(document.getElementById('map'), props.userLoc, props.radius);\n            shouldMapInitialize = false;\n        }\n    })\n    return (\n        <div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\nfunction searchPlaces(req, userLoc) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4';\n\n    //a request object for the initial search.\n    let request = {\n        location: userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    getPlace(request).then((response) => {\n\n        let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n        return res;\n\n    }).catch((status) => {\n\n        let res = resultsParser(0); //Nothing found! try again with larger search radius (im gonna work on it!!!!)\n        return res;\n\n    });\n\n}\n\nfunction initMap(element, userLoc, radius) {\n    console.log(\"Map Initialized\");\n    //create an actual gmap \n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //create google places service for nearby serach feature\n    service = new window.google.maps.places.PlacesService(map);\n\n    //draw user and user radius\n    let circle = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#ff0000',\n        fillOpacity: 0.2,\n        map: map,\n        radius: radius * 2,\n        strokeColor: '#ff0000',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n}\n\nfunction CreateMarker(place, index) {\n\n    let marker = new window.google.maps.Marker({\n        map: map,\n        label: String(index),\n        position: place.geometry.location\n    });\n\n}\n\n\nfunction resultsParser(results) {\n\n    let parsedResults = [];\n    if (results == 0 || results.length <= 0) {\n\n        let result_temp = {};\n        result_temp.name = '何も見つかりませんでした。';\n        result_temp.vicinity = '';\n        result_temp.rating = '';\n        parsedResults.push(result_temp);\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result_temp = {};\n        let result = results[i];\n        CreateMarker(result, i + 1);\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\nfunction getPlace(request) {\n    return new Promise((resolve, reject) => {\n        console.log(\"Searching\");\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n};\n\n\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}