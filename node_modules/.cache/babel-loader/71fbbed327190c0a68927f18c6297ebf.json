{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\n\nlet map, service;\n\nfunction initMap(element, userLoc) {\n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  });\n  service = new window.google.maps.places.PlacesService(map);\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    // 中心点(google.maps.LatLng)\n    fillColor: '#ff0000',\n    // 塗りつぶし色\n    fillOpacity: 0.2,\n    // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n    map: map,\n    // 表示させる地図（google.maps.Map）\n    radius: 300,\n    // 半径（ｍ）\n    strokeColor: '#ff0000',\n    // 外周色\n    strokeOpacity: 1,\n    // 外周透過度（0: 透明 ⇔ 1:不透明）\n    strokeWeight: 1 // 外周太さ（ピクセル）\n\n  });\n}\n\nfunction nearbySearch(userLoc, radius) {\n  let request = {\n    location: userLoc,\n    radius: '500',\n    type: ['restaurant']\n  };\n  service.nearbySearch(request, (results, status) => {\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n      return results;\n    }\n  });\n}\n\nfunction Gmap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    initMap(document.getElementById('map'), userLoc); //let results = nearbySearch(props.userLoc);\n\n    dispatch(setResults(results));\n    console.log(results);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Gmap, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Gmap;\nexport default Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"names":["React","useEffect","useRef","ReactElement","axios","useSelector","useDispatch","setResults","apikey","map","service","initMap","element","userLoc","window","google","maps","Map","center","zoom","places","PlacesService","circle","Circle","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","nearbySearch","request","location","type","results","status","PlacesServiceStatus","OK","Gmap","props","dispatch","document","getElementById","console","log"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\nlet map, service;\n\nfunction initMap(element, userLoc) {\n\n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    service = new window.google.maps.places.PlacesService(map);\n\n    let circle = new window.google.maps.Circle({\n        center: userLoc,       // 中心点(google.maps.LatLng)\n        fillColor: '#ff0000',   // 塗りつぶし色\n        fillOpacity: 0.2,       // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n        map: map,             // 表示させる地図（google.maps.Map）\n        radius: 300,          // 半径（ｍ）\n        strokeColor: '#ff0000', // 外周色\n        strokeOpacity: 1,       // 外周透過度（0: 透明 ⇔ 1:不透明）\n        strokeWeight: 1         // 外周太さ（ピクセル）\n       });\n\n}\n\nfunction nearbySearch(userLoc,radius){\n\n    let request = {\n        location: userLoc,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    service.nearbySearch(request, (results, status) => {\n        if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n            return results;\n        }\n    });\n}\n\n\nfunction Gmap(props) {\n\n    let dispatch = useDispatch();\n    useEffect(() => {\n\n        initMap(document.getElementById('map'),userLoc);\n        //let results = nearbySearch(props.userLoc);\n        dispatch(setResults(results));\n        console.log(results);\n\n    }, []);\n    return (\n            <div style={{}} id=\"map\"></div>\n    )\n}\n\nexport default Gmap;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,YAAnC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,MAAM,GAAG,yCAAf,C,CAA0D;;AAC1D,IAAIC,GAAJ,EAASC,OAAT;;AAEA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;EAE/BJ,GAAG,GAAG,IAAIK,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BL,OAA3B,EAAoC;IACtCM,MAAM,EAAEL,OAD8B;IAEtCM,IAAI,EAAE;EAFgC,CAApC,CAAN;EAIAT,OAAO,GAAG,IAAII,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAnB,CAA0BC,aAA9B,CAA4CZ,GAA5C,CAAV;EAEA,IAAIa,MAAM,GAAG,IAAIR,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBO,MAAvB,CAA8B;IACvCL,MAAM,EAAEL,OAD+B;IAChB;IACvBW,SAAS,EAAE,SAF4B;IAEf;IACxBC,WAAW,EAAE,GAH0B;IAGf;IACxBhB,GAAG,EAAEA,GAJkC;IAIjB;IACtBiB,MAAM,EAAE,GAL+B;IAKjB;IACtBC,WAAW,EAAE,SAN0B;IAMf;IACxBC,aAAa,EAAE,CAPwB;IAOf;IACxBC,YAAY,EAAE,CARyB,CAQf;;EARe,CAA9B,CAAb;AAWH;;AAED,SAASC,YAAT,CAAsBjB,OAAtB,EAA8Ba,MAA9B,EAAqC;EAEjC,IAAIK,OAAO,GAAG;IACVC,QAAQ,EAAEnB,OADA;IAEVa,MAAM,EAAE,KAFE;IAGVO,IAAI,EAAE,CAAC,YAAD;EAHI,CAAd;EAMAvB,OAAO,CAACoB,YAAR,CAAqBC,OAArB,EAA8B,CAACG,OAAD,EAAUC,MAAV,KAAqB;IAC/C,IAAIA,MAAM,IAAIrB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAnB,CAA0BgB,mBAA1B,CAA8CC,EAA5D,EAAgE;MAC5D,OAAOH,OAAP;IACH;EACJ,CAJD;AAKH;;AAGD,SAASI,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,IAAIC,QAAQ,GAAGlC,WAAW,EAA1B;EACAL,SAAS,CAAC,MAAM;IAEZU,OAAO,CAAC8B,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAD,EAAgC7B,OAAhC,CAAP,CAFY,CAGZ;;IACA2B,QAAQ,CAACjC,UAAU,CAAC2B,OAAD,CAAX,CAAR;IACAS,OAAO,CAACC,GAAR,CAAYV,OAAZ;EAEH,CAPQ,EAON,EAPM,CAAT;EAQA,oBACQ;IAAK,KAAK,EAAE,EAAZ;IAAgB,EAAE,EAAC;EAAnB;IAAA;IAAA;IAAA;EAAA,QADR;AAGH;;GAdQI,I;UAEUhC,W;;;KAFVgC,I;AAgBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}