{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport './googlemapapi.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the key of GoogleMap™️\n\nlet map, infowindow, service;\n\nfunction initMap(element) {\n  let initPoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    lat: 35.7021342,\n    lng: 139.7586458\n  };\n  let zoom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 15;\n  map = new window.google.maps.Map(element, {\n    center: {\n      lat: 35.7021342,\n      lng: 139.7586458\n    },\n    zoom: 15\n  }); // init infowindow once\n\n  infowindow = new window.google.maps.InfoWindow(); // init service once\n\n  service = new window.google.maps.places.PlacesService(map);\n  let pyrmont = new window.google.maps.LatLng(-33.8665433, 151.1956316);\n  let request = {\n    location: pyrmont,\n    radius: '500',\n    type: ['restaurant']\n  };\n  service.nearbySearch(request, callback);\n}\n\nfunction callback(results, status) {\n  if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n    for (let i = 0; i < results.length; i++) {\n      console.log(results[i]);\n    }\n  }\n}\n\nfunction Gmap() {\n  _s();\n\n  useEffect(() => {\n    initMap(document.getElementById('map'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mapholder\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gmap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Gmap;\nexport default Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"names":["React","useEffect","useRef","ReactElement","axios","apikey","map","infowindow","service","initMap","element","initPoint","lat","lng","zoom","window","google","maps","Map","center","InfoWindow","places","PlacesService","pyrmont","LatLng","request","location","radius","type","nearbySearch","callback","results","status","PlacesServiceStatus","OK","i","length","console","log","Gmap","document","getElementById"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport './googlemapapi.css';\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the key of GoogleMap™️\nlet map, infowindow, service;\n\nfunction initMap(element, initPoint = { lat: 35.7021342, lng: 139.7586458 }, zoom = 15) {\n\n    map = new window.google.maps.Map(element, {\n        center: { lat: 35.7021342, lng: 139.7586458  },\n        zoom: 15\n    });\n    // init infowindow once\n    infowindow = new window.google.maps.InfoWindow();\n    // init service once\n    service = new window.google.maps.places.PlacesService(map);\n\n\n    let pyrmont = new window.google.maps.LatLng(-33.8665433,151.1956316);\n    let request = {\n        location: pyrmont,\n        radius: '500',\n        type: ['restaurant']\n    };\n\n    service.nearbySearch(request, callback);\n}\n\nfunction callback(results, status) {\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n        for (let i = 0; i < results.length; i++) {\n            console.log(results[i]);\n        }\n    }\n}\n\n\nfunction Gmap() {\n\n    useEffect(() => {\n\n        initMap(document.getElementById('map'));\n\n    }, []);\n    return (\n        <div id=\"mapholder\">\n            <div style={{}} id=\"map\"></div>\n        </div>\n    )\n}\n\nexport default Gmap;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,YAAnC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAG,yCAAf,C,CAA0D;;AAC1D,IAAIC,GAAJ,EAASC,UAAT,EAAqBC,OAArB;;AAEA,SAASC,OAAT,CAAiBC,OAAjB,EAAwF;EAAA,IAA9DC,SAA8D,uEAAlD;IAAEC,GAAG,EAAE,UAAP;IAAmBC,GAAG,EAAE;EAAxB,CAAkD;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAEpFR,GAAG,GAAG,IAAIS,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BR,OAA3B,EAAoC;IACtCS,MAAM,EAAE;MAAEP,GAAG,EAAE,UAAP;MAAmBC,GAAG,EAAE;IAAxB,CAD8B;IAEtCC,IAAI,EAAE;EAFgC,CAApC,CAAN,CAFoF,CAMpF;;EACAP,UAAU,GAAG,IAAIQ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,UAAvB,EAAb,CAPoF,CAQpF;;EACAZ,OAAO,GAAG,IAAIO,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAnB,CAA0BC,aAA9B,CAA4ChB,GAA5C,CAAV;EAGA,IAAIiB,OAAO,GAAG,IAAIR,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBO,MAAvB,CAA8B,CAAC,UAA/B,EAA0C,WAA1C,CAAd;EACA,IAAIC,OAAO,GAAG;IACVC,QAAQ,EAAEH,OADA;IAEVI,MAAM,EAAE,KAFE;IAGVC,IAAI,EAAE,CAAC,YAAD;EAHI,CAAd;EAMApB,OAAO,CAACqB,YAAR,CAAqBJ,OAArB,EAA8BK,QAA9B;AACH;;AAED,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;EAC/B,IAAIA,MAAM,IAAIjB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAnB,CAA0BY,mBAA1B,CAA8CC,EAA5D,EAAgE;IAC5D,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACrCE,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACI,CAAD,CAAnB;IACH;EACJ;AACJ;;AAGD,SAASI,IAAT,GAAgB;EAAA;;EAEZtC,SAAS,CAAC,MAAM;IAEZQ,OAAO,CAAC+B,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAD,CAAP;EAEH,CAJQ,EAIN,EAJM,CAAT;EAKA,oBACI;IAAK,EAAE,EAAC,WAAR;IAAA,uBACI;MAAK,KAAK,EAAE,EAAZ;MAAgB,EAAE,EAAC;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAZQF,I;;KAAAA,I;AAcT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}