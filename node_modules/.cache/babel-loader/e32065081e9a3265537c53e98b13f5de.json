{"ast":null,"code":"import { getServiceObject, getCenter } from './map';\nimport { doGoogleMapSearchPromise } from '../logics/map';\nimport axios from 'axios';\nimport jsonp from 'axios-jsonp';\nlet searchStatus = 'READY';\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n  return new Promise((resolve, reject) => {\n    if (searchStatus !== 'READY') {\n      throw new Error('trySearch:BUSY');\n    }\n\n    searchStatus = 'BUSY';\n    console.log(keyword + ':search start');\n    let responseHotPepper;\n    let responseGoogle;\n    let promiseGoogle;\n    let promiseHotPepper;\n    const req = {\n      keyword: keyword,\n      radius: 500,\n      userLoc: getCenter()\n    };\n\n    if (!useGoogle && !useHotPepper) {\n      searchStatus = 'READY';\n      return;\n    }\n\n    if (useHotPepper) {\n      promiseHotPepper = axios.get(createHotPepperRequest(req), {\n        adapter: jsonp\n      }).then(response => {\n        responseHotPepper = perseHotPepperResults(response);\n      });\n    }\n\n    if (useGoogle) {\n      promiseGoogle = doGoogleMapSearchPromise(createGoogleRequest(req), getServiceObject()).then(response => {\n        responseGoogle = perseGoogleResults(response);\n      }).catch(status => {\n        responseGoogle = perseGoogleResults(status);\n      });\n    }\n\n    Promise.all([promiseGoogle, promiseHotPepper]).then(message => {\n      if (!useGoogle) {\n        responseGoogle = 'NO_RESULTS';\n      }\n\n      if (!useHotPepper) {\n        responseHotPepper = 'NO_RESULTS';\n      }\n\n      const res = combineResults(responseGoogle, responseHotPepper, req.userLoc);\n      resolve(res);\n    });\n  });\n};\nexport function createGoogleRequest(req) {\n  const request = {\n    location: req.userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    language: 'ja',\n    type: 'restaurant'\n  };\n  return request;\n}\nexport function createHotPepperRequest(req) {\n  const apiKeyHotPepper = '1ff50644037f0f38';\n  const lat = req.userLoc.lat();\n  const lng = req.userLoc.lng();\n  const keyword = req.keyword;\n  const apiURL = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n  return apiURL;\n}\n\nfunction similarity(str1, str2) {\n  let longer = str1;\n  let shorter = str2;\n\n  if (str1.length < str2.length) {\n    longer = str2;\n    shorter = str1;\n  }\n\n  const longerLength = longer.length;\n\n  if (longerLength == 0) {\n    return 1.0;\n  }\n\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nfunction editDistance(str1, str2) {\n  const costs = [];\n\n  for (let i = 0; i <= str1.length; i++) {\n    let lastValue = i;\n\n    for (let j = 0; j <= str2.length; j++) {\n      if (i == 0) {\n        costs[j] = j;\n      } else {\n        if (j > 0) {\n          let newValue = costs[j - 1];\n\n          if (str1.charAt(i - 1) != str2.charAt(j - 1)) {\n            newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n          }\n\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n\n    if (i > 0) {\n      costs[str2.length] = lastValue;\n    }\n  }\n\n  return costs[str2.length];\n}\n\nexport function combineResults(res1, res2, loc) {\n  let results;\n  let status;\n  const itemsShouldbeSpliced = [];\n  const itemsShouldbeUnShifted = [];\n\n  if (res1 === 'NO_RESULTS' && res2 === 'NO_RESULTS') {\n    status = 'NO_RESULTS';\n    results = [];\n  } else if (res2 === 'NO_RESULTS') {\n    status = 'DONE';\n    results = res1;\n  } else if (res1 === 'NO_RESULTS') {\n    status = 'DONE';\n    results = res2;\n  } else {\n    for (let i = 0; i < res1.length; i++) {\n      for (let j = 0; j < res2.length; j++) {\n        const sim = similarity(res1[i].name, res2[j].name);\n\n        if (sim > 0.5) {\n          res1[i].hotpepper = res2[j].hotpepper;\n          itemsShouldbeSpliced.push(j);\n          itemsShouldbeUnShifted.push(i);\n        }\n      }\n    }\n\n    status = 'DONE';\n\n    for (let i = 0; i < itemsShouldbeSpliced.length; i++) {\n      res2.splice(itemsShouldbeSpliced[i], 1);\n    }\n    /* for (let i = 0; i < itemsShouldbeUnShifted.length; i++) {\n         res1.unshift(res1[itemsShouldbeUnShifted[i]]);\n         res1.splice(itemsShouldbeUnShifted[i+1], 1);\n    }*/\n\n\n    results = res1.concat(res2);\n  }\n\n  const res = {\n    status: status,\n    results: results,\n    lat: loc.lat(),\n    lng: loc.lng()\n  };\n  searchStatus = 'WAITING';\n  setTimeout(() => {\n    searchStatus = 'READY';\n  }, 3000);\n  console.log(res);\n  return res;\n}\nexport function perseGoogleResults(results) {\n  let resultTemp = {};\n  const parsedResults = [];\n\n  if (results === 'ZERO_RESULTS') {\n    console.log('nos');\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n    resultTemp = {};\n    resultTemp.name = result.name;\n    resultTemp.vicinity = result.vicinity;\n    resultTemp.rating = result.rating;\n    resultTemp.lat = result.geometry.location.lat();\n    resultTemp.lng = result.geometry.location.lng();\n    resultTemp.type = 1;\n    resultTemp.rat = result.user_ratings_total;\n    resultTemp.google = 'we_are_still_working_on_it.sry';\n    resultTemp.photo = result.photos[0].getUrl();\n    /* axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n        adapter: jsonp\n    }).then((response) => {\n         console.log(response);\n        result_temp.google = response.url;\n     });*/\n    // cors error occurs\n\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\nexport function perseHotPepperResults(res) {\n  let resultTemp = {};\n  const parsedResults = [];\n  const results = res.data.results.shop;\n\n  if (res.data.results.shop.length <= 0) {\n    return 'NO_RESULTS';\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n    resultTemp = {};\n    resultTemp.name = result.name;\n    resultTemp.vicinity = result.address;\n    resultTemp.rating = 5;\n    resultTemp.lat = result.lat;\n    resultTemp.lng = result.lng;\n    resultTemp.type = 2;\n    resultTemp.photo = result.photo.mobile.l;\n    resultTemp.hotpepper = `hotpepper.jp/str${result.id}`;\n    parsedResults.push(resultTemp);\n  }\n\n  return parsedResults;\n}","map":{"version":3,"names":["getServiceObject","getCenter","doGoogleMapSearchPromise","axios","jsonp","searchStatus","trySearch","keyword","useGoogle","useHotPepper","Promise","resolve","reject","Error","console","log","responseHotPepper","responseGoogle","promiseGoogle","promiseHotPepper","req","radius","userLoc","get","createHotPepperRequest","adapter","then","response","perseHotPepperResults","createGoogleRequest","perseGoogleResults","catch","status","all","message","res","combineResults","request","location","language","type","apiKeyHotPepper","lat","lng","apiURL","similarity","str1","str2","longer","shorter","length","longerLength","editDistance","parseFloat","costs","i","lastValue","j","newValue","charAt","Math","min","res1","res2","loc","results","itemsShouldbeSpliced","itemsShouldbeUnShifted","sim","name","hotpepper","push","splice","concat","setTimeout","resultTemp","parsedResults","result","vicinity","rating","geometry","rat","user_ratings_total","google","photo","photos","getUrl","result_temp","data","shop","address","mobile","l","id"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/logics/search.js"],"sourcesContent":["\nimport {getServiceObject, getCenter} from './map';\nimport {doGoogleMapSearchPromise} from '../logics/map';\nimport axios from 'axios';\nimport jsonp from 'axios-jsonp';\nlet searchStatus = 'READY';\nexport const trySearch = (keyword, useGoogle, useHotPepper) => {\n    return new Promise((resolve, reject) => {\n        if (searchStatus !== 'READY') {\n            throw new Error('trySearch:BUSY');\n        }\n        searchStatus = 'BUSY';\n        console.log(keyword + ':search start');\n        let responseHotPepper;\n        let responseGoogle;\n        let promiseGoogle;\n        let promiseHotPepper;\n        const req = {\n            keyword: keyword,\n            radius: 500,\n            userLoc: getCenter(),\n        };\n        if (!useGoogle && !useHotPepper) {\n            searchStatus = 'READY';\n            return;\n        }\n        if (useHotPepper) {\n            promiseHotPepper = axios.get(createHotPepperRequest(req), {\n                adapter: jsonp,\n            }).then((response) => {\n                responseHotPepper = perseHotPepperResults(response);\n            });\n        }\n        if (useGoogle) {\n            promiseGoogle = doGoogleMapSearchPromise(\n                createGoogleRequest(req), getServiceObject())\n            .then((response) => {\n                responseGoogle = perseGoogleResults(response);\n            }).catch((status) => {\n                responseGoogle = perseGoogleResults(status);\n            });\n        }\n        Promise.all([promiseGoogle, promiseHotPepper]).then((message) => {\n            if (!useGoogle) {\n                responseGoogle = 'NO_RESULTS';\n            }\n            if (!useHotPepper) {\n                responseHotPepper = 'NO_RESULTS';\n            }\n            const res = combineResults(\n                responseGoogle, responseHotPepper, req.userLoc);\n            resolve(res);\n        });\n    });\n};\nexport function createGoogleRequest(req) {\n    const request = {\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        language: 'ja',\n        type: 'restaurant',\n    };\n    return request;\n}\nexport function createHotPepperRequest(req) {\n    const apiKeyHotPepper = '1ff50644037f0f38';\n    const lat = req.userLoc.lat();\n    const lng = req.userLoc.lng();\n    const keyword = req.keyword;\n    const apiURL = `https://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=3&keyword=${keyword}&order=4&format=jsonp`;\n    return apiURL;\n}\nfunction similarity(str1, str2) {\n    let longer = str1;\n    let shorter = str2;\n    if (str1.length < str2.length) {\n        longer = str2;\n        shorter = str1;\n    }\n    const longerLength = longer.length;\n    if (longerLength == 0) {\n        return 1.0;\n    }\n    return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\nfunction editDistance(str1, str2) {\n    const costs = [];\n    for (let i = 0; i <= str1.length; i++) {\n        let lastValue = i;\n        for (let j = 0; j <= str2.length; j++) {\n            if (i == 0) {\n                costs[j] = j;\n            } else {\n                if (j > 0) {\n                    let newValue = costs[j - 1];\n                    if (str1.charAt(i - 1) != str2.charAt(j - 1)) {\n                        newValue = Math.min(Math.min(newValue, lastValue),\n                        costs[j]) + 1;\n                    }\n                    costs[j - 1] = lastValue;\n                    lastValue = newValue;\n                }\n            }\n        }\n        if (i > 0) {\n            costs[str2.length] = lastValue;\n        }\n    }\n    return costs[str2.length];\n}\n\nexport function combineResults(res1, res2, loc) {\n    let results;\n    let status;\n    const itemsShouldbeSpliced = [];\n    const itemsShouldbeUnShifted = [];\n    if (res1 === 'NO_RESULTS' && res2 === 'NO_RESULTS') {\n        status = 'NO_RESULTS';\n        results = [];\n    } else if (res2 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res1;\n    } else if (res1 === 'NO_RESULTS') {\n        status = 'DONE';\n        results = res2;\n    } else {\n        for (let i = 0; i < res1.length; i++) {\n            for (let j = 0; j < res2.length; j++) {\n                const sim = similarity(res1[i].name, res2[j].name);\n                if (sim > 0.5) {\n                    res1[i].hotpepper = res2[j].hotpepper;\n                    itemsShouldbeSpliced.push(j);\n                    itemsShouldbeUnShifted.push(i);\n                }\n            }\n        }\n        status = 'DONE';\n        for (let i = 0; i < itemsShouldbeSpliced.length; i++) {\n            res2.splice(itemsShouldbeSpliced[i], 1);\n        }\n        /* for (let i = 0; i < itemsShouldbeUnShifted.length; i++) {\n\n            res1.unshift(res1[itemsShouldbeUnShifted[i]]);\n\n            res1.splice(itemsShouldbeUnShifted[i+1], 1);\n        }*/\n        results = res1.concat(res2);\n    }\n\n    const res = {\n        status: status,\n        results: results,\n        lat: loc.lat(),\n        lng: loc.lng(),\n    };\n    searchStatus = 'WAITING';\n    setTimeout(()=> {\n        searchStatus = 'READY';\n    }, 3000);\n    console.log(res);\n    return res;\n}\nexport function perseGoogleResults(results) {\n    let resultTemp = {};\n    const parsedResults = [];\n    if (results === 'ZERO_RESULTS') {\n        console.log('nos');\n        return 'NO_RESULTS';\n    }\n    for (let i = 0; i < results.length; i++) {\n        const result = results[i];\n        resultTemp = {};\n        resultTemp.name = result.name;\n        resultTemp.vicinity = result.vicinity;\n        resultTemp.rating = result.rating;\n        resultTemp.lat = result.geometry.location.lat();\n        resultTemp.lng = result.geometry.location.lng();\n        resultTemp.type = 1;\n        resultTemp.rat = result.user_ratings_total;\n        resultTemp.google = 'we_are_still_working_on_it.sry';\n        resultTemp.photo = result.photos[0].getUrl();\n        /* axios.get(`https://maps.googleapis.com/maps/api/place/details/json?place_id=${result.place_id}&key=AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8`, {\n            adapter: jsonp\n        }).then((response) => {\n\n            console.log(response);\n            result_temp.google = response.url;\n\n        });*/\n\n        // cors error occurs\n\n        parsedResults.push(result_temp);\n    }\n    return parsedResults;\n}\nexport function perseHotPepperResults(res) {\n    let resultTemp = {};\n    const parsedResults = [];\n    const results = res.data.results.shop;\n    if (res.data.results.shop.length <= 0) {\n        return 'NO_RESULTS';\n    }\n    for (let i = 0; i < results.length; i++) {\n        const result = results[i];\n        resultTemp = {};\n        resultTemp.name = result.name;\n        resultTemp.vicinity = result.address;\n        resultTemp.rating = 5;\n        resultTemp.lat = result.lat;\n        resultTemp.lng = result.lng;\n        resultTemp.type = 2;\n        resultTemp.photo = result.photo.mobile.l;\n        resultTemp.hotpepper = `hotpepper.jp/str${result.id}`;\n        parsedResults.push(resultTemp);\n    }\n    return parsedResults;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}