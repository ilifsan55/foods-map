{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\n\nlet map, service, request;\nlet nearbyResults;\n\nfunction initMap(element, userLoc) {\n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  });\n  service = new window.google.maps.places.PlacesService(map);\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    // 中心点(google.maps.LatLng)\n    fillColor: '#ff0000',\n    // 塗りつぶし色\n    fillOpacity: 0.2,\n    // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n    map: map,\n    // 表示させる地図（google.maps.Map）\n    radius: 300,\n    // 半径（ｍ）\n    strokeColor: '#ff0000',\n    // 外周色\n    strokeOpacity: 1,\n    // 外周透過度（0: 透明 ⇔ 1:不透明）\n    strokeWeight: 1 // 外周太さ（ピクセル）\n\n  });\n}\n\nfunction createMarker(place, ifInitPoint) {\n  let placeLoc = place.geometry.location;\n  let marker = new window.google.maps.Marker({\n    map: map,\n    position: place.geometry.location\n  });\n}\n\nconst getPlace = request => {\n  return new Promise((resolve, reject) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    console.log(\"ss\");\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        for (var i = 0; i < results.length; i++) {\n          createMarker(results[i]);\n        }\n\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n};\n\nfunction Gmap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    initMap(document.getElementById('map'), props.userLoc);\n    request = {\n      location: props.userLoc,\n      radius: '500',\n      type: ['restaurant']\n    };\n    getPlace(request).then(response => {\n      console.log(response);\n      dispatch(response);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {},\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gmap, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Gmap;\nexport default Gmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gmap\");","map":{"version":3,"names":["React","useEffect","useRef","ReactElement","axios","useSelector","useDispatch","setResults","apikey","map","service","request","nearbyResults","initMap","element","userLoc","window","google","maps","Map","center","zoom","places","PlacesService","circle","Circle","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","createMarker","place","ifInitPoint","placeLoc","geometry","location","marker","Marker","position","getPlace","Promise","resolve","reject","console","log","nearbySearch","results","status","i","length","Gmap","props","dispatch","document","getElementById","type","then","response"],"sources":["/Users/kokiyamamoto/Desktop/projects/react-test/react-app/src/googlemapapi.js"],"sourcesContent":["import React, { useEffect, useRef, ReactElement } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './googlemapapi.css';\nimport { setResults } from './redux/appSlice';\n\nconst apikey = \"AIzaSyC9qsxaC4dHG0ibEr9NMKC9Ddro_jdnMk8\"; // the apikey of GoogleMap™️\nlet map, service, request;\nlet nearbyResults;\n\nfunction initMap(element, userLoc) {\n\n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    service = new window.google.maps.places.PlacesService(map);\n    let circle = new window.google.maps.Circle({\n        center: userLoc,       // 中心点(google.maps.LatLng)\n        fillColor: '#ff0000',   // 塗りつぶし色\n        fillOpacity: 0.2,       // 塗りつぶし透過度（0: 透明 ⇔ 1:不透明）\n        map: map,             // 表示させる地図（google.maps.Map）\n        radius: 300,          // 半径（ｍ）\n        strokeColor: '#ff0000', // 外周色\n        strokeOpacity: 1,       // 外周透過度（0: 透明 ⇔ 1:不透明）\n        strokeWeight: 1         // 外周太さ（ピクセル）\n    });\n\n}\n\nfunction createMarker(place, ifInitPoint) {\n    let placeLoc = place.geometry.location;\n    let marker = new window.google.maps.Marker({\n        map: map,\n        position: place.geometry.location,\n    });\n}\n\n\nconst getPlace = (request) => {\n    return new Promise((resolve, reject) => {\n        const service = new window.google.maps.places.PlacesService(map);\n        console.log(\"ss\");\n        service.nearbySearch(request,(results,status) => {\n            if (status === 'OK') {\n                for (var i = 0; i < results.length; i++) {\n                    createMarker(results[i]);\n                }\n                resolve(results);\n            } else {\n                reject(status);\n            }    \n        });    \n    });\n};\n\n\n\nfunction Gmap(props) {\n\n    let dispatch = useDispatch();\n    useEffect(() => {\n\n        initMap(document.getElementById('map'), props.userLoc);\n\n        request = {\n            location: props.userLoc,\n            radius: '500',\n            type: ['restaurant']\n        };\n\n        getPlace(request).then((response) => {\n           console.log(response);\n           dispatch(response);\n        });\n    })\n    return (\n        <div style={{}} id=\"map\"></div>\n    )\n}\n\nexport default Gmap;"],"mappings":"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"},"metadata":{},"sourceType":"module"}