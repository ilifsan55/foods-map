{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet isMapBusy = true;\nconst radius = 1000;\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const searchRequest = useSelector(state => state.app.searchRequest);\n\n  if (searchRequest.isDone == false) {\n    searchPlaces(searchRequest, props.userLoc);\n  }\n\n  useEffect(() => {\n    initMap(document.getElementById('map'), props.userLoc, props.radius);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"maphider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"sc9UXUIjK8lcBhZr4AuuKVadzTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GMap;\n\nfunction searchPlaces(req, userLoc) {\n  _s2();\n\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  const dispatch = useDispatch();\n  const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4'; //a request object for the initial search.\n\n  let request = {\n    location: userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  getPlace(request).then(response => {\n    let res = resultsParser(response); //places found! put them into parser to parse them for easier prossesing.\n\n    dispatch(resultListSlice.actions.setInitialSearchResult(res));\n  }).catch(status => {\n    let res = resultsParser(0); //Nothing found! try again with larger search radius (im gonna work on it!!!!)\n  });\n}\n\n_s2(searchPlaces, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nfunction initMap(element, userLoc, radius) {\n  //create an actual gmap \n  map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //create google places service for nearby serach feature\n\n  service = new window.google.maps.places.PlacesService(map); //draw user and user radius\n\n  let circle = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#ff0000',\n    fillOpacity: 0.2,\n    map: map,\n    radius: radius * 2,\n    strokeColor: '#ff0000',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n}\n\nfunction CreateMarker(place, index) {\n  let marker = new window.google.maps.Marker({\n    map: map,\n    label: String(index),\n    position: place.geometry.location\n  });\n}\n\n_c2 = CreateMarker;\n\nfunction resultsParser(results) {\n  let parsedResults = [];\n\n  if (results == 0 || results.length <= 0) {\n    let result_temp = {};\n    result_temp.name = '何も見つかりませんでした。';\n    result_temp.vicinity = '';\n    result_temp.rating = '';\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result_temp = {};\n    let result = results[i];\n    CreateMarker(result, i + 1);\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\n\nfunction getPlace(request) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\n\n;\nexport default GMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GMap\");\n$RefreshReg$(_c2, \"CreateMarker\");","map":{"version":3,"names":["React","useEffect","resultListSlice","useSelector","useDispatch","axios","map","service","isMapBusy","radius","GMap","props","dispatch","searchRequest","state","app","isDone","searchPlaces","userLoc","initMap","document","getElementById","req","apiKeyHotPepper","apiURL","request","location","keyword","type","getPlace","then","response","res","resultsParser","actions","setInitialSearchResult","catch","status","element","window","google","maps","Map","center","zoom","places","PlacesService","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","userpos","CreateMarker","place","index","marker","Marker","label","String","position","geometry","results","parsedResults","length","result_temp","name","vicinity","rating","push","i","result","lat","lng","Promise","resolve","reject","nearbySearch"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\n\n\nlet map, service;\nlet isMapBusy = true;\nconst radius = 1000;\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const searchRequest = useSelector(state => state.app.searchRequest);\n\n    if (searchRequest.isDone == false) {\n        searchPlaces(searchRequest,props.userLoc);\n    }\n\n    useEffect(() => {\n\n        initMap(document.getElementById('map'), props.userLoc, props.radius);\n\n    })\n    return (\n        <div>\n            <div id=\"maphider\"></div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\nfunction searchPlaces(req,userLoc) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    const dispatch = useDispatch();\n    const apiURL = 'http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=[APIキー]&lat=34.67&lng=135.52&count=100&range=5&order=4';\n\n    //a request object for the initial search.\n    let request = {\n        location: userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    getPlace(request).then((response) => {\n\n        let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n        dispatch(resultListSlice.actions.setInitialSearchResult(res));\n\n    }).catch((status) => {\n\n        let res = resultsParser(0); //Nothing found! try again with larger search radius (im gonna work on it!!!!)\n\n    });\n\n}\n\nfunction initMap(element, userLoc, radius) {\n    //create an actual gmap \n    map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //create google places service for nearby serach feature\n    service = new window.google.maps.places.PlacesService(map);\n\n    //draw user and user radius\n    let circle = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#ff0000',\n        fillOpacity: 0.2,\n        map: map,\n        radius: radius * 2,\n        strokeColor: '#ff0000',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n}\n\nfunction CreateMarker(place, index) {\n\n    let marker = new window.google.maps.Marker({\n        map: map,\n        label: String(index),\n        position: place.geometry.location\n    });\n\n}\n\n\nfunction resultsParser(results) {\n\n    let parsedResults = [];\n    if (results == 0 || results.length <= 0) {\n\n        let result_temp = {};\n        result_temp.name = '何も見つかりませんでした。';\n        result_temp.vicinity = '';\n        result_temp.rating = '';\n        parsedResults.push(result_temp);\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result_temp = {};\n        let result = results[i];\n        CreateMarker(result, i + 1);\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\nfunction getPlace(request) {\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n};\n\n\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}