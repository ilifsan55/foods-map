{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // Initial values of the state\n\nconst appInitialState = {\n  mainState: 0,\n  appState: 0,\n  wheelRotation: 1800,\n  wheelContents: [\"ラーメン\", \"カレー\", \"ハンバーガー\", \"牛丼\", \"そば\", \"ドーナツ\", \"うどん\", \"中華\"],\n  mapResults: [],\n  searchRequest: {\n    keyword: '',\n    radius: 500,\n    useGoogle: true,\n    useHotPepper: true,\n    useGurunabi: true,\n    isDone: true\n  },\n  inputValue: '',\n  state: {\n    x: 0,\n    y: 0\n  }\n}; // creating the slice\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: appInitialState,\n  reducers: {\n    setState: (state, action) => {\n      state.mainState = action.payload;\n    },\n    setAppState: (state, action) => {\n      state.appState = action.payload;\n    },\n    setRotation: (state, action) => {\n      state.wheelRotation = action.payload;\n    },\n    setContents: (state, action) => {\n      state.wheelContents = action.payload;\n    },\n    setResults: (state, action) => {\n      state.mapResults = action.payload;\n    },\n    trySearch: (state, action) => {\n      state.searchRequest = action.payload;\n    },\n    handleInputField: (state, action) => {\n      state.inputValue = action.payload;\n    },\n    getScreenSize: (state, action) => {\n      state.getScreenSize = action.payload;\n    }\n  }\n});\nexport default appSlice;","map":{"version":3,"names":["createSlice","appInitialState","mainState","appState","wheelRotation","wheelContents","mapResults","searchRequest","keyword","radius","useGoogle","useHotPepper","useGurunabi","isDone","inputValue","state","x","y","appSlice","name","initialState","reducers","setState","action","payload","setAppState","setRotation","setContents","setResults","trySearch","handleInputField","getScreenSize"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/redux/appSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n// Initial values of the state\nconst appInitialState = {\n    mainState: 0,\n    appState: 0,\n    wheelRotation: 1800,\n    wheelContents: [\"ラーメン\", \"カレー\", \"ハンバーガー\", \"牛丼\", \"そば\", \"ドーナツ\", \"うどん\", \"中華\"],\n    mapResults: [],\n   \n    searchRequest: {\n        keyword:'',\n        radius:500,\n        useGoogle:true,\n        useHotPepper:true,\n        useGurunabi:true,\n        isDone:true\n    },\n    inputValue: '',\n    state: {\n        x:0,\n        y:0\n    }\n};\n\n// creating the slice\nexport const appSlice = createSlice({\n    name: 'app', \n    initialState: appInitialState,\n    reducers: {\n        setState: (state, action) => {\n            state.mainState = action.payload;\n        },\n        setAppState: (state, action) => {\n            state.appState = action.payload;\n        },\n        setRotation: (state, action) => {\n            state.wheelRotation = action.payload;\n        },\n        setContents: (state, action) => {\n            state.wheelContents = action.payload;\n        },\n        setResults: (state, action) => {\n            state.mapResults = action.payload;\n        },\n        trySearch: (state,action)=>{\n            state.searchRequest = action.payload;\n        },\n        handleInputField: (state,action) => {\n            state.inputValue = action.payload;\n        },\n        getScreenSize: (state,action) => {\n            state.getScreenSize = action.payload;\n        }\n    },\n});\n\nexport default appSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,eAAe,GAAG;EACpBC,SAAS,EAAE,CADS;EAEpBC,QAAQ,EAAE,CAFU;EAGpBC,aAAa,EAAE,IAHK;EAIpBC,aAAa,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD,IAArD,CAJK;EAKpBC,UAAU,EAAE,EALQ;EAOpBC,aAAa,EAAE;IACXC,OAAO,EAAC,EADG;IAEXC,MAAM,EAAC,GAFI;IAGXC,SAAS,EAAC,IAHC;IAIXC,YAAY,EAAC,IAJF;IAKXC,WAAW,EAAC,IALD;IAMXC,MAAM,EAAC;EANI,CAPK;EAepBC,UAAU,EAAE,EAfQ;EAgBpBC,KAAK,EAAE;IACHC,CAAC,EAAC,CADC;IAEHC,CAAC,EAAC;EAFC;AAhBa,CAAxB,C,CAsBA;;AACA,OAAO,MAAMC,QAAQ,GAAGlB,WAAW,CAAC;EAChCmB,IAAI,EAAE,KAD0B;EAEhCC,YAAY,EAAEnB,eAFkB;EAGhCoB,QAAQ,EAAE;IACNC,QAAQ,EAAE,CAACP,KAAD,EAAQQ,MAAR,KAAmB;MACzBR,KAAK,CAACb,SAAN,GAAkBqB,MAAM,CAACC,OAAzB;IACH,CAHK;IAINC,WAAW,EAAE,CAACV,KAAD,EAAQQ,MAAR,KAAmB;MAC5BR,KAAK,CAACZ,QAAN,GAAiBoB,MAAM,CAACC,OAAxB;IACH,CANK;IAONE,WAAW,EAAE,CAACX,KAAD,EAAQQ,MAAR,KAAmB;MAC5BR,KAAK,CAACX,aAAN,GAAsBmB,MAAM,CAACC,OAA7B;IACH,CATK;IAUNG,WAAW,EAAE,CAACZ,KAAD,EAAQQ,MAAR,KAAmB;MAC5BR,KAAK,CAACV,aAAN,GAAsBkB,MAAM,CAACC,OAA7B;IACH,CAZK;IAaNI,UAAU,EAAE,CAACb,KAAD,EAAQQ,MAAR,KAAmB;MAC3BR,KAAK,CAACT,UAAN,GAAmBiB,MAAM,CAACC,OAA1B;IACH,CAfK;IAgBNK,SAAS,EAAE,CAACd,KAAD,EAAOQ,MAAP,KAAgB;MACvBR,KAAK,CAACR,aAAN,GAAsBgB,MAAM,CAACC,OAA7B;IACH,CAlBK;IAmBNM,gBAAgB,EAAE,CAACf,KAAD,EAAOQ,MAAP,KAAkB;MAChCR,KAAK,CAACD,UAAN,GAAmBS,MAAM,CAACC,OAA1B;IACH,CArBK;IAsBNO,aAAa,EAAE,CAAChB,KAAD,EAAOQ,MAAP,KAAkB;MAC7BR,KAAK,CAACgB,aAAN,GAAsBR,MAAM,CAACC,OAA7B;IACH;EAxBK;AAHsB,CAAD,CAA5B;AA+BP,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}