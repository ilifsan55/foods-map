{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { appSlice } from '../../redux/appSlice';\nimport { wheelSlice } from '../../redux/wheelSlice';\nimport './style/wheel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet countofSpins = 0;\nexport default function Wheel(props) {\n  _s();\n\n  const wheelToggle = useSelector(state => state.app.wheelToggle);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"right\",\n    open: wheelToggle,\n    variant: \"persistent\",\n    PaperProps: {\n      sx: {\n        marginTop: 8,\n        width: 600,\n        height: 600\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(WheelMain, {\n        trySearchFunc: props.trySearchFunc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Wheel, \"SH7EHG09EgYGVKJ5vdQLnqAYR6k=\", false, function () {\n  return [useSelector];\n});\n\n_c = Wheel;\n\nfunction WheelMain(props) {\n  _s2();\n\n  const wheelContentsSolo = ['ラーメン', 'カレー', 'ハンバーガー', '牛丼', 'そば', 'ドーナツ', 'うどん', '中華'];\n  const wheelContentsParty = ['焼肉', '回転寿司', 'イタリアン', 'ハンバーガー', '中華', '和食', 'ラーメン', 'インド料理'];\n  const colorCode = ['#FF6961', '#FFb480', '#F8f38d', '#42d6a4', '#08cad1', '#59adf6', '#9d94ff', '#c780e8'];\n  const wheelRadius = 200; // in px\n\n  const wheelRotation = useSelector(state => state.wheelSlice.wheelRotation);\n  const wheelState = useSelector(state => state.wheelSlice.wheelState);\n  const wheelContents = useSelector(state => state.wheelSlice.wheelContents);\n  const dispatch = useDispatch();\n  const styleObjectArray = [];\n  const degreePerContents = 360 / wheelContents.length;\n  const polygon = Math.tan(3.14 / wheelContents.length);\n  const sizeofEdge = polygon * wheelRadius;\n  wheelContents.forEach((value, index) => {\n    let colorCodeTemp = colorCode[index];\n\n    if (colorCodeTemp == undefined) {\n      colorCodeTemp = '#FFFFFF';\n    }\n\n    ;\n    const style = {\n      'borderWidth': `200px ${sizeofEdge}px 0`,\n      'transformOrigin': `${sizeofEdge}px 200px`,\n      'left': `${wheelRadius - sizeofEdge}px`,\n      'transform': `rotate(${index * degreePerContents}deg)`,\n      'borderColor': `${colorCodeTemp} transparent`\n    };\n    styleObjectArray.push(style);\n  });\n\n  const wheelSpin = () => {\n    if (wheelState == 1) {\n      //the Whell is spinning!\n      return;\n    }\n\n    countofSpins += 1;\n    const rndSpin = Math.floor(Math.random() * 360) + 1;\n    const newSpin = 5000 * countofSpins + rndSpin;\n    dispatch(wheelSlice.actions.setWheelState(1));\n    dispatch(wheelSlice.actions.setRotation(newSpin));\n    let intervalID = setTimeout(() => {\n      dispatch(wheelSlice.actions.setWheelState(0));\n      getResult(newSpin);\n    }, 10000);\n  };\n\n  const getResult = spin => {\n    let resultDegree = spin % 360; //clamping WheelRotation to 0 between 360\n\n    let degreePerContent = 360 / wheelContents.length; //the size of each pies\n\n    resultDegree -= degreePerContent / 2; //handling negative numbers\n\n    resultDegree = 360 - resultDegree;\n    let temp = resultDegree / degreePerContent;\n    temp = Math.floor(temp);\n    let result = wheelContents[temp];\n    dispatch(appSlice.actions.handleInputField(result));\n    dispatch(appSlice.actions.toggleWheel());\n    props.trySearchFunc(result);\n  };\n\n  const setToSolo = () => {\n    if (wheelState == 1) {\n      // the Whell is spinning!\n      return;\n    }\n\n    dispatch(wheelSlice.actions.setContents(wheelContentsSolo));\n  };\n\n  const setToParty = () => {\n    if (wheelState == 1) {\n      //the Whell is spinning!\n      return;\n    }\n\n    dispatch(wheelSlice.actions.setContents(wheelContentsParty));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonholder\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: setToSolo,\n        id: \"button-1\",\n        children: \"\\u4E00\\u4EBA\\u3067\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: setToParty,\n        id: \"button-2\",\n        children: \"\\u307F\\u3093\\u306A\\u3067\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wheel\",\n      onClick: wheelSpin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inner-wheel\",\n        style: {\n          transform: `rotate(${wheelRotation}deg)`\n        },\n        children: wheelContents.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styleObjectArray[index],\n          id: `content${index}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mid-wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(WheelMain, \"nx0Z5wrd2ta8hHKBX36mNsJrsNA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c2 = WheelMain;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wheel\");\n$RefreshReg$(_c2, \"WheelMain\");","map":{"version":3,"names":["React","Box","Drawer","useSelector","useDispatch","appSlice","wheelSlice","countofSpins","Wheel","props","wheelToggle","state","app","sx","marginTop","width","height","trySearchFunc","WheelMain","wheelContentsSolo","wheelContentsParty","colorCode","wheelRadius","wheelRotation","wheelState","wheelContents","dispatch","styleObjectArray","degreePerContents","length","polygon","Math","tan","sizeofEdge","forEach","value","index","colorCodeTemp","undefined","style","push","wheelSpin","rndSpin","floor","random","newSpin","actions","setWheelState","setRotation","intervalID","setTimeout","getResult","spin","resultDegree","degreePerContent","temp","result","handleInputField","toggleWheel","setToSolo","setContents","setToParty","transform","map"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/parts/wheel.jsx"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {appSlice} from '../../redux/appSlice';\nimport {wheelSlice} from '../../redux/wheelSlice';\nimport './style/wheel.css';\nlet countofSpins = 0;\nexport default function Wheel(props) {\n    const wheelToggle = useSelector((state)=> state.app.wheelToggle);\n    return (\n        <Drawer\n            anchor='right'\n            open={wheelToggle}\n            variant=\"persistent\"\n            PaperProps={{\n                sx: {\n                    marginTop: 8,\n                    width: 600,\n                    height: 600,\n                    },\n            }}\n        >\n            <Box>\n                <WheelMain trySearchFunc={props.trySearchFunc}></WheelMain>\n            </Box>\n        </Drawer>\n    );\n}\nfunction WheelMain(props) {\n    const wheelContentsSolo = ['ラーメン', 'カレー', 'ハンバーガー', '牛丼', 'そば', 'ドーナツ', 'うどん', '中華'];\n    const wheelContentsParty = ['焼肉', '回転寿司', 'イタリアン', 'ハンバーガー', '中華', '和食', 'ラーメン', 'インド料理'];\n    const colorCode = ['#FF6961', '#FFb480', '#F8f38d', '#42d6a4', '#08cad1', '#59adf6', '#9d94ff', '#c780e8'];\n    const wheelRadius = 200; // in px\n    const wheelRotation = useSelector((state) => state.wheelSlice.wheelRotation);\n    const wheelState = useSelector((state) => state.wheelSlice.wheelState);\n    const wheelContents = useSelector((state) => state.wheelSlice.wheelContents);\n    const dispatch = useDispatch();\n    const styleObjectArray = [];\n    const degreePerContents = 360 / wheelContents.length;\n    const polygon = Math.tan(3.14 / wheelContents.length);\n    const sizeofEdge = polygon * wheelRadius;\n    wheelContents.forEach((value, index) => {\n        let colorCodeTemp = colorCode[index];\n        if (colorCodeTemp == undefined) {\n            colorCodeTemp = '#FFFFFF';\n        };\n\n        const style = {\n            'borderWidth': `200px ${sizeofEdge}px 0`,\n            'transformOrigin': `${sizeofEdge}px 200px`,\n            'left': `${wheelRadius - sizeofEdge}px`,\n            'transform': `rotate(${(index) * degreePerContents}deg)`,\n            'borderColor': `${colorCodeTemp} transparent`,\n        };\n\n        styleObjectArray.push(style);\n    });\n\n\n    const wheelSpin = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        countofSpins+=1;\n        const rndSpin = Math.floor(Math.random() * (360)) + 1;\n        const newSpin = (5000 * countofSpins) + rndSpin;\n        dispatch(wheelSlice.actions.setWheelState(1))\n        dispatch(wheelSlice.actions.setRotation(newSpin));\n        let intervalID = setTimeout(() => {dispatch(wheelSlice.actions.setWheelState(0)); getResult(newSpin);}, 10000);\n    }\n    const getResult = (spin) => {\n        let resultDegree = spin % 360; //clamping WheelRotation to 0 between 360\n        let degreePerContent = 360 / wheelContents.length; //the size of each pies\n        resultDegree -= degreePerContent / 2; //handling negative numbers\n        resultDegree = 360 - resultDegree;\n        let temp = resultDegree / degreePerContent;\n        temp = Math.floor(temp);\n        let result = wheelContents[temp];\n        dispatch(appSlice.actions.handleInputField(result));\n        dispatch(appSlice.actions.toggleWheel());\n        props.trySearchFunc(result);\n    };\n    const setToSolo = () => {\n        if (wheelState == 1) {\n            // the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsSolo));\n    };\n    const setToParty = () => {\n        if (wheelState == 1) {\n            //the Whell is spinning!\n            return;\n        }\n        dispatch(wheelSlice.actions.setContents(wheelContentsParty));\n    };\n    return (\n        <div id='wrapper'>\n            <div id='buttonholder'>\n                <span onClick={setToSolo} id='button-1'>一人で</span>\n                <span onClick={setToParty} id='button-2'>みんなで</span>\n            </div>\n            <div id='tri'></div>\n            <div id='wheel' onClick={wheelSpin}>\n                <div id='inner-wheel' style={{\n                    transform: `rotate(${wheelRotation}deg)`,\n                }}>\n                    {wheelContents.map((value, index) => <div style=\n                        {styleObjectArray[index]}\n                        key={index}\n                        id={`content${index}`}>\n                        <span>{value}</span></div>)}\n                </div>\n                <div id='mid-wheel' >\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}