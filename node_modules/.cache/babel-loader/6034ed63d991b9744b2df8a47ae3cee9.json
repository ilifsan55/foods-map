{"ast":null,"code":"import axios from 'axios';\nexport function initMap(element, userLoc) {\n  console.log(\"Map Initialized\"); //create an actual gmap \n\n  let map = new window.google.maps.Map(element, {\n    center: userLoc,\n    zoom: 15\n  }); //draw user and user radius\n\n  let userpos = new window.google.maps.Circle({\n    center: userLoc,\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: 20,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n  return map;\n}\nexport function initService(map) {\n  let service = new window.google.maps.places.PlacesService(map);\n  return service;\n}\nexport function doGoogleMapSearchPromise(request, service) {\n  return new Promise((resolve, reject) => {\n    service.nearbySearch(request, (results, status) => {\n      if (status === 'OK') {\n        resolve(results);\n      } else {\n        reject(status);\n      }\n    });\n  });\n}\nexport function doHotPepperSearchPromise(request) {}\nexport function createGoogleRequest(req) {\n  //a request object for the initial search.\n  let request = {\n    location: req.userLoc,\n    radius: req.radius,\n    keyword: req.keyword,\n    type: 'restaurant' //only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n  };\n  return request;\n}\nexport function createHotPepperRequest(req) {\n  let apiKeyHotPepper = '1ff50644037f0f38';\n  let lat = req.userLoc.lat;\n  let lng = req.userLoc.lng;\n  let keyword = req.keyword;\n  const apiURL = `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=5&keyword=${keyword}&order=4&format=jsonp`;\n  return apiURL;\n}\nexport function createMarker(lat, lng, map) {\n  let marker = new window.google.maps.Marker({\n    map: map,\n    position: {\n      lat: lat,\n      lng: lng\n    }\n  });\n}\nexport function createCircle(lat, lng, map, radius) {\n  let circle = new window.google.maps.Circle({\n    center: {\n      lat: lat,\n      lng: lng\n    },\n    fillColor: '#0000ff',\n    fillOpacity: 0.45,\n    map: map,\n    radius: radius,\n    strokeColor: '#0000ff',\n    strokeOpacity: 1,\n    strokeWeight: 1\n  });\n}\nexport function perseGoogleResults(results) {\n  let result_temp = {};\n  console.log(results);\n  let parsedResults = [];\n\n  if (results == 'ZERO_RESULTS' || undefined) {\n    result_temp.name = 0;\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    result_temp.type = 1; // result_temp.photo = result.photos[0].getURL;\n\n    console.log(result);\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\nexport function perseHotPepperResults(res) {\n  let result_temp = {};\n  let parsedResults = [];\n  let results = res.data.results.shop;\n\n  if (res.data.results.shop.length <= 0) {\n    result_temp.name = 0;\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result = results[i];\n    result_temp = {};\n    result_temp.name = result.name;\n    result_temp.vicinity = result.address;\n    result_temp.rating = 99;\n    result_temp.lat = result.lat;\n    result_temp.lng = result.lng;\n    result_temp.type = 2;\n    result_temp.photo = result.photo.mobile.l;\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n}\nexport function combineResults(res1, res2) {\n  console.log(res1);\n  console.log(res2);\n\n  if (res1[0].name == 0 && res2[0].name == 0) {\n    return res1;\n  } else if (res2[0].name == 0) {\n    return res1;\n  } else if (res2[0].name == 0) {\n    return res1;\n  }\n\n  let res3 = res1.concat(res2);\n  return res3;\n}\n\nfunction getGooglePhotoPromise(ref) {\n  let url = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${ref}&key=YOUR_API_KEY`;\n}","map":{"version":3,"names":["axios","initMap","element","userLoc","console","log","map","window","google","maps","Map","center","zoom","userpos","Circle","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","initService","service","places","PlacesService","doGoogleMapSearchPromise","request","Promise","resolve","reject","nearbySearch","results","status","doHotPepperSearchPromise","createGoogleRequest","req","location","keyword","type","createHotPepperRequest","apiKeyHotPepper","lat","lng","apiURL","createMarker","marker","Marker","position","createCircle","circle","perseGoogleResults","result_temp","parsedResults","undefined","name","push","i","length","result","vicinity","rating","geometry","perseHotPepperResults","res","data","shop","address","photo","mobile","l","combineResults","res1","res2","res3","concat","getGooglePhotoPromise","ref","url"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/mapapi.js"],"sourcesContent":["import axios from 'axios'\n\nexport function initMap(element, userLoc) {\n    console.log(\"Map Initialized\");\n    //create an actual gmap \n    let map = new window.google.maps.Map(element, {\n        center: userLoc,\n        zoom: 15\n    });\n    //draw user and user radius\n    let userpos = new window.google.maps.Circle({\n        center: userLoc,\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: 20,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n\n    return map;\n\n}\n\nexport function initService(map) {\n\n    let service = new window.google.maps.places.PlacesService(map);\n    return service;\n}\n\nexport function doGoogleMapSearchPromise(request, service) {\n\n    return new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n            if (status === 'OK') {\n                resolve(results);\n            } else {\n                reject(status);\n            }\n        });\n    });\n\n}\n\nexport function doHotPepperSearchPromise(request) {\n\n\n}\n\n\nexport function createGoogleRequest(req) {\n\n\n    //a request object for the initial search.\n    let request = {\n        location: req.userLoc,\n        radius: req.radius,\n        keyword: req.keyword,\n        type: 'restaurant',//only one type can be specified at once!! should i consider adding the other types like cafe and etcetc?? this can be achived by simply running the another search and add up results\n\n    };\n\n    return request;\n}\n\nexport function createHotPepperRequest(req) {\n\n    let apiKeyHotPepper = '1ff50644037f0f38';\n    let lat = req.userLoc.lat;\n    let lng = req.userLoc.lng;\n    let keyword = req.keyword;\n\n    const apiURL = `http://webservice.recruit.co.jp/hotpepper/gourmet/v1/?key=${apiKeyHotPepper}&lat=${lat}&lng=${lng}&count=100&range=5&keyword=${keyword}&order=4&format=jsonp`;\n\n    return apiURL;\n}\n\nexport function createMarker(lat, lng, map) {\n\n    let marker = new window.google.maps.Marker({\n        map: map,\n        position: { lat: lat, lng: lng }\n    });\n\n}\n\nexport function createCircle(lat, lng, map , radius) {\n\n    let circle = new window.google.maps.Circle({\n        center: { lat: lat, lng: lng },\n        fillColor: '#0000ff',\n        fillOpacity: 0.45,\n        map: map,\n        radius: radius,\n        strokeColor: '#0000ff',\n        strokeOpacity: 1,\n        strokeWeight: 1\n    });\n}\n\nexport function perseGoogleResults(results) {\n\n    let result_temp = {};\n    console.log(results)\n    let parsedResults = [];\n    if (results == 'ZERO_RESULTS' || undefined) {\n\n        result_temp.name = 0;\n        parsedResults.push(result_temp);\n\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        result_temp.type = 1;\n\n       // result_temp.photo = result.photos[0].getURL;\n\n\n       console.log(result);\n\n\n        parsedResults.push(result_temp);\n    }\n\n    \n    return parsedResults;\n\n\n}\n\nexport function perseHotPepperResults(res) {\n\n\n\n    let result_temp = {};\n    let parsedResults = [];\n    let results = res.data.results.shop;\n    if (res.data.results.shop.length <= 0) {\n\n        result_temp.name = 0;\n        parsedResults.push(result_temp);\n\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result = results[i];\n        result_temp = {};\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.address;\n        result_temp.rating = 99;\n        result_temp.lat = result.lat;\n        result_temp.lng = result.lng;\n        result_temp.type = 2;\n        result_temp.photo = result.photo.mobile.l;\n\n        parsedResults.push(result_temp);\n        \n    }\n\n    return parsedResults;\n\n\n}\n\nexport function combineResults(res1, res2) {\n\n    console.log(res1);\n    console.log(res2);\n    if (res1[0].name == 0 && res2[0].name == 0) {\n        return res1;\n    } else if (res2[0].name == 0) {\n        return res1;\n    } else if (res2[0].name == 0) {\n        return res1;\n    }\n\n    let res3 = res1.concat(res2);\n\n    return res3;\n\n}\n\nfunction getGooglePhotoPromise(ref) {\n    let url = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${ref}&key=YOUR_API_KEY`;\n\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;EACtCC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADsC,CAEtC;;EACA,IAAIC,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BR,OAA3B,EAAoC;IAC1CS,MAAM,EAAER,OADkC;IAE1CS,IAAI,EAAE;EAFoC,CAApC,CAAV,CAHsC,CAOtC;;EACA,IAAIC,OAAO,GAAG,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,CAA8B;IACxCH,MAAM,EAAER,OADgC;IAExCY,SAAS,EAAE,SAF6B;IAGxCC,WAAW,EAAE,IAH2B;IAIxCV,GAAG,EAAEA,GAJmC;IAKxCW,MAAM,EAAE,EALgC;IAMxCC,WAAW,EAAE,SAN2B;IAOxCC,aAAa,EAAE,CAPyB;IAQxCC,YAAY,EAAE;EAR0B,CAA9B,CAAd;EAWA,OAAOd,GAAP;AAEH;AAED,OAAO,SAASe,WAAT,CAAqBf,GAArB,EAA0B;EAE7B,IAAIgB,OAAO,GAAG,IAAIf,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBc,MAAnB,CAA0BC,aAA9B,CAA4ClB,GAA5C,CAAd;EACA,OAAOgB,OAAP;AACH;AAED,OAAO,SAASG,wBAAT,CAAkCC,OAAlC,EAA2CJ,OAA3C,EAAoD;EAEvD,OAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACpCP,OAAO,CAACQ,YAAR,CAAqBJ,OAArB,EAA8B,CAACK,OAAD,EAAUC,MAAV,KAAqB;MAC/C,IAAIA,MAAM,KAAK,IAAf,EAAqB;QACjBJ,OAAO,CAACG,OAAD,CAAP;MACH,CAFD,MAEO;QACHF,MAAM,CAACG,MAAD,CAAN;MACH;IACJ,CAND;EAOH,CARM,CAAP;AAUH;AAED,OAAO,SAASC,wBAAT,CAAkCP,OAAlC,EAA2C,CAGjD;AAGD,OAAO,SAASQ,mBAAT,CAA6BC,GAA7B,EAAkC;EAGrC;EACA,IAAIT,OAAO,GAAG;IACVU,QAAQ,EAAED,GAAG,CAAChC,OADJ;IAEVc,MAAM,EAAEkB,GAAG,CAAClB,MAFF;IAGVoB,OAAO,EAAEF,GAAG,CAACE,OAHH;IAIVC,IAAI,EAAE,YAJI,CAIS;;EAJT,CAAd;EAQA,OAAOZ,OAAP;AACH;AAED,OAAO,SAASa,sBAAT,CAAgCJ,GAAhC,EAAqC;EAExC,IAAIK,eAAe,GAAG,kBAAtB;EACA,IAAIC,GAAG,GAAGN,GAAG,CAAChC,OAAJ,CAAYsC,GAAtB;EACA,IAAIC,GAAG,GAAGP,GAAG,CAAChC,OAAJ,CAAYuC,GAAtB;EACA,IAAIL,OAAO,GAAGF,GAAG,CAACE,OAAlB;EAEA,MAAMM,MAAM,GAAI,6DAA4DH,eAAgB,QAAOC,GAAI,QAAOC,GAAI,8BAA6BL,OAAQ,uBAAvJ;EAEA,OAAOM,MAAP;AACH;AAED,OAAO,SAASC,YAAT,CAAsBH,GAAtB,EAA2BC,GAA3B,EAAgCpC,GAAhC,EAAqC;EAExC,IAAIuC,MAAM,GAAG,IAAItC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBqC,MAAvB,CAA8B;IACvCxC,GAAG,EAAEA,GADkC;IAEvCyC,QAAQ,EAAE;MAAEN,GAAG,EAAEA,GAAP;MAAYC,GAAG,EAAEA;IAAjB;EAF6B,CAA9B,CAAb;AAKH;AAED,OAAO,SAASM,YAAT,CAAsBP,GAAtB,EAA2BC,GAA3B,EAAgCpC,GAAhC,EAAsCW,MAAtC,EAA8C;EAEjD,IAAIgC,MAAM,GAAG,IAAI1C,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,CAA8B;IACvCH,MAAM,EAAE;MAAE8B,GAAG,EAAEA,GAAP;MAAYC,GAAG,EAAEA;IAAjB,CAD+B;IAEvC3B,SAAS,EAAE,SAF4B;IAGvCC,WAAW,EAAE,IAH0B;IAIvCV,GAAG,EAAEA,GAJkC;IAKvCW,MAAM,EAAEA,MAL+B;IAMvCC,WAAW,EAAE,SAN0B;IAOvCC,aAAa,EAAE,CAPwB;IAQvCC,YAAY,EAAE;EARyB,CAA9B,CAAb;AAUH;AAED,OAAO,SAAS8B,kBAAT,CAA4BnB,OAA5B,EAAqC;EAExC,IAAIoB,WAAW,GAAG,EAAlB;EACA/C,OAAO,CAACC,GAAR,CAAY0B,OAAZ;EACA,IAAIqB,aAAa,GAAG,EAApB;;EACA,IAAIrB,OAAO,IAAI,cAAX,IAA6BsB,SAAjC,EAA4C;IAExCF,WAAW,CAACG,IAAZ,GAAmB,CAAnB;IACAF,aAAa,CAACG,IAAd,CAAmBJ,WAAnB;IAEA,OAAOC,aAAP;EAEH;;EACD,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,OAAO,CAAC0B,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IAErC,IAAIE,MAAM,GAAG3B,OAAO,CAACyB,CAAD,CAApB;IACAL,WAAW,GAAG,EAAd;IAEAA,WAAW,CAACG,IAAZ,GAAmBI,MAAM,CAACJ,IAA1B;IACAH,WAAW,CAACQ,QAAZ,GAAuBD,MAAM,CAACC,QAA9B;IACAR,WAAW,CAACS,MAAZ,GAAqBF,MAAM,CAACE,MAA5B;IACAT,WAAW,CAACV,GAAZ,GAAkBiB,MAAM,CAACG,QAAP,CAAgBzB,QAAhB,CAAyBK,GAAzB,EAAlB;IACAU,WAAW,CAACT,GAAZ,GAAkBgB,MAAM,CAACG,QAAP,CAAgBzB,QAAhB,CAAyBM,GAAzB,EAAlB;IACAS,WAAW,CAACb,IAAZ,GAAmB,CAAnB,CAVqC,CAYtC;;IAGAlC,OAAO,CAACC,GAAR,CAAYqD,MAAZ;IAGCN,aAAa,CAACG,IAAd,CAAmBJ,WAAnB;EACH;;EAGD,OAAOC,aAAP;AAGH;AAED,OAAO,SAASU,qBAAT,CAA+BC,GAA/B,EAAoC;EAIvC,IAAIZ,WAAW,GAAG,EAAlB;EACA,IAAIC,aAAa,GAAG,EAApB;EACA,IAAIrB,OAAO,GAAGgC,GAAG,CAACC,IAAJ,CAASjC,OAAT,CAAiBkC,IAA/B;;EACA,IAAIF,GAAG,CAACC,IAAJ,CAASjC,OAAT,CAAiBkC,IAAjB,CAAsBR,MAAtB,IAAgC,CAApC,EAAuC;IAEnCN,WAAW,CAACG,IAAZ,GAAmB,CAAnB;IACAF,aAAa,CAACG,IAAd,CAAmBJ,WAAnB;IAEA,OAAOC,aAAP;EAEH;;EACD,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,OAAO,CAAC0B,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IAErC,IAAIE,MAAM,GAAG3B,OAAO,CAACyB,CAAD,CAApB;IACAL,WAAW,GAAG,EAAd;IAEAA,WAAW,CAACG,IAAZ,GAAmBI,MAAM,CAACJ,IAA1B;IACAH,WAAW,CAACQ,QAAZ,GAAuBD,MAAM,CAACQ,OAA9B;IACAf,WAAW,CAACS,MAAZ,GAAqB,EAArB;IACAT,WAAW,CAACV,GAAZ,GAAkBiB,MAAM,CAACjB,GAAzB;IACAU,WAAW,CAACT,GAAZ,GAAkBgB,MAAM,CAAChB,GAAzB;IACAS,WAAW,CAACb,IAAZ,GAAmB,CAAnB;IACAa,WAAW,CAACgB,KAAZ,GAAoBT,MAAM,CAACS,KAAP,CAAaC,MAAb,CAAoBC,CAAxC;IAEAjB,aAAa,CAACG,IAAd,CAAmBJ,WAAnB;EAEH;;EAED,OAAOC,aAAP;AAGH;AAED,OAAO,SAASkB,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;EAEvCpE,OAAO,CAACC,GAAR,CAAYkE,IAAZ;EACAnE,OAAO,CAACC,GAAR,CAAYmE,IAAZ;;EACA,IAAID,IAAI,CAAC,CAAD,CAAJ,CAAQjB,IAAR,IAAgB,CAAhB,IAAqBkB,IAAI,CAAC,CAAD,CAAJ,CAAQlB,IAAR,IAAgB,CAAzC,EAA4C;IACxC,OAAOiB,IAAP;EACH,CAFD,MAEO,IAAIC,IAAI,CAAC,CAAD,CAAJ,CAAQlB,IAAR,IAAgB,CAApB,EAAuB;IAC1B,OAAOiB,IAAP;EACH,CAFM,MAEA,IAAIC,IAAI,CAAC,CAAD,CAAJ,CAAQlB,IAAR,IAAgB,CAApB,EAAuB;IAC1B,OAAOiB,IAAP;EACH;;EAED,IAAIE,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAYF,IAAZ,CAAX;EAEA,OAAOC,IAAP;AAEH;;AAED,SAASE,qBAAT,CAA+BC,GAA/B,EAAoC;EAChC,IAAIC,GAAG,GAAI,iFAAgFD,GAAI,mBAA/F;AAEH"},"metadata":{},"sourceType":"module"}