{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice } from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet map, service;\nlet shouldMapInitialize = true;\nlet hasUserLocation,\n    isUserLocRequested = false;\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\nconst radius = 1000;\nexport const getMapObject = () => {\n  return map;\n};\nexport const getServiceObject = () => {\n  return service;\n};\n\nfunction GMap(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const searchRequest = useSelector(state => state.app.searchRequest);\n  const selectorMapSlice = useSelector(state => state.mapSlice.isUserLocRequested);\n  const GmapMemo = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  });\n\n  if (searchRequest.isDone == false) {\n    dispatch(appSlice.actions.setRequestDone());\n    let req = createGoogleRequest(searchRequest, props.userLoc);\n    doGoogleMapSearchPromise(req, service).then(response => {\n      let res = resultsParser(response); //places found! put them into parser to parse them for easier prossesing.\n\n      dispatch(resultListSlice.actions.setSearchResult(res));\n    }).catch(status => {\n      let res = resultsParser(0); //error in searching.\n\n      dispatch(resultListSlice.actions.setSearchResult(res));\n    });\n  }\n\n  useEffect(() => {\n    if (!hasUserLocation && isUserLocRequested) {\n      let prm = getUserLocation.then(function (value) {\n        userLocation = {\n          lat: value.coords.latitude,\n          lng: value.coords.longitude\n        };\n        hasUserLocation = true;\n      }).catch(value => {\n        hasUserLocation = false;\n      }).finally(() => {});\n    }\n\n    if (shouldMapInitialize) {\n      map = initMap(document.getElementById('map'), userLocation);\n      service = initService(map);\n      shouldMapInitialize = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GMap, \"0UkXc+i5mMglldSl0OWhe/0Uhs8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = GMap;\n\nconst resultsParser = results => {\n  let parsedResults = [];\n\n  if (results == 0 || results.length <= 0) {\n    let result_temp = {};\n    result_temp.name = '何も見つかりませんでした。';\n    result_temp.vicinity = '';\n    result_temp.rating = '';\n    parsedResults.push(result_temp);\n    return parsedResults;\n  }\n\n  for (let i = 0; i < results.length; i++) {\n    let result_temp = {};\n    let result = results[i];\n    createMarker(result, i + 1, map);\n    result_temp.name = result.name;\n    result_temp.vicinity = result.vicinity;\n    result_temp.rating = result.rating;\n    result_temp.lat = result.geometry.location.lat();\n    result_temp.lng = result.geometry.location.lng();\n    parsedResults.push(result_temp);\n  }\n\n  return parsedResults;\n};\n\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"names":["React","useEffect","resultListSlice","appSlice","mapSlice","useSelector","useDispatch","axios","initMap","initService","doGoogleMapSearchPromise","createGoogleRequest","createMarker","map","service","shouldMapInitialize","hasUserLocation","isUserLocRequested","userLocation","lat","lng","radius","getMapObject","getServiceObject","GMap","props","dispatch","searchRequest","state","app","selectorMapSlice","GmapMemo","memo","name","isDone","actions","setRequestDone","req","userLoc","then","response","res","resultsParser","setSearchResult","catch","status","prm","getUserLocation","value","coords","latitude","longitude","finally","document","getElementById","results","parsedResults","length","result_temp","vicinity","rating","push","i","result","geometry","location","Promise","resolve","reject","navigator","geolocation","getCurrentPosition"],"sources":["/Users/kokiyamamoto/Desktop/projects/FoodsMap/src/components/gmap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { resultListSlice } from '../redux/resultListSlice';\nimport { appSlice } from '../redux/appSlice';\nimport { mapSlice} from '../redux/mapSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './gmap.css';\nimport axios from 'axios';\nimport { initMap, initService, doGoogleMapSearchPromise, createGoogleRequest, createMarker } from './mapapi'\n\n\nlet map, service;\nlet shouldMapInitialize = true;\nlet hasUserLocation, isUserLocRequested = false;\nlet userLocation = {\n    lat: 35.41221,\n    lng: 139.4130\n};\n\nconst radius = 1000;\n\nexport const getMapObject = () => {\n\n    return map; \n\n}\n\nexport const getServiceObject = () => {\n\n    return service;\n\n}\n\n\n\nfunction GMap(props) {\n\n    let dispatch = useDispatch();\n\n    const searchRequest = useSelector(state => state.app.searchRequest);\n    const selectorMapSlice = useSelector(state => state.mapSlice.isUserLocRequested);\n\n    const GmapMemo = React.memo(props => {\n        return <h1>Hello {props.name}</h1>;\n    });\n\n    if (searchRequest.isDone == false) {\n\n        dispatch(appSlice.actions.setRequestDone());\n\n        let req = createGoogleRequest(searchRequest, props.userLoc);\n\n        doGoogleMapSearchPromise(req, service).then((response) => {\n\n            let res = resultsParser(response);//places found! put them into parser to parse them for easier prossesing.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n\n        }).catch((status) => {\n\n            let res = resultsParser(0); //error in searching.\n            dispatch(resultListSlice.actions.setSearchResult(res));\n\n        });\n\n    }\n\n    useEffect(() => {\n\n        if (!hasUserLocation && isUserLocRequested) {\n            let prm = getUserLocation.then(function (value) {\n\n                userLocation = {\n                    lat: value.coords.latitude,\n                    lng: value.coords.longitude\n                };\n                hasUserLocation = true;\n\n            }).catch(value => {\n\n                hasUserLocation = false;\n\n            }).finally(() => {\n\n                \n\n            });\n            \n        }\n\n        if (shouldMapInitialize) {\n            map = initMap(document.getElementById('map'), userLocation);\n            service = initService(map);\n            shouldMapInitialize = false;\n        }\n    })\n\n\n\n    return (\n        <div>\n            <div style={{}} id='map'></div>\n        </div>\n    )\n}\n\n\nconst resultsParser = (results) => {\n\n    let parsedResults = [];\n    if (results == 0 || results.length <= 0) {\n\n        let result_temp = {};\n        result_temp.name = '何も見つかりませんでした。';\n        result_temp.vicinity = '';\n        result_temp.rating = '';\n        parsedResults.push(result_temp);\n        return parsedResults;\n\n    }\n    for (let i = 0; i < results.length; i++) {\n\n        let result_temp = {};\n        let result = results[i];\n        createMarker(result, i + 1, map);\n\n        result_temp.name = result.name;\n        result_temp.vicinity = result.vicinity;\n        result_temp.rating = result.rating;\n        result_temp.lat = result.geometry.location.lat();\n        result_temp.lng = result.geometry.location.lng();\n        parsedResults.push(result_temp);\n    }\n\n    return parsedResults;\n\n}\n\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\nexport default GMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}