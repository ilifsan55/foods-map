{"ast":null,"code":"var _jsxFileName = \"/Users/kokiyamamoto/Desktop/Gohan/src/main.jsx\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MapPage from './pages/mappage';\nimport './main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet hasUserLocation = false;\nlet userLocation = {\n  lat: 35.41221,\n  lng: 139.4130\n};\n\nfunction App() {\n  let drawElement;\n\n  if (!hasUserLocation) {\n    let prm = getUserLocation.then(function (value) {\n      userLocation = {\n        lat: value.coords.latitude,\n        lng: value.coords.longitude\n      };\n      hasUserLocation = true;\n    }).catch(function (value) {\n      hasUserLocation = false;\n    });\n  }\n\n  if (appState == 0) {\n    drawElement = /*#__PURE__*/_jsxDEV(MapPage, {\n      userLoc: userLocation,\n      radius: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this);\n  } else if (appState == 1) {} else if (appState == 2) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: drawElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nconst getUserLocation = new Promise((resolve, reject) => {\n  navigator.geolocation.getCurrentPosition(resolve, reject);\n});\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","MapPage","hasUserLocation","userLocation","lat","lng","App","drawElement","prm","getUserLocation","then","value","coords","latitude","longitude","catch","appState","Promise","resolve","reject","navigator","geolocation","getCurrentPosition"],"sources":["/Users/kokiyamamoto/Desktop/Gohan/src/main.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport MapPage from './pages/mappage';\nimport './main.css'\n\nlet hasUserLocation = false;\nlet userLocation = {\n    lat: 35.41221,\n    lng: 139.4130\n};\n\nfunction App() {\n\n    let drawElement;\n\n    if (!hasUserLocation) {\n        let prm = getUserLocation.then(function (value) {\n\n            userLocation = {\n                lat: value.coords.latitude,\n                lng: value.coords.longitude\n            };\n            hasUserLocation = true;\n\n        }).catch(function (value) {\n\n            hasUserLocation = false;\n\n        });\n    }\n\n    if (appState == 0) {\n\n        drawElement = <MapPage userLoc={userLocation} radius={1000}></MapPage>;\n\n    } else if (appState == 1) {\n\n\n    } else if (appState == 2) {\n\n    }\n\n    return (\n        <div className='App'>\n            {drawElement}\n        </div>\n    );\n}\n\n\n\nconst getUserLocation = new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject)\n})\n\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,YAAP;;AAEA,IAAIC,eAAe,GAAG,KAAtB;AACA,IAAIC,YAAY,GAAG;EACfC,GAAG,EAAE,QADU;EAEfC,GAAG,EAAE;AAFU,CAAnB;;AAKA,SAASC,GAAT,GAAe;EAEX,IAAIC,WAAJ;;EAEA,IAAI,CAACL,eAAL,EAAsB;IAClB,IAAIM,GAAG,GAAGC,eAAe,CAACC,IAAhB,CAAqB,UAAUC,KAAV,EAAiB;MAE5CR,YAAY,GAAG;QACXC,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaC,QADP;QAEXR,GAAG,EAAEM,KAAK,CAACC,MAAN,CAAaE;MAFP,CAAf;MAIAZ,eAAe,GAAG,IAAlB;IAEH,CARS,EAQPa,KARO,CAQD,UAAUJ,KAAV,EAAiB;MAEtBT,eAAe,GAAG,KAAlB;IAEH,CAZS,CAAV;EAaH;;EAED,IAAIc,QAAQ,IAAI,CAAhB,EAAmB;IAEfT,WAAW,gBAAG,QAAC,OAAD;MAAS,OAAO,EAAEJ,YAAlB;MAAgC,MAAM,EAAE;IAAxC;MAAA;MAAA;MAAA;IAAA,QAAd;EAEH,CAJD,MAIO,IAAIa,QAAQ,IAAI,CAAhB,EAAmB,CAGzB,CAHM,MAGA,IAAIA,QAAQ,IAAI,CAAhB,EAAmB,CAEzB;;EAED,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,UACKT;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;KApCQD,G;AAwCT,MAAMG,eAAe,GAAG,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EACrDC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;AACH,CAFuB,CAAxB;AAKA,eAAeb,GAAf"},"metadata":{},"sourceType":"module"}